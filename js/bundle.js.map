{"version":3,"sources":["webpack:///webpack/bootstrap 7781c1fe7d8a4e143bca","webpack:///./js/bitboard/index.js","webpack:///./js/pieces/constants.js","webpack:///./js/pieces/index.js","webpack:///./js/pieces/movements/dir_constants.js","webpack:///./js/pieces/movements/masks.js","webpack:///./js/pieces/movements/slide_moves.js","webpack:///./js/bitboard/bitboard.js","webpack:///./js/pieces/movements/step_move.js","webpack:///./js/ui/constants.js","webpack:///./js/app.js","webpack:///./js/ui/index.js","webpack:///./js/position/index.js","webpack:///./js/bitboard/utils.js","webpack:///./js/bitboard/masks.js","webpack:///./js/move/index.js","webpack:///./js/move/constants.js","webpack:///./js/pieces/pawns.js","webpack:///./js/pieces/knight.js","webpack:///./js/pieces/bishop.js","webpack:///./js/pieces/rook.js","webpack:///./js/pieces/queen.js","webpack:///./js/pieces/king.js","webpack:///./js/pieces/conversions.js","webpack:///./js/pieces/each_piece_type.js","webpack:///./js/position/utils/array_conversions.js","webpack:///./js/ai/index.js","webpack:///./js/ui/util.js"],"names":["BitBoard","require","Masks","module","exports","BBMasks","Colors","WHITE","BLACK","Types","PAWNS","KNIGHTS","BISHOPS","ROOKS","QUEENS","KINGS","PieceTypeLetters","PieceTypeHTML","Constants","Pawns","Knight","Bishop","Rook","Queen","King","PieceConv","eachPieceType","Dirs","PUtils","PTypes","DIRS","stepMove","generateStepBitBoards","dirs","res","pos","initial","posRes","addMove","currRes","dir","or","fromPos","reduce","push","KNIGHT_MOVES","KING_MOVES","SLIDE_MOVES","moves","colIdx","rowIdx","diagIdx","antiDiagIdx","Math","floor","NORTH","COLS","and","NORTH_OF_ROW","SOUTH","SOUTH_OF_ROW","EAST","ROWS","EAST_OF_COL","WEST","WEST_OF_COL","NOEA","DIAGS","SOWE","NOWE","ANTI_DIAGS","SOEA","isPosRay","findUnblocked","occupied","posBB","dirBB","blocking","blockingPos","isZero","bitScanForward","bitScanReverse","xor","horizVert","notOwnPieces","diag","Utils","low","high","other","numBits","newLowBits","newHighBits","count","int32","popCount32","bitScanForward32","Boolean","bitScanReverse32","cb","clearLeastSigBit32","row","pow","posVal","console","log","length","setBit","positions","forEach","colNum","rowNum","posMax","startPos","noSo","eaWe","shiftLeft","shiftRight","ColsFiles","FilesCols","file","col","RowsRanks","RanksRows","rank","Selectors","BOARD_ID","PIECE_CLASS","SQUARE_CLASS","RANK_CLASS","FILE_CLASS","UI","$","document","ready","ui","run","Position","AI","Util","position","playerColor","ai","currMoves","generateLegalMoves","drawBoard","playNextTurn","updatePieces","turn","setupPlayerMove","setTimeout","aiMove","newRow","append","fileRank","newSquare","squareColor","isDarkSquare","addClass","board","newRankRow","generateSquare","prepend","generateFileHeader","remove","removeClass","pieceTypes","Object","values","pieces","newPiece","pieceType","dup","pop1Bits","hasSetBit","fileRankFromPos","move","chooseMove","animateMove","makeMove","pieceEl","getFrom","getTo","getCaptPiece","captPiece","captOffset","offset","css","left","top","fadeOut","oldOffset","appendTo","newOffset","animPiece","clone","hide","animate","show","movesData","map","getData","moveFromTos","moveToFroms","moveData","from","to","activateDraggablePieces","activateDroppableSquares","fromFileRank","keys","draggable","containment","revert","revertDuration","mouseenter","toPos","mouseleave","destSq","originSquare","originPos","selectedMove","droppable","accept","parent","attr","posFromFileRank","includes","drop","event","filter","parseInt","Move","MoveTypes","pieceSetsToArray","pieceSetsFromArray","prevMoves","castleRights","epBB","prevStates","pTypesLocations","createPTypesLocations","setTurn","getOtherColor","getPieceAt","opp","color","includeQuiet","addPawnMoves","addNormalMoves","addKingMoves","pseudoMoves","generatePseudoMoves","isLegal","legals","pseudoMove","testMove","testsLegal","pawnsPos","getColorPieceSet","notOccupied","getOccupied","not","pawnSinglePushes","singlePush","addPawnMoveSet","pawnDoublePushes","doublePush","oppPositions","pawnLeftAttacks","attacksLeft","pawnRightAttacks","attacksRight","newPositions","shiftAmt","isCapture","isDblPush","captured","DBL_PPUSH","EP_CAPT","PROMO_MASKS","addPromos","NORMAL","NPROMO","BPROMO","RPROMO","QPROMO","promoType","getNotOccupiedBy","knightsPos","knightMoves","addNormalMoveSet","bishopsPos","bishopMoves","rooksPos","rookMoves","queenPos","queenMoves","kingPos","normalMoves","addCastleMoves","newPos","newMove","captType","turnCastleRights","getCastleRights","INIT_POS","canCastle","CSTL_QUEEN","CSTL_KING","types","idx","type","addPrevState","adjustCastleRights","captPieceType","execMoveType","swapTurn","clearPieceAt","isPromo","movePiece","undo","setPieceAt","isCastle","isLegalCastle","inCheck","castleType","isAttacked","val","oppColor","pawns","queenBB","prevMove","pop","reverseMoveType","prevState","clearCastlePos","clearCastleRightsMask","state","epPos","capturedPos","clearBit","boardType","render","boardArr","rowStr","int","generateMSBTable","max","log2","mostSigBitTable","FULL_BOARD","cols","fromCol","rows","fromRow","diags","upperRightDiag","antiDiags","upperLeftDiag","bb","piece","getType","getPiece","typesArr","INIT_MASKS","value","positionValues","oppPieces","onePush","castleSlide","popCount","pieceToLetter","toUpperCase","letterToColor","letter","letterToType","toLowerCase","xx","WP","WN","WB","WR","WQ","WK","BP","BN","BB","BR","BQ","BK","defaultBoardArr","createEmptyBoardArr","array","score","piecePositions","materialScore","scoreMaterial","piecePositionScore","scorePiecePositions","startTime","Date","maxDepth","exploredNodes","movesMade","qSearchTime","negaMax","Infinity","bestMove","alpha","beta","standPatVal","evaluate","sortMoves","moveIdx","quiescenceSearch","unmakePrevMove","depth","startQTime","qSearchScore","canMove","calculateScore","sort","moveA","moveB","split"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7781c1fe7d8a4e143bca","const BitBoard = require('./bitboard.js');\nconst Masks = require('./masks.js');\n\nmodule.exports = {\n  BitBoard,\n  BBMasks: Masks,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./js/bitboard/index.js","const Colors = {\n  WHITE: 0,\n  BLACK: 1\n};\n\nconst Types = {\n  PAWNS: 2,\n  KNIGHTS: 3,\n  BISHOPS: 4,\n  ROOKS: 5,\n  QUEENS: 6,\n  KINGS: 7\n};\n\nconst PieceTypeLetters = {\n  [Types.PAWNS]: 'p',\n  [Types.KNIGHTS]: 'n',\n  [Types.BISHOPS]: 'b',\n  [Types.ROOKS]: 'r',\n  [Types.QUEENS]: 'q',\n  [Types.KINGS]: 'k',\n};\n\nconst PieceTypeHTML = {\n  [Types.PAWNS]: '&#9823;',\n  [Types.KNIGHTS]: '&#9822;',\n  [Types.BISHOPS]: '&#9821;',\n  [Types.ROOKS]: '&#9820;',\n  [Types.QUEENS]: '&#9819;',\n  [Types.KINGS]: '&#9818;',\n};\n\nmodule.exports = { Types, Colors, PieceTypeLetters, PieceTypeHTML };\n\n\n\n// WEBPACK FOOTER //\n// ./js/pieces/constants.js","// const { WhitePawns, BlackPawns } = require('./pawns.js');\nconst Constants = require('./constants.js');\nconst Pawns = require('./pawns.js');\nconst Knight = require('./knight.js');\nconst Bishop = require('./bishop.js');\nconst Rook = require('./rook.js');\nconst Queen = require('./queen.js');\nconst King = require('./king.js');\nconst PieceConv = require('./conversions.js');\nconst eachPieceType = require('./each_piece_type.js');\nconst Dirs = require('./movements/dir_constants.js');\n\nconst PUtils = {\n  [Constants.Types.PAWNS]: Pawns,\n  [Constants.Types.KNIGHTS]: Knight,\n  [Constants.Types.BISHOPS]: Bishop,\n  [Constants.Types.ROOKS]: Rook,\n  [Constants.Types.QUEENS]: Queen,\n  [Constants.Types.KINGS]: King\n};\n\nmodule.exports = {\n  PTypes: Constants.Types,\n  Colors: Constants.Colors,\n  PieceTypeHTML: Constants.PieceTypeHTML,\n  PUtils,\n  eachPieceType,\n  Dirs,\n  PieceConv\n};\n\n\n\n// WEBPACK FOOTER //\n// ./js/pieces/index.js","const DIRS = {\n  'NORTH': 0,\n  'SOUTH': 1,\n  'EAST': 2,\n  'WEST': 3,\n  'NOEA': 4,\n  'NOWE': 5,\n  'SOEA': 6,\n  'SOWE': 7\n};\n\nmodule.exports = DIRS;\n\n\n\n// WEBPACK FOOTER //\n// ./js/pieces/movements/dir_constants.js","const { BitBoard, BBMasks } = require('../../bitboard');\nconst Dirs = require('./dir_constants.js');\nconst stepMove = require('./step_move.js');\n\nfunction generateStepBitBoards(dirs) {\n  const res = [];\n  let pos = 0;\n  let initial;\n  let posRes;\n\n  const addMove = (currRes, dir) => {\n    return currRes.or(stepMove(initial, dir[0], dir[1]));\n  };\n\n  while (pos < 64) {\n    initial = BitBoard.fromPos(pos);\n    posRes = dirs.reduce((currRes, dir) => addMove(currRes, dir), new BitBoard());\n    res.push(posRes);\n    pos++;\n  }\n\n  return res;\n}\n\nconst KNIGHT_MOVES = function() {\n  const dirs = [[1, 2], [1, -2],\n                [2, 1], [2, -1],\n                [-1, 2], [-1, -2],\n                [-2, 1], [-2, -1]];\n\n  return generateStepBitBoards(dirs);\n}();\n\nconst KING_MOVES = function() {\n  const dirs = [[1, 0], [1, 1],\n                [1, -1],[-1, 0],\n                [-1, 1], [-1, -1],\n                [0, -1], [0, 1]];\n\n  return generateStepBitBoards(dirs);\n}();\n\nconst SLIDE_MOVES = function() {\n  let pos = 0;\n  const res = [];\n  let moves;\n  let colIdx;\n  let rowIdx;\n  let diagIdx;\n  let antiDiagIdx;\n\n  while (pos < 64) {\n    moves = {};\n    rowIdx = Math.floor(pos / 8);\n    colIdx = pos % 8;\n    diagIdx = (pos < rowIdx * 9) ? (pos % 9) - 2 : (pos % 9) + 7;\n    if (pos === 63) {\n      antiDiagIdx = 14;\n    } else {\n      antiDiagIdx = (pos < (rowIdx + 1) * 7) ? (pos % 7) : (pos % 7) + 7;\n    }\n    moves[Dirs.NORTH] = BBMasks.COLS[colIdx].and(BBMasks.NORTH_OF_ROW[rowIdx]);\n    moves[Dirs.SOUTH] = BBMasks.COLS[colIdx].and(BBMasks.SOUTH_OF_ROW[rowIdx]);\n    moves[Dirs.EAST] = BBMasks.ROWS[rowIdx].and(BBMasks.EAST_OF_COL[colIdx]);\n    moves[Dirs.WEST] = BBMasks.ROWS[rowIdx].and(BBMasks.WEST_OF_COL[colIdx]);\n    moves[Dirs.NOEA] = BBMasks.DIAGS[diagIdx].and(BBMasks.NORTH_OF_ROW[rowIdx]);\n    moves[Dirs.SOWE] = BBMasks.DIAGS[diagIdx].and(BBMasks.SOUTH_OF_ROW[rowIdx]);\n    moves[Dirs.NOWE] = BBMasks.ANTI_DIAGS[antiDiagIdx].and(BBMasks.NORTH_OF_ROW[rowIdx]);\n    moves[Dirs.SOEA] = BBMasks.ANTI_DIAGS[antiDiagIdx].and(BBMasks.SOUTH_OF_ROW[rowIdx]);\n    res.push(moves);\n    pos++;\n  }\n\n  return res;\n}();\n\nmodule.exports = {\n  KNIGHT_MOVES,\n  KING_MOVES,\n  SLIDE_MOVES,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./js/pieces/movements/masks.js","const { BitBoard, BBMasks } = require('../../bitboard');\nconst { SLIDE_MOVES } = require('./masks.js');\nconst Dirs = require('./dir_constants.js');\n\nconst isPosRay = {\n  [Dirs.NORTH]: true,\n  [Dirs.EAST]: true,\n  [Dirs.NOEA]: true,\n  [Dirs.NOWE]: true,\n  [Dirs.SOUTH]: false,\n  [Dirs.WEST]: false,\n  [Dirs.SOEA]: false,\n  [Dirs.SOWE]: false\n};\n\nfunction findUnblocked(pos, occupied, dir) {\n  const posBB = new BitBoard();\n  const dirBB = SLIDE_MOVES[pos][dir];\n  const blocking = dirBB.and(occupied);\n  let blockingPos;\n\n  if (blocking.isZero()) {\n    return dirBB;\n  } else {\n    blockingPos = isPosRay[dir] ? blocking.bitScanForward() : blocking.bitScanReverse();\n    return dirBB.xor(SLIDE_MOVES[blockingPos][dir]);\n  }\n}\n\nfunction horizVert(pos, occupied, notOwnPieces) {\n  return [Dirs.NORTH, Dirs.SOUTH, Dirs.EAST, Dirs.WEST].reduce((res, dir) => {\n    return res.or(findUnblocked(pos, occupied, dir));\n  }, new BitBoard()).and(notOwnPieces);\n}\n\nfunction diag(pos, occupied, notOwnPieces) {\n  return [Dirs.NOEA, Dirs.NOWE, Dirs.SOEA, Dirs.SOWE].reduce((res, dir) => {\n    return res.or(findUnblocked(pos, occupied, dir));\n  }, new BitBoard()).and(notOwnPieces);\n}\n\nmodule.exports = {\n  horizVert,\n  diag\n};\n\n\n\n// WEBPACK FOOTER //\n// ./js/pieces/movements/slide_moves.js","const Utils = require('./utils.js');\n// A standard 8x8 chess board can be represented by a 64bit integer (bitboard),\n// in which a 1 means the position is occupied, a 0 means it's empty\n\n// We use several of these bitboards to represent a chess position\n// for example, the current set of pieces is represented by a bitboard\n// for each piece type and color\n\n// Since Javascript doesn't support bitwise operations for 64bit integers,\n// we implement most of those operations here, separating the 64bit int\n// into its low 32bit and high 32bit components\n\n//56 57 58 59 60 61 62 63\n//48 49 50 51 52 53 54 55  ^\n//40 41 42 43 44 45 46 47  |\n//32 33 34 35 36 37 38 39 HIGH\n//24 25 26 27 28 29 30 31 LOW\n//16 17 18 19 20 21 22 23  |\n// 8  9 10 11 12 13 14 15  v\n// 0  1  2  3  4  5  6  7\n\nclass BitBoard {\n  constructor(low, high) {\n    this.low = (low || 0) >>> 0;\n    this.high = (high || 0) >>> 0;\n  }\n\n  and(other) {\n    return new BitBoard(this.low & other.low, this.high & other.high);\n  }\n\n  or(other) {\n    return new BitBoard(this.low | other.low, this.high | other.high);\n  }\n\n  xor(other) {\n    return new BitBoard(this.low ^ other.low, this.high ^ other.high);\n  }\n\n  not() {\n    return new BitBoard(~this.low, ~this.high);\n  }\n\n  equals(other) {\n    return (this.low === other.low && this.high === other.high);\n  }\n\n  greaterThan(other) {\n    return (this.high > other.high || this.low > other.low);\n  }\n\n  lessThan(other) {\n    return (this.high < other.high || this.low < other.low);\n  }\n\n  isZero() {\n    return (this.high === 0 && this.low === 0);\n  }\n\n  shiftRight(numBits) {\n    let newLowBits, newHighBits;\n\n    if (numBits <= 0) {\n      return new BitBoard(this.low, this.high);\n    } else if (numBits > 63) {\n      return new BitBoard();\n    } else if (numBits >= 32) {\n      newLowBits = this.high >>> (numBits - 32);\n      newHighBits = 0;\n    } else {\n      newLowBits = (this.low >>> numBits) | (this.high << (32 - numBits));\n      newHighBits = this.high >>> numBits;\n    }\n\n    return new BitBoard(newLowBits, newHighBits);\n  }\n\n  shiftLeft(numBits) {\n    let newLowBits, newHighBits;\n\n    if (numBits <= 0) {\n      return new BitBoard(this.low, this.high);\n    } else if (numBits > 63) {\n      return new BitBoard();\n    } else if (numBits >= 32) {\n      newLowBits = 0;\n      newHighBits = (this.low << (numBits - 32)) >>> 0;\n    } else {\n      newLowBits = (this.low << numBits) >>> 0;\n      newHighBits =  ((this.low >>> (32 - numBits)) | (this.high << numBits)) >>> 0;\n    }\n\n    return new BitBoard(newLowBits, newHighBits);\n  }\n\n  popCount() {\n      return [this.low, this.high].reduce((count, int32) => {\n        return count + Utils.popCount32(int32);\n      }, 0);\n  }\n\n  setBit(pos) {\n    if (pos >= 32 && pos < 64) {\n      this.high = (this.high | (1 << (pos - 32))) >>> 0;\n    } else if (pos >= 0 && pos < 32) {\n      this.low = (this.low | (1 << pos)) >>> 0;\n    }\n  }\n\n  clearBit(pos) {\n    if (pos >= 32) {\n      this.high = (this.high & ~(1 << (pos - 32))) >>> 0;\n    } else {\n      this.low = (this.low & ~(1 << pos)) >>> 0;\n    }\n  }\n\n  bitScanForward() {\n    if (this.low) {\n      return Utils.bitScanForward32(this.low);\n    } else if (this.high) {\n      return Utils.bitScanForward32(this.high) + 32;\n    } else {\n      return null;\n    }\n  }\n\n  hasSetBit(pos) {\n    if (pos < 32) {\n      return Boolean(this.low & (1 << pos));\n    } else {\n      return Boolean(this.high & (1 << (pos - 32)));\n    }\n  }\n\n  bitScanReverse() {\n    if (this.high) {\n      return Utils.bitScanReverse32(this.high) + 32;\n    } else if (this.low) {\n      return Utils.bitScanReverse32(this.low);\n    } else {\n      return null;\n    }\n  }\n\n  pop1Bits(cb) {\n    while (this.low) {\n      cb(Utils.bitScanForward32(this.low));\n      this.low = Utils.clearLeastSigBit32(this.low);\n    }\n\n    while (this.high) {\n      cb(Utils.bitScanForward32(this.high) + 32);\n      this.high = Utils.clearLeastSigBit32(this.high);\n    }\n  }\n\n  dup() {\n    return new BitBoard(this.low, this.high);\n  }\n\n  static fromPos(pos) {\n    const res = new BitBoard();\n    res.setBit(pos);\n\n    return res;\n  }\n\n  static fromPositions(positions) {\n    const res = new BitBoard();\n\n    positions.forEach((pos) => {\n      res.setBit(pos);\n    });\n\n    return res;\n  }\n\n  static fromCol(colNum) {\n    const res = new BitBoard();\n    if (colNum < 0 || colNum > 7) { return res; }\n    let pos = colNum;\n\n    while (pos < 64) {\n      res.setBit(pos);\n      pos += 8;\n    }\n\n    return res;\n  }\n\n  static fromRow(rowNum) {\n    const res = new BitBoard();\n    if (rowNum < 0 || rowNum > 7) { return res; }\n\n    let pos = rowNum * 8;\n    let posMax = pos + 7;\n\n    while (pos <= posMax) {\n      res.setBit(pos);\n      pos++;\n    }\n\n    return res;\n  }\n\n  static upperRightDiag(startPos) {\n    const res = BitBoard.fromPos(startPos);\n    if (startPos < 0 || startPos > 63) { return res; }\n    let pos = startPos + 9;\n\n    while (pos < 64 && pos % 8 !== 0) {\n      res.setBit(pos);\n      pos += 9;\n    }\n\n    return res;\n  }\n\n  static upperLeftDiag(startPos) {\n    const res = new BitBoard();\n    if (startPos < 0 || startPos > 63) { return res; }\n    let pos = startPos;\n\n    while (pos < 64 && pos % 8 !== 0) {\n      res.setBit(pos);\n      pos += 7;\n    }\n\n    if (pos < 64) {\n      res.setBit(pos);\n    }\n\n    return res;\n  }\n\n  render() {\n    let row = '';\n    let pow = 63;\n    let posVal;\n    console.log('------');\n    while (pow >= 32) {\n      posVal = (Math.pow(2, pow - 32) & this.high) === 0 ? '0' : '1';\n      row = posVal + row;\n      if (row.length === 8) {\n        console.log(row);\n        row = '';\n      }\n      pow--;\n    }\n\n    while (pow >= 0) {\n      posVal = (Math.pow(2, pow) & this.low) === 0 ? '0' : '1';\n      row = posVal + row;\n      if (row.length === 8) {\n        console.log(row);\n        row = '';\n      }\n      pow--;\n    }\n    console.log('------');\n  }\n}\n\n\nmodule.exports = BitBoard;\n\n\n\n// WEBPACK FOOTER //\n// ./js/bitboard/bitboard.js","const { BitBoard, BBMasks } = require('../../bitboard');\n\nfunction stepMove(initial, noSo, eaWe) {\n  let positions = initial;\n\n  if (noSo > 0) {\n    positions = positions.shiftLeft(noSo * 8);\n  } else if (noSo < 0){\n    positions = positions.shiftRight(noSo * -8);\n  }\n\n  if (eaWe > 0) {\n    positions = positions.shiftLeft(eaWe).and(BBMasks.EAST_OF_COL[eaWe - 1]);\n  } else if (eaWe < 0){\n    positions = positions.shiftRight(-eaWe).and(BBMasks.WEST_OF_COL[eaWe + 8]);\n  }\n\n  return positions;\n}\n\nmodule.exports = stepMove;\n\n\n\n// WEBPACK FOOTER //\n// ./js/pieces/movements/step_move.js","const ColsFiles = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n\nconst FilesCols = function() {\n  return ColsFiles.reduce((res, file, col) => {\n    res[file] = col;\n    return res;\n  }, {});\n}();\n\nconst RowsRanks = ['1', '2', '3', '4', '5', '6', '7', '8'];\n\nconst RanksRows = function() {\n  return RowsRanks.reduce((res, rank, row) => {\n    res[rank] = row;\n    return res;\n  }, {});\n}();\n\nconst Selectors = {\n  BOARD_ID: \"#board\",\n  PIECE_CLASS: 'piece',\n  SQUARE_CLASS: 'square',\n  RANK_CLASS: 'rank',\n  FILE_CLASS: 'file'\n};\n\n// const PieceCharsToHTML = []{\n//   'k': '&#9812;',\n//   'q':\n//\n// };\n\nmodule.exports = { ColsFiles, FilesCols, RowsRanks, RanksRows, Selectors };\n\n\n\n// WEBPACK FOOTER //\n// ./js/ui/constants.js","const UI = require('./ui');\n\n$(document).ready(function() {\n  const ui = new UI();\n  ui.run();\n});\n\n\n\n// WEBPACK FOOTER //\n// ./js/app.js","const Position = require('../position');\nconst AI = require('../ai');\nconst { PTypes, Colors, PieceTypeHTML } = require('../pieces');\nconst Util = require('./util.js');\nconst { ColsFiles, FilesCols,\n        RowsRanks, RanksRows,\n        Selectors } = require('./constants.js');\n\nclass UI {\n  constructor() {\n    this.position = new Position();\n    this.playerColor = Colors.WHITE;\n    this.ai = new AI();\n    this.currMoves = this.position.generateLegalMoves();\n  }\n\n  run() {\n    this.drawBoard();\n    this.playNextTurn();\n  }\n\n  playNextTurn() {\n    this.updatePieces();\n    this.currMoves = this.position.generateLegalMoves();\n    if (this.currMoves.length === 0) {\n      return;\n    }\n\n    if (this.position.turn === this.playerColor) {\n      this.setupPlayerMove();\n    } else {\n      setTimeout(() => this.aiMove(), 0);\n    }\n\n  }\n\n  reset() {\n\n  }\n\n  generateFileHeader() {\n    const newRow = $('<tr></tr>');\n    newRow.append(`<th>`);\n    ColsFiles.forEach((file) => {\n      newRow.append(`<th class=\"file\">${file}</th>`);\n    });\n    newRow.append(`<th>`);\n\n    return newRow;\n  }\n\n  generateSquare(file, rank) {\n    const fileRank = file + rank;\n\n    const newSquare = $(`<td id=\"${fileRank}\"></td>`);\n\n    const squareColor = Util.isDarkSquare(fileRank) ? 'dark' : 'light';\n    newSquare.addClass(squareColor + \" square\");\n\n    return newSquare;\n  }\n\n  drawBoard() {\n    const board = $('#board');\n\n    let newRankRow;\n    RowsRanks.forEach((rank) => {\n      newRankRow = $('<tr>');\n      newRankRow.append(`<th class=\"rank\">${rank}</th>`);\n      ColsFiles.forEach((file) => {\n        newRankRow.append(this.generateSquare(file, rank));\n      });\n      newRankRow.append(`<th class=\"rank\">${rank}</th>`);\n      board.prepend(newRankRow);\n    });\n\n    board.prepend(this.generateFileHeader());\n    board.append(this.generateFileHeader());\n  }\n\n  updatePieces() {\n    $('.piece').remove();\n    $('.square').removeClass('ui-droppable ui-draggable can-move-to');\n    const pieceTypes = Object.values(PTypes);\n    const pieces = this.position.pieces;\n    let fileRank;\n    let newPiece;\n\n    pieceTypes.forEach((pieceType) => {\n      pieces[pieceType].dup().pop1Bits((pos) => {\n        newPiece = $(`<div class=\"piece\">${PieceTypeHTML[pieceType]}<div>`);\n        if (pieces[Colors.WHITE].hasSetBit(pos)) {\n          newPiece.addClass('white');\n        } else {\n          newPiece.addClass('black');\n        }\n        fileRank = Util.fileRankFromPos(pos);\n        $(`#${fileRank}`).append(newPiece);\n      });\n    });\n  }\n\n  aiMove() {\n    const move = this.ai.chooseMove(this.position);\n    this.animateMove(move, () => {\n      this.position.makeMove(move);\n      this.playNextTurn();\n    });\n  }\n\n  animateMove(move, cb) {\n    const pieceEl = $(`#${Util.fileRankFromPos(move.getFrom())} .piece`);\n    const newSquare = $(`#${Util.fileRankFromPos(move.getTo())}`);\n\n    if (move.getCaptPiece()) {\n      const captPiece = $(`#${Util.fileRankFromPos(move.getTo())} .piece`);\n      const captOffset = captPiece.offset();\n      captPiece.css({\n        'position': 'absolute',\n        'left': captOffset.left,\n        'top': captOffset.top\n      });\n      captPiece.fadeOut('slow');\n    }\n\n    const oldOffset = pieceEl.offset();\n    pieceEl.appendTo(newSquare);\n    const newOffset = pieceEl.offset();\n\n    const animPiece = pieceEl.clone().appendTo('body');\n    animPiece.css({\n      'position': 'absolute',\n      'left': oldOffset.left,\n      'top': oldOffset.top,\n      'z-index': 1000\n    });\n    pieceEl.hide();\n\n    animPiece.animate({'top': newOffset.top, 'left': newOffset.left}, 'slow', function(){\n      pieceEl.show();\n      animPiece.remove();\n      cb();\n    });\n  }\n\n  setupPlayerMove() {\n    const movesData = this.currMoves.map((move) => move.getData());\n    const moveFromTos = {};\n    const moveToFroms = {};\n\n    movesData.forEach((moveData) => {\n      moveFromTos[moveData.from] = moveFromTos[moveData.from] || [];\n      moveFromTos[moveData.from].push(moveData.to);\n\n      moveToFroms[moveData.to] = moveToFroms[moveData.to] || [];\n      moveToFroms[moveData.to].push(moveData.from);\n    });\n\n    this.activateDraggablePieces(moveFromTos);\n    this.activateDroppableSquares(moveToFroms);\n  }\n\n  activateDraggablePieces(moveFromTos) {\n    let fromFileRank;\n    let pieceEl;\n\n    Object.keys(moveFromTos).forEach((fromPos) => {\n      fromFileRank = Util.fileRankFromPos(fromPos);\n      pieceEl = $(`#${fromFileRank} .piece`);\n      pieceEl.draggable({\n        containment: $('#board'),\n        revert: 'invalid',\n        revertDuration: 300\n      });\n\n      pieceEl.mouseenter(() => {\n        moveFromTos[fromPos].forEach((toPos) => {\n          $(`#${Util.fileRankFromPos(toPos)}`).addClass('can-move-to');\n        });\n      });\n\n      pieceEl.mouseleave(() => {\n        $('.square').removeClass('can-move-to');\n      });\n    });\n  }\n\n  activateDroppableSquares(moveToFroms) {\n    let destSq;\n    let originSquare;\n    let originPos;\n    let selectedMove;\n\n    Object.keys(moveToFroms).forEach((toPos) => {\n      destSq = $(`#${Util.fileRankFromPos(toPos)}`);\n      destSq.droppable({\n        accept: (draggable) => {\n          originSquare = $(draggable).parent().attr('id');\n          if (!originSquare) { return false; }\n          originPos = Util.posFromFileRank(originSquare);\n          return moveToFroms[toPos].includes(originPos);\n        },\n        drop: (event, ui) => {\n          originSquare = $(ui.draggable).parent().attr('id');\n          originPos = Util.posFromFileRank(originSquare);\n          selectedMove = this.currMoves.filter((move) => {\n            return move.getFrom() === originPos &&\n                   move.getTo() === parseInt(toPos);\n          })[0];\n          this.position.makeMove(selectedMove);\n          this.playNextTurn();\n        }\n      });\n    });\n  }\n}\n\nmodule.exports = UI;\n\n\n\n// WEBPACK FOOTER //\n// ./js/ui/index.js","const { BitBoard, BBMasks } = require('../bitboard');\n\nconst { Move, MoveTypes } = require('../move');\n\nconst { PUtils, PTypes,\n        Colors, Dirs } = require('../pieces');\n\nconst { pieceSetsToArray,\n        pieceSetsFromArray } = require('./utils/array_conversions.js');\n\nclass Position {\n  constructor(pieces = pieceSetsFromArray(), turn = Colors.WHITE, prevMoves = []) {\n    this.pieces = pieces;\n    this.prevMoves = prevMoves;\n\n    // castling rights represented by 4bit int\n    // in the following order (left bit to right):\n    // bKing bQueen wKing wQueen\n    this.castleRights = 0xf;\n\n    // the en passant BB will either be empty\n    // or have one position marked that indicates\n    // the destination of an en passant attack\n    this.epBB = new BitBoard();\n\n    // holds previous state info (castling rights, en passant)\n    // for move reversal purposes\n    this.prevStates = [];\n\n    this.pTypesLocations = this.createPTypesLocations();\n\n    this.setTurn(turn, this.getOtherColor(turn));\n  }\n\n  createPTypesLocations() {\n    let pos;\n    const res = [];\n\n    for (pos = 0; pos < 64; pos++) {\n      res[pos] = this.getPieceAt(pos);\n    }\n\n    return res;\n  }\n\n  setTurn(turn, opp) {\n    this.turn = turn;\n    this.opp = opp;\n  }\n\n  swapTurn() {\n    this.setTurn(this.opp, this.turn);\n  }\n\n  getOtherColor(color) {\n    return color ^ Colors.BLACK;\n  }\n\n  // generates all pseudo legal moves, ie moves that may put the king\n  // in check but are otherwise legal\n  // why do this: our ai move search generates all moves for a position\n  // and then considers each move individually. some of those moves\n  // will not be considered due to pruning cutoffs, so it's more efficient\n  // to only check for full legality of moves that we actually consider\n  generatePseudoMoves(includeQuiet = true) {\n    const moves = [];\n    this.addPawnMoves(moves, includeQuiet);\n    this.addNormalMoves(moves, includeQuiet);\n    this.addKingMoves(moves, includeQuiet);\n\n    return moves;\n  }\n\n  // generates moves with a filter for whether the move puts the king in check\n  // mainly used to determine checkmate or stalemate\n  generateLegalMoves() {\n    const pseudoMoves = this.generatePseudoMoves();\n    let moveData;\n    let isLegal;\n\n    const legals = [];\n    return pseudoMoves.filter((pseudoMove) => {\n      moveData = pseudoMove.getData();\n\n      this.testMove(moveData, (testsLegal) => {\n        isLegal = testsLegal;\n        return true;\n      });\n\n      return isLegal;\n    });\n  }\n\n  // inserts pawn moves into the moves array\n  addPawnMoves(moves, includeQuiet) {\n    const pawnsPos = this.getColorPieceSet(this.turn, PTypes.PAWNS);\n\n    if (includeQuiet) {\n      const notOccupied = this.getOccupied().not();\n\n      const pawnSinglePushes = PUtils[PTypes.PAWNS].singlePush(this.turn, pawnsPos, notOccupied);\n      this.addPawnMoveSet(pawnSinglePushes, 8 * PUtils[PTypes.PAWNS].DIRS[this.turn], moves);\n\n      const pawnDoublePushes = PUtils[PTypes.PAWNS].doublePush(this.turn, pawnsPos, notOccupied);\n      this.addPawnMoveSet(pawnDoublePushes, 16 * PUtils[PTypes.PAWNS].DIRS[this.turn], moves, false, true);\n    }\n\n    let oppPositions = this.pieces[this.opp].or(this.epBB);\n\n    const pawnLeftAttacks = PUtils[PTypes.PAWNS].attacksLeft(this.turn, pawnsPos, oppPositions);\n    this.addPawnMoveSet(pawnLeftAttacks, 7 * PUtils[PTypes.PAWNS].DIRS[this.turn], moves, true);\n\n    const pawnRightAttacks = PUtils[PTypes.PAWNS].attacksRight(this.turn, pawnsPos, oppPositions);\n    this.addPawnMoveSet(pawnRightAttacks, 9 * PUtils[PTypes.PAWNS].DIRS[this.turn], moves, true);\n  }\n\n  // takes a new position set for pawns and adds each corresponding move\n  // to the moves array, with special handling for en passants, promotions and double pushes\n\n  // note: unlike other pieces, we map pawn movements from the set of all existing pawns\n  // rather than each pawn individually, so the function takes a shift amount to determine\n  // the location of the individual pawn that moved to a new position\n  addPawnMoveSet(newPositions, shiftAmt, moves, isCapture, isDblPush) {\n    let from;\n    let captured = null;\n\n    newPositions.pop1Bits((pos) => {\n      from = pos - shiftAmt;\n      if (isDblPush) {\n        moves.push(new Move(from, pos, MoveTypes.DBL_PPUSH, PTypes.PAWNS));\n      } else if (isCapture && this.epBB.hasSetBit(pos)) {\n        moves.push(new Move(from, pos, MoveTypes.EP_CAPT, PTypes.PAWNS));\n      } else {\n        if (isCapture) { captured = this.pTypesLocations[pos]; }\n\n        if (PUtils[PTypes.PAWNS].PROMO_MASKS[this.turn].hasSetBit(pos)) {\n          this.addPromos(from, pos, moves, captured);\n        } else {\n          moves.push(new Move(from, pos, MoveTypes.NORMAL, PTypes.PAWNS, captured));\n        }\n      }\n    });\n  }\n\n  // adds a move to the moves array for each possible promotion type\n\n  // side note: I was curious about why you'd ever promote to rook or bishop\n  // and the reason is if promoting to a queen results in stalemate\n  addPromos(from, to, moves, captured) {\n    [MoveTypes.NPROMO, MoveTypes.BPROMO,\n     MoveTypes.RPROMO, MoveTypes.QPROMO].forEach((promoType) => {\n       moves.push(new Move(from, to, promoType, PTypes.PAWNS, captured));\n     });\n  }\n\n  // adds moves to the moves array for all pieces that don't\n  // have 'special' moves, ie not pawns or kings\n  addNormalMoves(moves, includeQuiet) {\n    const occupied = this.getOccupied();\n    const notOwnPieces = this.getNotOccupiedBy(this.turn);\n\n    const knightsPos = this.getColorPieceSet(this.turn, PTypes.KNIGHTS);\n    let knightMoves;\n    knightsPos.dup().pop1Bits((pos) => {\n      knightMoves = PUtils[PTypes.KNIGHTS].moves(pos, notOwnPieces);\n      this.addNormalMoveSet(knightMoves, pos, PTypes.KNIGHTS, moves, includeQuiet);\n    });\n\n    const bishopsPos = this.getColorPieceSet(this.turn, PTypes.BISHOPS);\n    let bishopMoves;\n    bishopsPos.dup().pop1Bits((pos) => {\n      bishopMoves = PUtils[PTypes.BISHOPS].moves(pos, occupied, notOwnPieces);\n      this.addNormalMoveSet(bishopMoves, pos, PTypes.BISHOPS, moves, includeQuiet);\n    });\n\n    const rooksPos = this.getColorPieceSet(this.turn, PTypes.ROOKS);\n    let rookMoves;\n    rooksPos.dup().pop1Bits((pos) => {\n      rookMoves = PUtils[PTypes.ROOKS].moves(pos, occupied, notOwnPieces);\n      this.addNormalMoveSet(rookMoves, pos, PTypes.ROOKS, moves, includeQuiet);\n    });\n\n    const queenPos = this.getColorPieceSet(this.turn, PTypes.QUEENS).bitScanForward();\n    if (queenPos !== null) {\n      const queenMoves = PUtils[PTypes.QUEENS].moves(queenPos, occupied, notOwnPieces);\n      this.addNormalMoveSet(queenMoves, queenPos, PTypes.QUEENS, moves, includeQuiet);\n    }\n  }\n\n  // adds available king moves to the moves array\n  addKingMoves(moves, includeQuiet) {\n      const notOwnPieces = this.getNotOccupiedBy(this.turn);\n      const kingPos = this.getColorPieceSet(this.turn, PTypes.KINGS).bitScanForward();\n\n      // for testing purposes...\n      if (kingPos === null) { return; }\n\n      const normalMoves = PUtils[PTypes.KINGS].moves(kingPos, notOwnPieces);\n      this.addNormalMoveSet(normalMoves, kingPos, PTypes.KINGS, moves, includeQuiet);\n\n      if (includeQuiet) {\n        this.addCastleMoves(moves);\n      }\n  }\n\n  // takes a BB of possible new positions for a single\n  // piece and adds each corresponding move to the moves array\n  addNormalMoveSet(newPositions, startPos, pieceType, moves, includeQuiet) {\n    let newPos;\n    let newMove;\n    let captType;\n\n    newPositions.pop1Bits((pos) => {\n      captType = this.pieces[this.opp].hasSetBit(pos) ? this.pTypesLocations[pos] : null;\n      if (includeQuiet || captType) {\n        moves.push(new Move(startPos, pos, MoveTypes.NORMAL, pieceType, captType));\n      }\n    });\n  }\n\n  // adds available castling moves to the moves array\n  addCastleMoves(moves) {\n    const turnCastleRights = this.getCastleRights(this.turn);\n    const startPos = PUtils[PTypes.KINGS].INIT_POS[this.turn];\n    const notOccupied = this.getOccupied().not();\n\n    if ((turnCastleRights & 0b1) && PUtils[PTypes.KINGS].canCastle(this.turn, Dirs.WEST, notOccupied)) {\n      moves.push(new Move(startPos, startPos - 2, MoveTypes.CSTL_QUEEN, PTypes.KINGS));\n    }\n\n    if ((turnCastleRights & 0b10) && PUtils[PTypes.KINGS].canCastle(this.turn, Dirs.EAST, notOccupied)) {\n      moves.push(new Move(startPos, startPos + 2, MoveTypes.CSTL_KING, PTypes.KINGS));\n    }\n  }\n\n  // returns 2bit value for the color's castling rights\n  // left bit => king-side rights\n  // right bit => queen-side rights\n  getCastleRights(color) {\n    return color === Colors.WHITE ? this.castleRights & 0b11 : this.castleRights >>> 2;\n  }\n\n  // returns a BB with occupied positions for a given color and piece type\n  getColorPieceSet(color, pieceType) {\n    return this.pieces[color].and(this.pieces[pieceType]);\n  }\n\n  // returns a BB of all occupied positions\n  getOccupied() {\n    return this.pieces[Colors.WHITE].or(this.pieces[Colors.BLACK]);\n  }\n\n  // returns a BB of all positions that this color does not occupy\n  getNotOccupiedBy(color) {\n    return this.pieces[color].not();\n  }\n\n  // returns the piece type that occupies the given position\n  // if no piece is found, returns null\n  getPieceAt(pos) {\n    const types = Object.values(PTypes);\n\n    let idx;\n    let type;\n\n    for (idx = 0; idx < types.length; idx++) {\n      type = types[idx];\n      if (this.pieces[type].hasSetBit(pos)) {\n        return type;\n      }\n    }\n\n    return null;\n  }\n\n  // makes a specified move if it's legal, updating the current position\n  // returns true if the move is made, false otherwise\n  makeMove(move) {\n    const moveData = move.getData();\n\n    let isLegal;\n    this.testMove(moveData, (testsLegal) => {\n      isLegal = testsLegal;\n      return !isLegal;\n    });\n\n    if (!isLegal) { return false; }\n\n    this.addPrevState();\n\n    this.adjustCastleRights(moveData.pieceType, moveData.from, moveData.captPieceType, moveData.to);\n    this.epBB = new BitBoard();\n\n    this.execMoveType(moveData.from, moveData.to, moveData.type);\n\n    this.prevMoves.push(move);\n    this.swapTurn();\n\n    return true;\n  }\n\n  // makes the piece movements needed to determine\n  // if the move is legal, sends a boolean for the legality\n  // to the callback and undoes the piece movements if the callback\n  // returns true\n  testMove(moveData, cb) {\n    if (moveData.captPieceType) {\n      this.clearPieceAt(moveData.to, this.opp, moveData.captPieceType);\n    }\n\n    if (moveData.isPromo) {\n      this.clearPieceAt(moveData.from, this.turn, PTypes.PAWNS);\n    } else {\n      this.movePiece(moveData.from, moveData.to, this.turn, moveData.pieceType);\n    }\n\n    const undo = cb(this.testsLegal(moveData));\n    if (!undo) { return; }\n\n    if (moveData.isPromo) {\n      this.setPieceAt(moveData.from, this.turn, PTypes.PAWNS);\n    } else {\n      this.movePiece(moveData.to, moveData.from, this.turn, moveData.pieceType);\n    }\n\n    if (moveData.captPieceType) {\n      this.setPieceAt(moveData.to, this.opp, moveData.captPieceType);\n    }\n  }\n\n  // returns boolean for whether or not move is legal\n  // based on the current position\n  testsLegal(moveData) {\n    if (moveData.isCastle) {\n      return this.isLegalCastle(moveData.from, moveData.type);\n    } else {\n      return !this.inCheck(this.turn);\n    }\n  }\n\n  isLegalCastle(pos, castleType) {\n    const dir = castleType === MoveTypes.CSTL_KING ? 1 : -1;\n    let count = 0;\n\n    while (count <= 2) {\n      if (this.isAttacked(pos, this.turn)) { return false; }\n      count++;\n      pos += dir;\n    }\n\n    return true;\n  }\n\n  // returns boolean for whether the provided color's king is in check\n  inCheck(color) {\n    const kingPos = this.getColorPieceSet(color, PTypes.KINGS).bitScanForward();\n    // for testing purposes...\n    if (kingPos === null) {\n      console.log('NO KING');\n      console.log(this.prevMoves.map((move) => move.val));\n    }\n    return this.isAttacked(kingPos, color);\n  }\n\n\n  // returns boolean for whether any opponent color piece is attacking the provided position\n  isAttacked(pos, color) {\n    const posBB = BitBoard.fromPos(pos);\n    const occupied = this.getOccupied();\n    const oppColor = this.getOtherColor(color);\n    const pawns = this.getColorPieceSet(oppColor, PTypes.PAWNS);\n\n    const queenBB = this.getColorPieceSet(oppColor, PTypes.QUEENS);\n    return (!PUtils[PTypes.PAWNS].attacksLeft(oppColor, pawns, posBB).isZero() ||\n            !PUtils[PTypes.PAWNS].attacksRight(oppColor, pawns, posBB).isZero() ||\n            !PUtils[PTypes.KNIGHTS].moves(pos, this.getColorPieceSet(oppColor, PTypes.KNIGHTS)).isZero() ||\n            !PUtils[PTypes.BISHOPS].moves(pos, occupied, this.getColorPieceSet(oppColor, PTypes.BISHOPS).or(queenBB)).isZero() ||\n            !PUtils[PTypes.ROOKS].moves(pos, occupied, this.getColorPieceSet(oppColor, PTypes.ROOKS).or(queenBB)).isZero() ||\n            !PUtils[PTypes.KINGS].moves(pos, this.getColorPieceSet(oppColor, PTypes.KINGS)).isZero());\n  }\n\n  // unmakes the previous move, updating the current position\n  unmakePrevMove() {\n    const prevMove = this.prevMoves.pop();\n    if (!prevMove) { return false; }\n    this.swapTurn();\n    const moveData = prevMove.getData();\n\n    this.reverseMoveType(moveData.from, moveData.to, moveData.type);\n\n    const prevState = this.prevStates.pop();\n    this.epBB = prevState.epBB;\n    this.castleRights = prevState.castleRights;\n\n    this.movePiece(moveData.to, moveData.from, this.turn, moveData.pieceType);\n\n    if (moveData.captPieceType) {\n      this.setPieceAt(moveData.to, this.opp, moveData.captPieceType);\n    }\n\n    return true;\n  }\n\n  // makes adjustments to the castling rights\n  // if a rook or king is moved\n  adjustCastleRights(pieceType, from, captPieceType, to) {\n    let clearCastlePos;\n    if (pieceType === PTypes.KINGS) {\n      let clearCastleRightsMask = this.turn === Colors.WHITE ? 0b1100 : 0b11;\n      this.castleRights &= clearCastleRightsMask;\n    } else if (pieceType === PTypes.ROOKS) {\n      clearCastlePos = 0;\n      if (from > PUtils[PTypes.KINGS].INIT_POS[this.turn]) { clearCastlePos++; }\n      if (this.turn === Colors.BLACK) { clearCastlePos += 2; }\n      this.castleRights = (this.castleRights & ~(1 << clearCastlePos)) >>> 0;\n    }\n\n    if (captPieceType === PTypes.ROOKS) {\n      clearCastlePos = 0;\n      if (to > PUtils[PTypes.KINGS].INIT_POS[this.opp]) { clearCastlePos++; }\n      if (this.opp === Colors.BLACK) { clearCastlePos += 2; }\n      this.castleRights = (this.castleRights & ~(1 << clearCastlePos)) >>> 0;\n    }\n  }\n\n  // adds the current state values to the prevStates array\n  // used for move unmaking purposes\n  addPrevState() {\n    const state = { epBB: this.epBB, castleRights: this.castleRights };\n    this.prevStates.push(state);\n  }\n\n  // makes special adjustments to the position based on the move type\n  execMoveType(from, to, type) {\n    switch(type) {\n      case MoveTypes.NORMAL:\n        return;\n      case MoveTypes.DBL_PPUSH:\n        let epPos = to + (-PUtils[PTypes.PAWNS].DIRS[this.turn] * 8);\n        this.epBB = BitBoard.fromPos(epPos);\n        break;\n      case MoveTypes.CSTL_KING:\n        this.movePiece(from + 3, from + 1, this.turn, PTypes.ROOKS);\n        break;\n      case MoveTypes.CSTL_QUEEN:\n        this.movePiece(from - 4, from - 1, this.turn, PTypes.ROOKS);\n        break;\n      case MoveTypes.EP_CAPT:\n        let capturedPos = to - (PUtils[PTypes.PAWNS].DIRS[this.turn] * 8);\n        this.clearPieceAt(capturedPos, this.opp, PTypes.PAWNS);\n        break;\n      case MoveTypes.NPROMO:\n        this.setPieceAt(to, this.turn, PTypes.KNIGHTS);\n        break;\n      case MoveTypes.BPROMO:\n        this.setPieceAt(to, this.turn, PTypes.BISHOPS);\n        break;\n      case MoveTypes.RPROMO:\n        this.setPieceAt(to, this.turn, PTypes.ROOKS);\n        break;\n      case MoveTypes.QPROMO:\n        this.setPieceAt(to, this.turn, PTypes.QUEENS);\n        break;\n    }\n  }\n\n  // unmakes special adjustments to the position based on the move type\n  reverseMoveType(from, to, type) {\n    switch(type) {\n      case MoveTypes.NORMAL:\n      case MoveTypes.DBL_PPUSH:\n        return;\n      case MoveTypes.CSTL_KING:\n        this.movePiece(from + 1, from + 3, this.turn, PTypes.ROOKS);\n        break;\n      case MoveTypes.CSTL_QUEEN:\n        this.movePiece(from - 1, from - 4, this.turn, PTypes.ROOKS);\n        break;\n      case MoveTypes.EP_CAPT:\n        let capturedPos = to - (PUtils[PTypes.PAWNS].DIRS[this.turn] * 8);\n        this.setPieceAt(capturedPos, this.opp, PTypes.PAWNS);\n        break;\n      case MoveTypes.NPROMO:\n        this.clearPieceAt(to, this.turn, PTypes.KNIGHTS);\n        break;\n      case MoveTypes.BPROMO:\n        this.clearPieceAt(to, this.turn, PTypes.BISHOPS);\n        break;\n      case MoveTypes.RPROMO:\n        this.clearPieceAt(to, this.turn, PTypes.ROOKS);\n        break;\n      case MoveTypes.QPROMO:\n        this.clearPieceAt(to, this.turn, PTypes.QUEENS);\n        break;\n    }\n  }\n\n  // moves piece from one position to another\n  movePiece(from, to, color, pieceType) {\n    this.clearPieceAt(from, color, pieceType);\n    this.setPieceAt(to, color, pieceType);\n  }\n\n  // marks the given color and pieceType BBs as occupied at the specified position\n  setPieceAt(pos, color, pieceType) {\n    this.pieces[color].setBit(pos);\n    this.pieces[pieceType].setBit(pos);\n    this.pTypesLocations[pos] = pieceType;\n  }\n\n  // marks the given color and pieceType BBs as unoccupied at the specified position\n  clearPieceAt(pos, color, pieceType) {\n    this.pieces[color].clearBit(pos);\n    this.pieces[pieceType].clearBit(pos);\n    this.pTypesLocations[pos] = null;\n  }\n\n  // renders BBs for all piece sets\n  renderPieceSets() {\n    Object.keys(this.pieces).forEach((boardType) => {\n      console.log(boardType);\n      this.pieces[boardType].render();\n    });\n  }\n\n  getBoardArr() {\n    return pieceSetsToArray(this.pieces);\n  }\n\n  // renders the board for the current position\n  renderBoardArr() {\n    const boardArr = pieceSetsToArray(this.pieces);\n\n    let pos;\n    let rowStr = '';\n    console.log(\"\\n\");\n    for (pos = 63; pos >= 0; pos--) {\n      rowStr = boardArr[pos] + rowStr;\n      if (pos % 8 === 0) {\n        console.log(rowStr);\n        rowStr = '';\n      }\n    }\n    console.log(\"\\n\");\n  }\n}\n\nmodule.exports = Position;\n\n\n\n// WEBPACK FOOTER //\n// ./js/position/index.js","function popCount32(int) {\n\tint -= (int >>> 1) & 0x55555555;\n\tint = (int & 0x33333333) + ((int >>> 2) & 0x33333333);\n\treturn ((int + (int >>> 4) & 0xF0F0F0F) * 0x1010101) >>> 24;\n}\n\nfunction bitScanForward32(int) {\n  return popCount32((int & -int) - 1);\n}\n\nfunction generateMSBTable(max) {\n  let res = [];\n  let int;\n  for (int = 1; int <= max; int++) {\n    res[int] = Math.floor(Math.log2(int));\n  }\n\n  return res;\n}\n\nconst mostSigBitTable = generateMSBTable(255);\n\nfunction bitScanReverse32(int) {\n  let res = 0;\n  if (int > 0xFFFF) {\n    int >>>= 16;\n    res += 16;\n  }\n\n  if (int > 0xFF) {\n    int >>>= 8;\n    res += 8;\n  }\n\n  return res + mostSigBitTable[int];\n}\n\nfunction clearLeastSigBit32(int) {\n  return (int & (int - 1));\n}\n\nmodule.exports = {\n  popCount32,\n  bitScanForward32,\n  bitScanReverse32,\n  clearLeastSigBit32\n};\n\n\n\n// WEBPACK FOOTER //\n// ./js/bitboard/utils.js","const BitBoard = require('./bitboard.js');\n\n// this file includes static sets of bitboards that\n// are commonly used throughout the program\n\nconst FULL_BOARD = new BitBoard().not();\n\nconst COLS = function() {\n  let colIdx = 0;\n  let cols = [];\n  while (colIdx < 8) {\n    cols.push(BitBoard.fromCol(colIdx));\n    colIdx++;\n  }\n\n  return cols;\n}();\n\n\nconst ROWS = function() {\n  let rowIdx = 0;\n  let rows = [];\n  while (rowIdx < 8) {\n    rows.push(BitBoard.fromRow(rowIdx));\n    rowIdx++;\n  }\n\n  return rows;\n}();\n\n\nconst DIAGS = function() {\n  const diags = [];\n  let pos = 56;\n\n  while (pos >= 0) {\n    diags.push(BitBoard.upperRightDiag(pos));\n    pos -= 8;\n  }\n\n  pos = 1;\n\n  while (pos < 8) {\n    diags.push(BitBoard.upperRightDiag(pos));\n    pos++;\n  }\n\n  return diags;\n}();\n\n\nconst ANTI_DIAGS = function() {\n  const antiDiags = [];\n  let pos = 0;\n\n  while (pos < 8) {\n    antiDiags.push(BitBoard.upperLeftDiag(pos));\n    pos++;\n  }\n\n  pos = 15;\n  while (pos < 64) {\n    antiDiags.push(BitBoard.upperLeftDiag(pos));\n    pos += 8;\n  }\n\n  return antiDiags;\n}();\n\nconst NORTH_OF_ROW = function() {\n  const res = [];\n  let bb = FULL_BOARD;\n  let idx = 0;\n\n  while (idx <= 7) {\n    bb = bb.xor(ROWS[idx]);\n    res.push(bb);\n    idx++;\n  }\n\n  return res;\n}();\n\nconst SOUTH_OF_ROW = function() {\n  const res = [];\n  let bb = new BitBoard();\n  let idx = 0;\n\n  while (idx <= 7) {\n    res.push(bb);\n    bb = bb.or(ROWS[idx]);\n    idx++;\n  }\n\n  return res;\n}();\n\nconst EAST_OF_COL = function() {\n  const res = [];\n  let bb = FULL_BOARD;\n  let idx = 0;\n\n  while (idx <= 7) {\n    bb = bb.xor(COLS[idx]);\n    res.push(bb);\n    idx++;\n  }\n\n  return res;\n}();\n\nconst WEST_OF_COL = function() {\n  const res = [];\n  let bb = new BitBoard();\n  let idx = 0;\n\n  while (idx <= 7) {\n    res.push(bb);\n    bb = bb.or(COLS[idx]);\n    idx++;\n  }\n\n  return res;\n}();\n\nmodule.exports = {\n  FULL_BOARD,\n  COLS,\n  ROWS,\n  DIAGS,\n  ANTI_DIAGS,\n  NORTH_OF_ROW,\n  SOUTH_OF_ROW,\n  EAST_OF_COL,\n  WEST_OF_COL\n};\n\n\n\n// WEBPACK FOOTER //\n// ./js/bitboard/masks.js","const { Types } = require('./constants.js');\n\nclass Move {\n  constructor(from, to, type, piece, captPiece) {\n    this.val = (((type & 0xf) << 18) >>> 0) |\n               ((((captPiece || 0) & 0x7) << 15) >>> 0) |\n               (((piece & 0x7) << 12) >>> 0) |\n               (((from & 0x3f) << 6) >>> 0) |\n               ((to & 0x3f) >>> 0) >>> 0;\n  }\n\n  // for testing purposes\n  static fromVal(val) {\n    const newMove = new Move(0, 0, 0, 0, 0);\n    newMove.val = val;\n    return newMove;\n  }\n\n  getData() {\n    return {\n      from: this.getFrom(),\n      to: this.getTo(),\n      type: this.getType(),\n      pieceType: this.getPiece(),\n      captPieceType: this.getCaptPiece(),\n      isPromo: this.isPromo(),\n      isCastle: this.isCastle()\n    };\n  }\n\n  getFrom() {\n    return (this.val >>> 6) & 0x3f;\n  }\n\n  getTo() {\n    return this.val & 0x3f;\n  }\n\n  getPiece() {\n    return (this.val >>> 12) & 0x7;\n  }\n\n  getCaptPiece() {\n    return (this.val >>> 15) & 0x7;\n  }\n\n  getType() {\n    return this.val >>> 18;\n  }\n\n  isPromo() {\n    return [Types.NPROMO, Types.BPROMO,\n            Types.RPROMO, Types.QPROMO].includes(this.getType());\n  }\n\n  isCastle() {\n    return [Types.CSTL_KING, Types.CSTL_QUEEN].includes(this.getType());\n  }\n}\n\nmodule.exports = { Move, MoveTypes: Types };\n\n\n\n// WEBPACK FOOTER //\n// ./js/move/index.js","// https://www.chessprogramming.org/Encoding_Moves#From-To_Based\n// require('../string_contants.js');\n\nconst typesArr = ['NORMAL', 'DBL_PPUSH',\n                  'CSTL_KING', 'CSTL_QUEEN',\n                  'EP_CAPT', 'NPROMO',\n                  'BPROMO','RPROMO', 'QPROMO'];\n\nconst Types = typesArr.reduce((res, type, idx) => {\n  res[type] = idx;\n  return res;\n}, {});\n\nmodule.exports = { Types };\n\n\n\n// WEBPACK FOOTER //\n// ./js/move/constants.js","const stepMove = require('./movements/step_move.js');\nconst { BBMasks } = require('../bitboard');\nconst { Colors } = require('./constants.js');\n\nconst DIRS = {\n  [Colors.WHITE]: 1,\n  [Colors.BLACK]: -1\n};\n\nconst INIT_MASKS = {\n  [Colors.WHITE]: BBMasks.ROWS[1],\n  [Colors.BLACK]: BBMasks.ROWS[6]\n};\n\nconst Pawns = {\n  value: 100,\n  positionValues: [\n\t\t0, 0, 0, 0, 0, 0, 0, 0,\n\t\t50, 50, 50, 50, 50, 50, 50, 50,\n\t\t10, 10, 20, 30, 30, 20, 10, 10,\n\t\t5, 5, 10, 25, 25, 10, 5, 5,\n\t\t0, 0, 0, 20, 20, 0, 0, 0,\n\t\t5, -5, -10, 0, 0, -10, -5, 5,\n\t\t5, 10, 10, -20, -20, 10, 10, 5,\n\t\t0, 0, 0, 0, 0, 0, 0, 0\n\t],\n  DIRS,\n  PROMO_MASKS: { [Colors.WHITE]: BBMasks.ROWS[7],\n                 [Colors.BLACK]: BBMasks.ROWS[0]\n               },\n  attacksLeft: (color, positions, oppPieces) => {\n    return stepMove(positions, DIRS[color], -DIRS[color]).and(oppPieces);\n  },\n  attacksRight: (color, positions, oppPieces) => {\n    return stepMove(positions, DIRS[color], DIRS[color]).and(oppPieces);\n  },\n  singlePush: (color, positions, notOccupied) => {\n    return stepMove(positions, DIRS[color], 0).and(notOccupied);\n  },\n  doublePush: (color, positions, notOccupied) => {\n    const onePush = stepMove(positions.and(INIT_MASKS[color]), DIRS[color], 0).and(notOccupied);\n    return stepMove(onePush, DIRS[color], 0).and(notOccupied);\n  }\n};\n\nmodule.exports = Pawns;\n\n\n\n// WEBPACK FOOTER //\n// ./js/pieces/pawns.js","const { KNIGHT_MOVES } = require('./movements/masks.js');\n\nconst Knight = {\n  value: 325,\n  positionValues: [\n\t\t-50, -40, -30, -30, -30, -30, -40, -50,\n\t\t-40, -20, 0, 0, 0, 0, -20, -40,\n\t\t-30, 0, 10, 15, 15, 10, 0, -30,\n\t\t-30, 5, 15, 20, 20, 15, 5, -30,\n\t\t-30, 0, 15, 20, 20, 15, 0, -30,\n\t\t-30, 5, 10, 15, 15, 10, 5, -30,\n\t\t-40, -20, 0, 5, 5, 0, -20, -40,\n\t\t-50, -40, -30, -30, -30, -30, -40, -50\n\t],\n  moves: (position, notOwnPieces) => {\n    return KNIGHT_MOVES[position].and(notOwnPieces);\n  }\n};\n\nmodule.exports = Knight;\n\n\n\n// WEBPACK FOOTER //\n// ./js/pieces/knight.js","const { diag } = require('./movements/slide_moves.js');\n\nconst Bishop = {\n  value: 325,\n  positionValues: [\n\t\t-20, -10, -10, -10, -10, -10, -10, -20,\n\t\t-10, 0, 0, 0, 0, 0, 0, -10,\n\t\t-10, 0, 5, 10, 10, 5, 0, -10,\n\t\t-10, 5, 5, 10, 10, 5, 5, -10,\n\t\t-10, 0, 10, 10, 10, 10, 0, -10,\n\t\t-10, 10, 10, 10, 10, 10, 10, -10,\n\t\t-10, 5, 0, 0, 0, 0, 5, -10,\n\t\t-20, -10, -10, -10, -10, -10, -10, -20\n\t],\n  moves: (position, occupied, notOwnPieces) => {\n    return diag(position, occupied, notOwnPieces);\n  }\n};\n\nmodule.exports = Bishop;\n\n\n\n// WEBPACK FOOTER //\n// ./js/pieces/bishop.js","const { horizVert } = require('./movements/slide_moves.js');\n\nconst Rook = {\n  value: 500,\n  positionValues:\t[\n\t\t0, 0, 0, 0, 0, 0, 0, 0,\n\t\t5, 10, 10, 10, 10, 10, 10, 5,\n\t\t-5, 0, 0, 0, 0, 0, 0, -5,\n\t\t-5, 0, 0, 0, 0, 0, 0, -5,\n\t\t-5, 0, 0, 0, 0, 0, 0, -5,\n\t\t-5, 0, 0, 0, 0, 0, 0, -5,\n\t\t-5, 0, 0, 0, 0, 0, 0, -5,\n\t\t0, 0, 0, 5, 5, 0, 0, 0\n\t],\n  moves: (position, occupied, notOwnPieces) => {\n    return horizVert(position, occupied, notOwnPieces);\n  },\n};\n\nmodule.exports = Rook;\n\n\n\n// WEBPACK FOOTER //\n// ./js/pieces/rook.js","const { diag, horizVert } = require('./movements/slide_moves.js');\n\nconst Queen = {\n  value: 1050,\n  positionValues: [\n\t\t-20, -10, -10, -5, -5, -10, -10, -20,\n\t\t-10, 0, 0, 0, 0, 0, 0, -10,\n\t\t-10, 0, 5, 5, 5, 5, 0, -10,\n\t\t-5, 0, 5, 5, 5, 5, 0, -5,\n\t\t0, 0, 5, 5, 5, 5, 0, -5,\n\t\t-10, 5, 5, 5, 5, 5, 0, -10,\n\t\t-10, 0, 5, 0, 0, 0, 0, -10,\n\t\t-20, -10, -10, -5, -5, -10, -10, -20\n\t],\n  moves: (position, occupied, notOwnPieces) => {\n    return diag(position, occupied, notOwnPieces).or(horizVert(position, occupied, notOwnPieces));\n  }\n};\n\nmodule.exports = Queen;\n\n\n\n// WEBPACK FOOTER //\n// ./js/pieces/queen.js","const { BBMasks } = require('../bitboard');\nconst Dirs = require('./movements/dir_constants.js');\nconst { KING_MOVES, SLIDE_MOVES } = require('./movements/masks.js');\nconst { Colors } = require('./constants.js');\n\nconst INIT_POS = {\n  [Colors.BLACK]: 60,\n  [Colors.WHITE]: 4\n};\n\nconst King = {\n  value: 40000,\n  positionValues:\t[\n\t\t-30, -40, -40, -50, -50, -40, -40, -30,\n\t\t-30, -40, -40, -50, -50, -40, -40, -30,\n\t\t-30, -40, -40, -50, -50, -40, -40, -30,\n\t\t-30, -40, -40, -50, -50, -40, -40, -30,\n\t\t-20, -30, -30, -40, -40, -30, -30, -20,\n\t\t-10, -20, -20, -20, -20, -20, -20, -10,\n\t\t 20, 20, 0, 0, 0, 0, 20, 20,\n\t\t 20, 30, 10, 0, 0, 10, 30, 20\n\t],\n  INIT_POS,\n  moves: (position, notOwnPieces) => {\n    return KING_MOVES[position].and(notOwnPieces);\n  },\n  canCastle: (color, dir, notOccupied) => {\n    const castleSlide = SLIDE_MOVES[INIT_POS[color]][dir].and(notOccupied);\n    if (dir === Dirs.EAST) {\n      return castleSlide.popCount() === 2;\n    } else {\n      return castleSlide.popCount() === 3;\n    }\n  }\n};\n\nmodule.exports = King;\n\n\n\n// WEBPACK FOOTER //\n// ./js/pieces/king.js","const { Types, Colors, PieceTypeLetters } = require('./constants.js');\n\nfunction pieceToLetter(type, color) {\n  if (color === Colors.WHITE) {\n    return PieceTypeLetters[type];\n  } else if (color === Colors.BLACK) {\n    return PieceTypeLetters[type].toUpperCase();\n  } else {\n    return '?';\n  }\n}\n\nfunction letterToColor(letter) {\n  return letter.toUpperCase() === letter ? Colors.BLACK : Colors.WHITE;\n}\n\nfunction letterToType(letter) {\n  const pieceTypes = Object.values(Types);\n  let pieceType;\n  let idx;\n\n  for (idx = 0; idx < pieceTypes.length; idx++) {\n    if (PieceTypeLetters[pieceTypes[idx]] === letter.toLowerCase()) {\n      pieceType = pieceTypes[idx];\n      break;\n    }\n  }\n\n  return pieceType;\n}\n\nmodule.exports = { pieceToLetter, letterToColor, letterToType };\n\n\n\n// WEBPACK FOOTER //\n// ./js/pieces/conversions.js","const { Types } = require('./constants.js');\n\nfunction eachPieceType(cb) {\n  let type;\n  for (type = Types.PAWNS; type <= Types.KINGS; type++) {\n    cb(type);\n  }\n}\n\nmodule.exports = eachPieceType;\n\n\n\n// WEBPACK FOOTER //\n// ./js/pieces/each_piece_type.js","const { PieceConv, PTypes, Colors } = require('../../pieces');\nconst { BitBoard } = require('../../bitboard');\n\nconst xx = \"_\";\n\nconst WP = PieceConv.pieceToLetter(PTypes.PAWNS, Colors.WHITE);\nconst WN = PieceConv.pieceToLetter(PTypes.KNIGHTS, Colors.WHITE);\nconst WB = PieceConv.pieceToLetter(PTypes.BISHOPS, Colors.WHITE);\nconst WR = PieceConv.pieceToLetter(PTypes.ROOKS, Colors.WHITE);\nconst WQ = PieceConv.pieceToLetter(PTypes.QUEENS, Colors.WHITE);\nconst WK = PieceConv.pieceToLetter(PTypes.KINGS, Colors.WHITE);\n\nconst BP = PieceConv.pieceToLetter(PTypes.PAWNS, Colors.BLACK);\nconst BN = PieceConv.pieceToLetter(PTypes.KNIGHTS, Colors.BLACK);\nconst BB = PieceConv.pieceToLetter(PTypes.BISHOPS, Colors.BLACK);\nconst BR = PieceConv.pieceToLetter(PTypes.ROOKS, Colors.BLACK);\nconst BQ = PieceConv.pieceToLetter(PTypes.QUEENS, Colors.BLACK);\nconst BK = PieceConv.pieceToLetter(PTypes.KINGS, Colors.BLACK);\n\nconst defaultBoardArr = [\nWR, WN, WB, WQ, WK, WB, WN, WR,\nWP, WP, WP, WP, WP, WP, WP, WP,\nxx, xx, xx, xx, xx, xx, xx, xx,\nxx, xx, xx, xx, xx, xx, xx, xx,\nxx, xx, xx, xx, xx, xx, xx, xx,\nxx, xx, xx, xx, xx, xx, xx, xx,\nBP, BP, BP, BP, BP, BP, BP, BP,\nBR, BN, BB, BQ, BK, BB, BN, BR\n];\n\nfunction createEmptyBoardArr() {\n  const res = [];\n\n  let count = 0;\n  while (count <= 64) {\n    res.push(xx);\n    count++;\n  }\n\n  return res;\n}\n\nfunction pieceSetsToArray(pieces) {\n  const res = createEmptyBoardArr();\n\n  const pieceTypes = Object.values(PTypes);\n  pieceTypes.forEach((type) => {\n    pieces[type].dup().pop1Bits((pos) => {\n      if (pieces[Colors.WHITE].hasSetBit(pos)) {\n        res[pos] = PieceConv.pieceToLetter(type, Colors.WHITE);\n      } else {\n        res[pos] = PieceConv.pieceToLetter(type, Colors.BLACK);\n      }\n    });\n  });\n\n  return res;\n}\n\nfunction pieceSetsFromArray(array = defaultBoardArr) {\n  const pieces = {};\n\n  Object.values(PTypes).forEach((type) => {\n    pieces[type] = new BitBoard();\n  });\n\n  Object.values(Colors).forEach((color) => {\n    pieces[color] = new BitBoard();\n  });\n\n\n  let pos;\n  let type;\n  let color;\n  for (pos = 0; pos < array.length; pos++) {\n    if (array[pos] !== xx) {\n      type = PieceConv.letterToType(array[pos]);\n      color = PieceConv.letterToColor(array[pos]);\n      pieces[type].setBit(pos);\n      pieces[color].setBit(pos);\n    }\n  }\n\n  return pieces;\n}\n\nmodule.exports = { pieceSetsToArray, pieceSetsFromArray };\n\n\n\n// WEBPACK FOOTER //\n// ./js/position/utils/array_conversions.js","const { PTypes, PUtils,\n        Colors, Dirs,\n        eachPieceType } = require('../pieces');\n\nclass AI {\n  constructor() {\n\n  }\n\n  scoreMaterial(position, color) {\n    let score = 0;\n    eachPieceType((pieceType) => {\n      score += position.getColorPieceSet(color, pieceType).popCount() *\n               PUtils[pieceType].value;\n    });\n\n    return score;\n  }\n\n  scorePiecePositions(position, color) {\n    let score = 0;\n    let piecePositions;\n    eachPieceType((pieceType) => {\n      piecePositions = position.getColorPieceSet(color, pieceType);\n      piecePositions.dup().pop1Bits((pos) => {\n        score += PUtils[pieceType].positionValues[color ? pos : 56 ^ pos];\n      });\n    });\n\n    return score;\n  }\n\n  evaluate(position) {\n    let materialScore = this.scoreMaterial(position, position.turn) -\n                        this.scoreMaterial(position, position.opp);\n\n    let piecePositionScore = this.scorePiecePositions(position, position.turn) -\n                             this.scorePiecePositions(position, position.opp);\n\n    return materialScore + piecePositionScore;\n  }\n\n  chooseMove(position) {\n    // const moves = position.generateLegalMoves();\n    // const move = moves[Math.floor(Math.random() * moves.length)];\n    // position.makeMove(move);\n    let startTime = new Date();\n    this.maxDepth = 4;\n    this.exploredNodes = 0;\n    this.movesMade = position.prevMoves.length;\n    this.qSearchTime = 0;\n    this.negaMax(position, this.maxDepth, -Infinity, Infinity);\n    console.log('RUN TIME:');\n    console.log(new Date() - startTime);\n    console.log('qSearchTime:');\n    console.log(this.qSearchTime);\n    console.log('Explored Nodes:');\n    console.log(this.exploredNodes);\n    return this.bestMove;\n    // position.makeMove(this.bestMove);\n  }\n\n  quiescenceSearch(position, alpha, beta) {\n    const standPatVal = this.evaluate(position);\n\n    if (standPatVal >= beta) {\n      return beta;\n    } else if (standPatVal > alpha) {\n      alpha = standPatVal;\n    }\n\n    let inCheck = position.inCheck(position.turn);\n    // include quiet moves (ie non captures) only if the king is in check;\n    const moves = this.sortMoves(position.generatePseudoMoves(inCheck));\n    let moveIdx;\n    let score;\n\n    for (moveIdx = 0; moveIdx < moves.length; moveIdx++) {\n      if (position.makeMove(moves[moveIdx])) {\n        score = -this.quiescenceSearch(position, -beta, -alpha);\n        position.unmakePrevMove();\n\n        if (score >= beta) { return beta; }\n        if (score > alpha) { alpha = score; }\n      }\n    }\n\n    return alpha;\n  }\n\n  negaMax(position, depth, alpha, beta) {\n    if (depth === 0) {\n      this.exploredNodes++;\n      let startQTime = new Date();\n      // return this.evaluate(position);\n      let qSearchScore = this.quiescenceSearch(position, alpha, beta);\n      this.qSearchTime += (new Date() - startQTime);\n      return qSearchScore;\n    }\n\n    const moves = this.sortMoves(position.generatePseudoMoves());\n    let moveIdx;\n    let canMove = false;\n    let score;\n\n    for (moveIdx = 0; moveIdx < moves.length; moveIdx++) {\n      if (position.makeMove(moves[moveIdx])) {\n        canMove = true;\n        score = -this.negaMax(position, depth - 1, -beta, -alpha);\n        position.unmakePrevMove();\n        if (score > alpha) {\n          alpha = score;\n          if (depth === this.maxDepth) { this.bestMove = moves[moveIdx]; }\n        }\n        if (alpha >= beta) { break; }\n      }\n    }\n\n    if (!canMove) {\n      if (position.inCheck(position.turn)) {\n        return -PUtils[PTypes.KINGS].value;\n      } else {\n        return 0;\n      }\n    } else {\n      return alpha;\n    }\n  }\n\n  sortMoves(moves) {\n    function calculateScore(move) {\n      let score = move.getCaptPiece()? ((1 + move.getCaptPiece()) / (1 + move.getPiece())): 0;\n    \tscore = score * 6 + move.getPiece();\n    \tscore = score * 16 + move.getType();\n    \tscore = score * 64 + move.getTo();\n    \tscore = score * 64 + move.getFrom();\n\n      return score;\n    }\n\n    moves.sort((moveA, moveB) => calculateScore(moveB) - calculateScore(moveA));\n    return moves;\n  }\n}\n\nmodule.exports = AI;\n\n\n\n// WEBPACK FOOTER //\n// ./js/ai/index.js","const { ColsFiles, FilesCols,\n        RowsRanks, RanksRows} = require('./constants.js');\n\nfunction posFromFileRank(fileRank) {\n  const [file, rank] = fileRank.split('');\n  return (RanksRows[rank] * 8) + FilesCols[file];\n}\n\nfunction fileRankFromPos(pos) {\n  return ColsFiles[pos % 8] + (RowsRanks[Math.floor(pos / 8)]);\n}\n\n// if the row and col are either both even or both odd\nfunction isDarkSquare(fileRank) {\n  const [file, rank] = fileRank.split('');\n  const row = RanksRows[rank];\n  const col = FilesCols[file];\n  return (row % 2 === 0 && col % 2 === 0) ||\n         (row % 2 === 1 && col % 2 === 1);\n}\n\nmodule.exports = {\n  posFromFileRank,\n  fileRankFromPos,\n  isDarkSquare\n};\n\n\n\n// WEBPACK FOOTER //\n// ./js/ui/util.js"],"sourceRoot":""}