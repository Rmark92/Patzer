{"version":3,"sources":["webpack:///webpack/bootstrap 6e3978a52e3e97df2d58","webpack:///./js/bitboard/index.js","webpack:///./js/pieces/index.js","webpack:///./js/pieces/constants.js","webpack:///./js/pieces/movements/dir_constants.js","webpack:///./js/pieces/movements/masks.js","webpack:///./js/pieces/movements/slide_moves.js","webpack:///./js/bitboard/bitboard.js","webpack:///./js/move/index.js","webpack:///./js/pieces/movements/step_move.js","webpack:///./js/ui/constants.js","webpack:///./js/app.js","webpack:///./js/ui/index.js","webpack:///./js/position/index.js","webpack:///./js/bitboard/utils.js","webpack:///./js/bitboard/masks.js","webpack:///./js/move/constants.js","webpack:///./js/pieces/pawns.js","webpack:///./js/pieces/knight.js","webpack:///./js/pieces/bishop.js","webpack:///./js/pieces/rook.js","webpack:///./js/pieces/queen.js","webpack:///./js/pieces/king.js","webpack:///./js/pieces/conversions.js","webpack:///./js/pieces/each_piece_type.js","webpack:///./js/position/zhash_constants.js","webpack:///./js/position/utils/array_conversions.js","webpack:///./js/ai/index.js","webpack:///./js/ai/move_search.js","webpack:///./js/ai/transpos_table.js","webpack:///./js/ai/perf_monitor.js","webpack:///./js/ui/util.js"],"names":["BitBoard","require","Masks","module","exports","BBMasks","Constants","Pawns","Knight","Bishop","Rook","Queen","King","PieceConv","eachPieceType","Dirs","PUtils","Types","PAWNS","KNIGHTS","BISHOPS","ROOKS","QUEENS","KINGS","PTypes","Colors","PieceTypeHTML","WHITE","BLACK","PieceTypeLetters","DIRS","stepMove","generateStepBitBoards","dirs","res","pos","initial","posRes","addMove","currRes","dir","or","fromPos","reduce","push","KNIGHT_MOVES","KING_MOVES","SLIDE_MOVES","moves","colIdx","rowIdx","diagIdx","antiDiagIdx","Math","floor","NORTH","COLS","and","NORTH_OF_ROW","SOUTH","SOUTH_OF_ROW","EAST","ROWS","EAST_OF_COL","WEST","WEST_OF_COL","NOEA","DIAGS","SOWE","NOWE","ANTI_DIAGS","SOEA","isPosRay","findUnblocked","occupied","posBB","dirBB","blocking","blockingPos","isZero","bitScanForward","bitScanReverse","xor","horizVert","notOwnPieces","diag","Utils","POW32","pow","low","high","other","numBits","newLowBits","newHighBits","count","int32","popCount32","bitScanForward32","Boolean","bitScanReverse32","cb","clearLeastSigBit32","row","posVal","console","log","length","setBit","positions","forEach","colNum","rowNum","posMax","startPos","Move","from","to","type","piece","captPiece","val","getFrom","getTo","getType","pieceType","getPiece","captPieceType","getCaptPiece","isPromo","isCastle","NPROMO","BPROMO","RPROMO","QPROMO","includes","CSTL_KING","CSTL_QUEEN","newMove","MoveTypes","noSo","eaWe","shiftLeft","shiftRight","ColsFiles","FilesCols","file","col","RowsRanks","RanksRows","rank","GameStatus","ThreeFoldRep","Checkmate","Stalemate","PlayerTurn","AITurn","Selectors","BOARD_ID","PIECE_CLASS","SQUARE_CLASS","RANK_CLASS","FILE_CLASS","UI","$","document","ready","ui","run","Position","AI","Util","ai","setupButtons","reset","empty","text","position","playerColor","parseInt","aiThinkingTime","parseFloat","setThinkingTime","drawBoard","playNextTurn","click","event","currentTarget","hasClass","unmakePlayerMove","aiMove","slider","value","thinkingTime","min","round","max","step","slide","E","formatTime","removeClass","addClass","prevMoves","currMoves","generateLegalMoves","isThreefoldRepetition","status","inCheck","turn","activateBtns","statusEl","unmakePrevMove","shiftFromMovesList","updatePieces","setupPlayerMove","moveStr","moveStats","depth","runTime","exploredPositions","mainSearchNodes","qSearchNodes","tTableHits","moveData","moveItem","formatMove","move","color","append","stats","populateStatsTable","movesHistory","newMoveItem","createMoveItem","prepend","remove","newRow","fileRank","newSquare","squareColor","isDarkSquare","board","newRankRow","rowsRanks","slice","reverse","generateSquare","generateFileHeader","pieceTypes","Object","values","pieces","newPiece","dup","pop1Bits","hasSetBit","fileRankFromPos","addToMovesList","makeMove","deactivateBtns","resetStatus","isGameOver","setTimeout","aiMoveData","chooseMove","animateMove","performance","pieceEl","captOffset","offset","css","left","top","fadeOut","oldOffset","appendTo","newOffset","animPiece","clone","hide","animate","show","movesData","map","getData","moveFromTos","moveToFroms","activateDraggablePieces","activateDroppableSquares","fromFileRank","keys","draggable","containment","revert","revertDuration","mouseenter","toPos","mouseleave","destSq","originSquare","originPos","selectedMove","droppable","accept","parent","attr","posFromFileRank","drop","makePlayerMove","selectedMoves","filter","createPromoWindow","pType","promoPiece","promoMoves","PromosPTypes","promoPieces","newPromoPiece","promoMove","createPromoPiece","promoDiv","createPromoPieces","promoWinRow","piecePosHashKeys","epPosHashKeys","castleHashKeys","turnHashKeys","pieceSetsToArray","pieceSetsFromArray","defaultInitVals","castleRights","epBB","prevStates","positionCounts","initVals","pTypesLocations","createPTypesLocations","pPosHash","createPiecesPosHash","stateHash","createStateHash","setTurn","getOtherColor","addPositionCount","getPieceAt","whitesPos","blacksPos","castleRightsPos","opp","includeQuiet","isNonStalemateDraw","addPawnMoves","addNormalMoves","addKingMoves","pseudoMoves","generatePseudoMoves","isLegal","legals","pseudoMove","testMove","testsLegal","pawnsPos","getColorPieceSet","notOccupied","getOccupied","not","pawnSinglePushes","singlePush","addPawnMoveSet","pawnDoublePushes","doublePush","oppPositions","pawnLeftAttacks","attacksLeft","pawnRightAttacks","attacksRight","newPositions","shiftAmt","isCapture","isDblPush","captured","DBL_PPUSH","EP_CAPT","PROMO_MASKS","addPromos","NORMAL","promoType","getNotOccupiedBy","knightsPos","knightMoves","addNormalMoveSet","bishopsPos","bishopMoves","rooksPos","rookMoves","queensPos","queenMoves","kingPos","normalMoves","addCastleMoves","newPos","captType","turnCastleRights","getCastleRights","INIT_POS","canCastle","types","idx","addPrevState","adjustCastleRights","epPos","execMoveType","swapTurn","clearPieceAt","movePiece","undo","setPieceAt","isLegalCastle","castleType","isAttacked","oppColor","pawns","queenBB","prevMove","pop","subtractPositionCount","reverseMoveType","prevState","clearRightsPos","clearRightsMask","clearCastleRights","state","currHash","getHash","capturedPos","clearBit","boardType","render","boardArr","rowStr","int","generateMSBTable","log2","mostSigBitTable","FULL_BOARD","cols","fromCol","rows","fromRow","diags","upperRightDiag","antiDiags","upperLeftDiag","bb","typesArr","INIT_MASKS","positionValues","oppPieces","onePush","castleSlide","popCount","pieceToLetter","toUpperCase","letterToColor","letter","letterToType","toLowerCase","randSigned32Bit","positive","random","newPosKeys","addPTypeKeys","rightsIdx","xx","WP","WN","WB","WR","WQ","WK","BP","BN","BB","BR","BQ","BK","defaultBoardArr","createEmptyBoardArr","array","MoveSearch","prevPerformance","availableMoves","moveSearch","bestMove","findBest","perfResults","getPerformance","TransposTable","PerfMonitor","initAvailable","transPosTable","perfMonitor","setStartTime","endTime","Date","now","maxDepth","negaMax","Infinity","setDepth","setEndTime","printResults","currNodeEntry","getEntry","getResults","alpha","beta","logQuiescentNode","standPatVal","evaluate","sortMoves","moveIdx","score","quiescenceSearch","prevAlpha","entry","logTableHit","logMainSearchNode","prevBestMove","canMove","result","bestScore","storeEntry","calculateScore","sort","moveA","moveB","materialScore","scoreMaterial","piecePositionScore","scorePiecePositions","piecePositions","size","table","Array","key","index","determineScoreType","tableHits","startTime","split","parseMoveStats","join","millisecs","timeStr","toString","indexOf"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6e3978a52e3e97df2d58","const BitBoard = require('./bitboard.js');\nconst Masks = require('./masks.js');\n\nmodule.exports = {\n  BitBoard,\n  BBMasks: Masks,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./js/bitboard/index.js","// const { WhitePawns, BlackPawns } = require('./pawns.js');\nconst Constants = require('./constants.js');\nconst Pawns = require('./pawns.js');\nconst Knight = require('./knight.js');\nconst Bishop = require('./bishop.js');\nconst Rook = require('./rook.js');\nconst Queen = require('./queen.js');\nconst King = require('./king.js');\nconst PieceConv = require('./conversions.js');\nconst eachPieceType = require('./each_piece_type.js');\nconst Dirs = require('./movements/dir_constants.js');\n\nconst PUtils = {\n  [Constants.Types.PAWNS]: Pawns,\n  [Constants.Types.KNIGHTS]: Knight,\n  [Constants.Types.BISHOPS]: Bishop,\n  [Constants.Types.ROOKS]: Rook,\n  [Constants.Types.QUEENS]: Queen,\n  [Constants.Types.KINGS]: King\n};\n\nmodule.exports = {\n  PTypes: Constants.Types,\n  Colors: Constants.Colors,\n  PieceTypeHTML: Constants.PieceTypeHTML,\n  PUtils,\n  eachPieceType,\n  Dirs,\n  PieceConv\n};\n\n\n\n// WEBPACK FOOTER //\n// ./js/pieces/index.js","const Colors = {\n  WHITE: 0,\n  BLACK: 1\n};\n\nconst Types = {\n  PAWNS: 2,\n  KNIGHTS: 3,\n  BISHOPS: 4,\n  ROOKS: 5,\n  QUEENS: 6,\n  KINGS: 7\n};\n\nconst PieceTypeLetters = {\n  [Types.PAWNS]: 'p',\n  [Types.KNIGHTS]: 'n',\n  [Types.BISHOPS]: 'b',\n  [Types.ROOKS]: 'r',\n  [Types.QUEENS]: 'q',\n  [Types.KINGS]: 'k',\n};\n\nconst PieceTypeHTML = {\n  [Types.PAWNS]: '&#9823;',\n  [Types.KNIGHTS]: '&#9822;',\n  [Types.BISHOPS]: '&#9821;',\n  [Types.ROOKS]: '&#9820;',\n  [Types.QUEENS]: '&#9819;',\n  [Types.KINGS]: '&#9818;',\n};\n\nmodule.exports = { Types, Colors, PieceTypeLetters, PieceTypeHTML };\n\n\n\n// WEBPACK FOOTER //\n// ./js/pieces/constants.js","const DIRS = {\n  'NORTH': 0,\n  'SOUTH': 1,\n  'EAST': 2,\n  'WEST': 3,\n  'NOEA': 4,\n  'NOWE': 5,\n  'SOEA': 6,\n  'SOWE': 7\n};\n\nmodule.exports = DIRS;\n\n\n\n// WEBPACK FOOTER //\n// ./js/pieces/movements/dir_constants.js","const { BitBoard, BBMasks } = require('../../bitboard');\nconst Dirs = require('./dir_constants.js');\nconst stepMove = require('./step_move.js');\n\nfunction generateStepBitBoards(dirs) {\n  const res = [];\n  let pos = 0;\n  let initial;\n  let posRes;\n\n  const addMove = (currRes, dir) => {\n    return currRes.or(stepMove(initial, dir[0], dir[1]));\n  };\n\n  while (pos < 64) {\n    initial = BitBoard.fromPos(pos);\n    posRes = dirs.reduce((currRes, dir) => addMove(currRes, dir), new BitBoard());\n    res.push(posRes);\n    pos++;\n  }\n\n  return res;\n}\n\nconst KNIGHT_MOVES = function() {\n  const dirs = [[1, 2], [1, -2],\n                [2, 1], [2, -1],\n                [-1, 2], [-1, -2],\n                [-2, 1], [-2, -1]];\n\n  return generateStepBitBoards(dirs);\n}();\n\nconst KING_MOVES = function() {\n  const dirs = [[1, 0], [1, 1],\n                [1, -1],[-1, 0],\n                [-1, 1], [-1, -1],\n                [0, -1], [0, 1]];\n\n  return generateStepBitBoards(dirs);\n}();\n\nconst SLIDE_MOVES = function() {\n  let pos = 0;\n  const res = [];\n  let moves;\n  let colIdx;\n  let rowIdx;\n  let diagIdx;\n  let antiDiagIdx;\n\n  while (pos < 64) {\n    moves = {};\n    rowIdx = Math.floor(pos / 8);\n    colIdx = pos % 8;\n    diagIdx = (pos < rowIdx * 9) ? (pos % 9) - 2 : (pos % 9) + 7;\n    if (pos === 63) {\n      antiDiagIdx = 14;\n    } else {\n      antiDiagIdx = (pos < (rowIdx + 1) * 7) ? (pos % 7) : (pos % 7) + 7;\n    }\n    moves[Dirs.NORTH] = BBMasks.COLS[colIdx].and(BBMasks.NORTH_OF_ROW[rowIdx]);\n    moves[Dirs.SOUTH] = BBMasks.COLS[colIdx].and(BBMasks.SOUTH_OF_ROW[rowIdx]);\n    moves[Dirs.EAST] = BBMasks.ROWS[rowIdx].and(BBMasks.EAST_OF_COL[colIdx]);\n    moves[Dirs.WEST] = BBMasks.ROWS[rowIdx].and(BBMasks.WEST_OF_COL[colIdx]);\n    moves[Dirs.NOEA] = BBMasks.DIAGS[diagIdx].and(BBMasks.NORTH_OF_ROW[rowIdx]);\n    moves[Dirs.SOWE] = BBMasks.DIAGS[diagIdx].and(BBMasks.SOUTH_OF_ROW[rowIdx]);\n    moves[Dirs.NOWE] = BBMasks.ANTI_DIAGS[antiDiagIdx].and(BBMasks.NORTH_OF_ROW[rowIdx]);\n    moves[Dirs.SOEA] = BBMasks.ANTI_DIAGS[antiDiagIdx].and(BBMasks.SOUTH_OF_ROW[rowIdx]);\n    res.push(moves);\n    pos++;\n  }\n\n  return res;\n}();\n\nmodule.exports = {\n  KNIGHT_MOVES,\n  KING_MOVES,\n  SLIDE_MOVES,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./js/pieces/movements/masks.js","const { BitBoard, BBMasks } = require('../../bitboard');\nconst { SLIDE_MOVES } = require('./masks.js');\nconst Dirs = require('./dir_constants.js');\n\nconst isPosRay = {\n  [Dirs.NORTH]: true,\n  [Dirs.EAST]: true,\n  [Dirs.NOEA]: true,\n  [Dirs.NOWE]: true,\n  [Dirs.SOUTH]: false,\n  [Dirs.WEST]: false,\n  [Dirs.SOEA]: false,\n  [Dirs.SOWE]: false\n};\n\nfunction findUnblocked(pos, occupied, dir) {\n  const posBB = new BitBoard();\n  const dirBB = SLIDE_MOVES[pos][dir];\n  const blocking = dirBB.and(occupied);\n  let blockingPos;\n\n  if (blocking.isZero()) {\n    return dirBB;\n  } else {\n    blockingPos = isPosRay[dir] ? blocking.bitScanForward() : blocking.bitScanReverse();\n    return dirBB.xor(SLIDE_MOVES[blockingPos][dir]);\n  }\n}\n\nfunction horizVert(pos, occupied, notOwnPieces) {\n  return [Dirs.NORTH, Dirs.SOUTH, Dirs.EAST, Dirs.WEST].reduce((res, dir) => {\n    return res.or(findUnblocked(pos, occupied, dir));\n  }, new BitBoard()).and(notOwnPieces);\n}\n\nfunction diag(pos, occupied, notOwnPieces) {\n  return [Dirs.NOEA, Dirs.NOWE, Dirs.SOEA, Dirs.SOWE].reduce((res, dir) => {\n    return res.or(findUnblocked(pos, occupied, dir));\n  }, new BitBoard()).and(notOwnPieces);\n}\n\nmodule.exports = {\n  horizVert,\n  diag\n};\n\n\n\n// WEBPACK FOOTER //\n// ./js/pieces/movements/slide_moves.js","const Utils = require('./utils.js');\n// A standard 8x8 chess board can be represented by a 64bit integer (bitboard),\n// in which a 1 means the position is occupied, a 0 means it's empty\n\n// We use several of these bitboards to represent a chess position\n// for example, the current set of pieces is represented by a bitboard\n// for each piece type and color\n\n// Since Javascript doesn't support bitwise operations for 64bit integers,\n// we implement most of those operations here, separating the 64bit int\n// into its low 32bit and high 32bit components\n\n//56 57 58 59 60 61 62 63\n//48 49 50 51 52 53 54 55  ^\n//40 41 42 43 44 45 46 47  |\n//32 33 34 35 36 37 38 39 HIGH\n//24 25 26 27 28 29 30 31 LOW\n//16 17 18 19 20 21 22 23  |\n// 8  9 10 11 12 13 14 15  v\n// 0  1  2  3  4  5  6  7\n\nconst POW32 = Math.pow(2, 32);\n\nclass BitBoard {\n  constructor(low, high) {\n    this.low = (low || 0) >>> 0;\n    this.high = (high || 0) >>> 0;\n  }\n\n  and(other) {\n    return new BitBoard(this.low & other.low, this.high & other.high);\n  }\n\n  or(other) {\n    return new BitBoard(this.low | other.low, this.high | other.high);\n  }\n\n  xor(other) {\n    return new BitBoard(this.low ^ other.low, this.high ^ other.high);\n  }\n\n  not() {\n    return new BitBoard(~this.low, ~this.high);\n  }\n\n  equals(other) {\n    return (this.low === other.low && this.high === other.high);\n  }\n\n  greaterThan(other) {\n    return (this.high > other.high || this.low > other.low);\n  }\n\n  lessThan(other) {\n    return (this.high < other.high || this.low < other.low);\n  }\n\n  isZero() {\n    return (this.high === 0 && this.low === 0);\n  }\n\n  shiftRight(numBits) {\n    let newLowBits, newHighBits;\n\n    if (numBits <= 0) {\n      return new BitBoard(this.low, this.high);\n    } else if (numBits > 63) {\n      return new BitBoard();\n    } else if (numBits >= 32) {\n      newLowBits = this.high >>> (numBits - 32);\n      newHighBits = 0;\n    } else {\n      newLowBits = (this.low >>> numBits) | (this.high << (32 - numBits));\n      newHighBits = this.high >>> numBits;\n    }\n\n    return new BitBoard(newLowBits, newHighBits);\n  }\n\n  shiftLeft(numBits) {\n    let newLowBits, newHighBits;\n\n    if (numBits <= 0) {\n      return new BitBoard(this.low, this.high);\n    } else if (numBits > 63) {\n      return new BitBoard();\n    } else if (numBits >= 32) {\n      newLowBits = 0;\n      newHighBits = (this.low << (numBits - 32)) >>> 0;\n    } else {\n      newLowBits = (this.low << numBits) >>> 0;\n      newHighBits =  ((this.low >>> (32 - numBits)) | (this.high << numBits)) >>> 0;\n    }\n\n    return new BitBoard(newLowBits, newHighBits);\n  }\n\n  popCount() {\n      return [this.low, this.high].reduce((count, int32) => {\n        return count + Utils.popCount32(int32);\n      }, 0);\n  }\n\n  setBit(pos) {\n    if (pos >= 32 && pos < 64) {\n      this.high = (this.high | (1 << (pos - 32))) >>> 0;\n    } else if (pos >= 0 && pos < 32) {\n      this.low = (this.low | (1 << pos)) >>> 0;\n    }\n  }\n\n  clearBit(pos) {\n    if (pos >= 32) {\n      this.high = (this.high & ~(1 << (pos - 32))) >>> 0;\n    } else {\n      this.low = (this.low & ~(1 << pos)) >>> 0;\n    }\n  }\n\n  bitScanForward() {\n    if (this.low) {\n      return Utils.bitScanForward32(this.low);\n    } else if (this.high) {\n      return Utils.bitScanForward32(this.high) + 32;\n    } else {\n      return null;\n    }\n  }\n\n  hasSetBit(pos) {\n    if (pos < 32) {\n      return Boolean(this.low & (1 << pos));\n    } else {\n      return Boolean(this.high & (1 << (pos - 32)));\n    }\n  }\n\n  bitScanReverse() {\n    if (this.high) {\n      return Utils.bitScanReverse32(this.high) + 32;\n    } else if (this.low) {\n      return Utils.bitScanReverse32(this.low);\n    } else {\n      return null;\n    }\n  }\n\n  pop1Bits(cb) {\n    while (this.low) {\n      cb(Utils.bitScanForward32(this.low));\n      this.low = Utils.clearLeastSigBit32(this.low);\n    }\n\n    while (this.high) {\n      cb(Utils.bitScanForward32(this.high) + 32);\n      this.high = Utils.clearLeastSigBit32(this.high);\n    }\n  }\n\n  dup() {\n    return new BitBoard(this.low, this.high);\n  }\n\n  static fromPos(pos) {\n    const res = new BitBoard();\n    res.setBit(pos);\n\n    return res;\n  }\n\n  static fromPositions(positions) {\n    const res = new BitBoard();\n\n    positions.forEach((pos) => {\n      res.setBit(pos);\n    });\n\n    return res;\n  }\n\n  static fromCol(colNum) {\n    const res = new BitBoard();\n    if (colNum < 0 || colNum > 7) { return res; }\n    let pos = colNum;\n\n    while (pos < 64) {\n      res.setBit(pos);\n      pos += 8;\n    }\n\n    return res;\n  }\n\n  static fromRow(rowNum) {\n    const res = new BitBoard();\n    if (rowNum < 0 || rowNum > 7) { return res; }\n\n    let pos = rowNum * 8;\n    let posMax = pos + 7;\n\n    while (pos <= posMax) {\n      res.setBit(pos);\n      pos++;\n    }\n\n    return res;\n  }\n\n  static upperRightDiag(startPos) {\n    const res = BitBoard.fromPos(startPos);\n    if (startPos < 0 || startPos > 63) { return res; }\n    let pos = startPos + 9;\n\n    while (pos < 64 && pos % 8 !== 0) {\n      res.setBit(pos);\n      pos += 9;\n    }\n\n    return res;\n  }\n\n  static upperLeftDiag(startPos) {\n    const res = new BitBoard();\n    if (startPos < 0 || startPos > 63) { return res; }\n    let pos = startPos;\n\n    while (pos < 64 && pos % 8 !== 0) {\n      res.setBit(pos);\n      pos += 7;\n    }\n\n    if (pos < 64) {\n      res.setBit(pos);\n    }\n\n    return res;\n  }\n\n  render() {\n    let row = '';\n    let pow = 63;\n    let posVal;\n    console.log('------');\n    while (pow >= 32) {\n      posVal = (Math.pow(2, pow - 32) & this.high) === 0 ? '0' : '1';\n      row = posVal + row;\n      if (row.length === 8) {\n        console.log(row);\n        row = '';\n      }\n      pow--;\n    }\n\n    while (pow >= 0) {\n      posVal = (Math.pow(2, pow) & this.low) === 0 ? '0' : '1';\n      row = posVal + row;\n      if (row.length === 8) {\n        console.log(row);\n        row = '';\n      }\n      pow--;\n    }\n    console.log('------');\n  }\n}\n\n\nmodule.exports = BitBoard;\n\n\n\n// WEBPACK FOOTER //\n// ./js/bitboard/bitboard.js","const { Types } = require('./constants.js');\n\nclass Move {\n  constructor(from, to, type, piece, captPiece) {\n    this.val = (((type & 0xf) << 18) >>> 0) |\n               ((((captPiece || 0) & 0x7) << 15) >>> 0) |\n               (((piece & 0x7) << 12) >>> 0) |\n               (((from & 0x3f) << 6) >>> 0) |\n               ((to & 0x3f) >>> 0) >>> 0;\n  }\n\n  // for testing purposes\n  static fromVal(val) {\n    const newMove = new Move(0, 0, 0, 0, 0);\n    newMove.val = val;\n    return newMove;\n  }\n\n  getData() {\n    return {\n      from: this.getFrom(),\n      to: this.getTo(),\n      type: this.getType(),\n      pieceType: this.getPiece(),\n      captPieceType: this.getCaptPiece(),\n      isPromo: this.isPromo(),\n      isCastle: this.isCastle()\n    };\n  }\n\n  getFrom() {\n    return (this.val >>> 6) & 0x3f;\n  }\n\n  getTo() {\n    return this.val & 0x3f;\n  }\n\n  getPiece() {\n    return (this.val >>> 12) & 0x7;\n  }\n\n  getCaptPiece() {\n    return (this.val >>> 15) & 0x7;\n  }\n\n  getType() {\n    return this.val >>> 18;\n  }\n\n  isPromo() {\n    return [Types.NPROMO, Types.BPROMO,\n            Types.RPROMO, Types.QPROMO].includes(this.getType());\n  }\n\n  isCastle() {\n    return [Types.CSTL_KING, Types.CSTL_QUEEN].includes(this.getType());\n  }\n}\n\nmodule.exports = { Move, MoveTypes: Types };\n\n\n\n// WEBPACK FOOTER //\n// ./js/move/index.js","const { BitBoard, BBMasks } = require('../../bitboard');\n\nfunction stepMove(initial, noSo, eaWe) {\n  let positions = initial;\n\n  if (noSo > 0) {\n    positions = positions.shiftLeft(noSo * 8);\n  } else if (noSo < 0){\n    positions = positions.shiftRight(noSo * -8);\n  }\n\n  if (eaWe > 0) {\n    positions = positions.shiftLeft(eaWe).and(BBMasks.EAST_OF_COL[eaWe - 1]);\n  } else if (eaWe < 0){\n    positions = positions.shiftRight(-eaWe).and(BBMasks.WEST_OF_COL[eaWe + 8]);\n  }\n\n  return positions;\n}\n\nmodule.exports = stepMove;\n\n\n\n// WEBPACK FOOTER //\n// ./js/pieces/movements/step_move.js","const ColsFiles = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n\nconst FilesCols = function() {\n  return ColsFiles.reduce((res, file, col) => {\n    res[file] = col;\n    return res;\n  }, {});\n}();\n\nconst RowsRanks = ['1', '2', '3', '4', '5', '6', '7', '8'];\n\nconst RanksRows = function() {\n  return RowsRanks.reduce((res, rank, row) => {\n    res[rank] = row;\n    return res;\n  }, {});\n}();\n\nconst GameStatus = {\n  ThreeFoldRep: 'Draw - Threefold Repetition',\n  // MoveLimitExc: 'Draw - Move Limit Exceeded (100)',\n  Checkmate: 'Checkmate',\n  Stalemate: 'Stalemate',\n  PlayerTurn: 'Player Turn',\n  AITurn: 'AI Turn'\n};\n\nconst Selectors = {\n  BOARD_ID: \"#board\",\n  PIECE_CLASS: 'piece',\n  SQUARE_CLASS: 'square',\n  RANK_CLASS: 'rank',\n  FILE_CLASS: 'file'\n};\n\nmodule.exports = { ColsFiles, FilesCols, RowsRanks, RanksRows, Selectors, GameStatus };\n\n\n\n// WEBPACK FOOTER //\n// ./js/ui/constants.js","const UI = require('./ui');\n\n$(document).ready(function() {\n  const ui = new UI();\n  ui.run();\n});\n\n\n\n// WEBPACK FOOTER //\n// ./js/app.js","const Position = require('../position');\nconst AI = require('../ai');\nconst { PTypes, Colors, PieceTypeHTML } = require('../pieces');\nconst { MoveTypes } = require('../move');\nconst Util = require('./util.js');\nconst { ColsFiles, FilesCols,\n        RowsRanks, RanksRows,\n        Selectors, GameStatus } = require('./constants.js');\n\nclass UI {\n  constructor() {\n    this.ai = new AI();\n  }\n\n  run() {\n    this.setupButtons();\n    this.reset();\n  }\n\n  reset() {\n    $('#board').empty();\n    $('#move-history').empty();\n    $('.ai-stats-header').text(`AI Stats`);\n    $('.move-stats td').empty();\n    this.position = new Position();\n    const playerColor = $('input[name=\"color-option\"]:checked').val();\n    this.playerColor = parseInt(playerColor);\n    const aiThinkingTime = parseFloat($('#ai-time-val').text()) * 1000;\n    this.ai.setThinkingTime(aiThinkingTime);\n    this.drawBoard();\n    this.playNextTurn();\n  }\n\n  setupButtons() {\n    $('#unmake').click((event) => {\n      if ($(event.currentTarget).hasClass('active')) {\n        this.unmakePlayerMove();\n        this.playNextTurn();\n      }\n    });\n\n    $('#auto').click((event) => {\n      if ($(event.currentTarget).hasClass('active')) {\n        this.aiMove();\n      }\n    });\n\n    $('#ai-time-slider').slider({\n      value: this.ai.thinkingTime / 1000,\n      min: Math.round(Math.log(.01) * 1000) / 1000,\n      max: Math.round(Math.log(30) * 1000) / 1000,\n      step: 0.01,\n      slide: (event, ui) => {\n        const val = Math.round(Math.pow(Math.E, ui.value) * 1000);\n        $('#ai-time-val').text(Util.formatTime(val));\n      }\n    });\n\n    $('#new-game').click((event) => {\n      if ($(event.currentTarget).hasClass('active')) {\n        this.reset();\n      }\n    });\n\n    $('#ai-time-val').text(Util.formatTime(this.ai.thinkingTime));\n  }\n\n  deactivateBtns() {\n    $('.clickable').removeClass('active');\n  }\n\n  activateBtns() {\n    $('.clickable').addClass('active');\n    if (this.position.prevMoves.length === 0) {\n      $('#unmake').removeClass('active');\n    }\n  }\n\n  resetStatus() {\n    this.currMoves = this.position.generateLegalMoves();\n\n    if (this.currMoves.length === 0) {\n      if (this.position.isThreefoldRepetition()) {\n        this.status = GameStatus.ThreeFoldRep;\n      // } else if (this.position.isMoveLimitExceeded()) {\n      //   this.status = GameStatus.MoveLimitExc;\n      } else if (this.position.inCheck(this.position.turn)) {\n        this.status = GameStatus.Checkmate;\n      } else {\n        this.status = GameStatus.Stalemate;\n      }\n      this.activateBtns();\n      $('#auto').removeClass('active');\n    } else {\n      if (this.position.turn === this.playerColor) {\n        this.status = GameStatus.PlayerTurn;\n      } else {\n        this.status = GameStatus.AITurn;\n      }\n    }\n\n    const statusEl = $('#status');\n\n    statusEl.text(this.status);\n  }\n\n  unmakePlayerMove() {\n    this.position.unmakePrevMove();\n    this.shiftFromMovesList();\n    if (this.position.turn !== this.playerColor) {\n      this.position.unmakePrevMove();\n      this.shiftFromMovesList();\n    }\n  }\n\n  playNextTurn() {\n    this.updatePieces();\n\n    if (this.position.turn === this.playerColor) {\n      this.setupPlayerMove();\n    } else {\n      this.aiMove();\n    }\n  }\n\n  populateStatsTable(moveStr, moveStats) {\n    $('.ai-stats-header').text(`AI Stats (${moveStr})`);\n    $('.depth-stat').text(moveStats.depth);\n    $('.runtime-stat').text(moveStats.runTime || 'N/A');\n    $('.explored-stat').text(moveStats.exploredPositions);\n    $('.main-search-stat').text(moveStats.mainSearchNodes);\n    $('.qsearch-stat').text(moveStats.qSearchNodes);\n    $('.ttable-hit-stat').text(moveStats.tTableHits);\n  }\n\n  createMoveItem(moveData) {\n    const moveItem = $('<tr class=\"move-item\"></tr>');\n    const moveStr = Util.formatMove(moveData.move, moveData.color);\n\n    moveItem.append($(`<td class=\"move-str\">${moveStr}</td>`));\n\n    if (moveData.stats) {\n      moveItem.addClass('stats-view-link clickable');\n      moveItem.click(() => this.populateStatsTable(moveStr, moveData.stats));\n    }\n\n    return moveItem;\n  }\n\n  addToMovesList(moveData) {\n    const movesHistory = $('#move-history');\n    const newMoveItem = this.createMoveItem(moveData);\n    movesHistory.prepend(newMoveItem);\n  }\n\n  shiftFromMovesList() {\n    $(\".move-item:first\").remove();\n  }\n\n  generateFileHeader() {\n    const newRow = $('<tr></tr>');\n    newRow.append(`<th>`);\n    ColsFiles.forEach((file) => {\n      newRow.append(`<th class=\"file\">${file}</th>`);\n    });\n    newRow.append(`<th>`);\n\n    return newRow;\n  }\n\n  generateSquare(file, rank) {\n    const fileRank = file + rank;\n\n    const newSquare = $(`<td id=\"${fileRank}\"></td>`);\n\n    const squareColor = Util.isDarkSquare(fileRank) ? 'dark' : 'light';\n    newSquare.addClass(squareColor + \" square\");\n\n    return newSquare;\n  }\n\n  drawBoard() {\n    const board = $('#board');\n\n    let newRankRow;\n    const rowsRanks = this.playerColor === Colors.WHITE ? RowsRanks : RowsRanks.slice().reverse();\n    rowsRanks.forEach((rank) => {\n      newRankRow = $('<tr>');\n      newRankRow.append(`<th class=\"rank\">${rank}</th>`);\n      ColsFiles.forEach((file) => {\n        newRankRow.append(this.generateSquare(file, rank));\n      });\n      newRankRow.append(`<th class=\"rank\">${rank}</th>`);\n      board.prepend(newRankRow);\n    });\n\n    board.prepend(this.generateFileHeader());\n    board.append(this.generateFileHeader());\n  }\n\n  updatePieces() {\n    $('.piece').remove();\n    // $('.square').removeClass('ui-droppable ui-draggable can-move-to');\n    const pieceTypes = Object.values(PTypes);\n    const pieces = this.position.pieces;\n    let fileRank;\n    let newPiece;\n\n    pieceTypes.forEach((pieceType) => {\n      pieces[pieceType].dup().pop1Bits((pos) => {\n        newPiece = $(`<div class=\"piece\">${PieceTypeHTML[pieceType]}<div>`);\n        if (pieces[Colors.WHITE].hasSetBit(pos)) {\n          newPiece.addClass('white');\n        } else {\n          newPiece.addClass('black');\n        }\n        fileRank = Util.fileRankFromPos(pos);\n        $(`#${fileRank}`).append(newPiece);\n      });\n    });\n  }\n\n  makeMove(move, stats) {\n    this.addToMovesList({ move, color: this.position.turn, stats });\n    if (stats) {\n      this.populateStatsTable(Util.formatMove(move, this.position.turn), stats);\n    }\n    this.position.makeMove(move);\n  }\n\n  isGameOver() {\n    return ![GameStatus.AITurn, GameStatus.PlayerTurn].includes(this.status);\n  }\n\n  aiMove() {\n    this.deactivateBtns();\n    this.resetStatus();\n    if (this.isGameOver()) { return; }\n\n    setTimeout(() => {\n      const aiMoveData = this.ai.chooseMove(this.position, this.currMoves);\n      this.animateMove(aiMoveData.move, () => {\n        this.makeMove(aiMoveData.move, aiMoveData.performance);\n        this.playNextTurn();\n      });\n    }, 0);\n  }\n\n  animateMove(move, cb) {\n    const pieceEl = $(`#${Util.fileRankFromPos(move.getFrom())} .piece`);\n    const newSquare = $(`#${Util.fileRankFromPos(move.getTo())}`);\n\n    if (move.getCaptPiece()) {\n      const captPiece = $(`#${Util.fileRankFromPos(move.getTo())} .piece`);\n      const captOffset = captPiece.offset();\n      captPiece.css({\n        'position': 'absolute',\n        'left': captOffset.left,\n        'top': captOffset.top\n      });\n      captPiece.fadeOut(450);\n    }\n\n    const oldOffset = pieceEl.offset();\n    pieceEl.appendTo(newSquare);\n    const newOffset = pieceEl.offset();\n\n    const animPiece = pieceEl.clone().appendTo('body');\n    animPiece.css({\n      'position': 'absolute',\n      'left': oldOffset.left,\n      'top': oldOffset.top,\n      'z-index': 1000\n    });\n    pieceEl.hide();\n\n    animPiece.animate({'top': newOffset.top, 'left': newOffset.left}, 450, function(){\n      pieceEl.show();\n      animPiece.remove();\n      cb();\n    });\n  }\n\n  setupPlayerMove() {\n    this.activateBtns();\n    this.resetStatus();\n    if (this.isGameOver()) { return; }\n\n    const movesData = this.currMoves.map((move) => move.getData());\n    const moveFromTos = {};\n    const moveToFroms = {};\n\n    movesData.forEach((moveData) => {\n      moveFromTos[moveData.from] = moveFromTos[moveData.from] || [];\n      moveFromTos[moveData.from].push(moveData.to);\n\n      moveToFroms[moveData.to] = moveToFroms[moveData.to] || [];\n      moveToFroms[moveData.to].push(moveData.from);\n    });\n\n    this.activateDraggablePieces(moveFromTos);\n    this.activateDroppableSquares(moveToFroms);\n  }\n\n  activateDraggablePieces(moveFromTos) {\n    let fromFileRank;\n    let pieceEl;\n\n    Object.keys(moveFromTos).forEach((fromPos) => {\n      fromFileRank = Util.fileRankFromPos(fromPos);\n      pieceEl = $(`#${fromFileRank} .piece`);\n      pieceEl.draggable({\n        containment: $('#board'),\n        revert: 'invalid',\n        revertDuration: 300\n      });\n\n      pieceEl.mouseenter(() => {\n        if (pieceEl.hasClass('ui-draggable')) {\n          moveFromTos[fromPos].forEach((toPos) => {\n            $(`#${Util.fileRankFromPos(toPos)}`).addClass('can-move-to');\n          });\n        }\n      });\n\n      pieceEl.mouseleave(() => {\n        $('.square').removeClass('can-move-to');\n      });\n    });\n  }\n\n  activateDroppableSquares(moveToFroms) {\n    let destSq;\n    let originSquare;\n    let originPos;\n    let selectedMove;\n\n    Object.keys(moveToFroms).forEach((toPos) => {\n      destSq = $(`#${Util.fileRankFromPos(toPos)}`);\n      destSq.droppable({\n        accept: (draggable) => {\n          originSquare = $(draggable).parent().attr('id');\n          if (!originSquare) { return false; }\n          originPos = Util.posFromFileRank(originSquare);\n          return moveToFroms[toPos].includes(originPos);\n        },\n        drop: (event, ui) => {\n          this.makePlayerMove(ui.draggable, parseInt(toPos));\n        }\n      });\n    });\n  }\n\n  makePlayerMove(piece, toPos) {\n    const originSquare = $(piece).parent();\n    piece.remove();\n\n    $('.ui-draggable').draggable('destroy');\n    $('.ui-droppable').droppable('destroy');\n    $('.square').removeClass('can-move-to');\n    this.deactivateBtns();\n\n    const originPos = Util.posFromFileRank($(originSquare).attr('id'));\n    const destSq = $(`#${Util.fileRankFromPos(toPos)}`);\n    const selectedMoves = this.currMoves.filter((move) => {\n      return move.getFrom() === originPos &&\n             move.getTo() === toPos;\n    });\n\n    if (selectedMoves.length > 1) {\n      const color = this.playerColor === Colors.WHITE ? 'white' : 'black';\n      this.createPromoWindow(destSq, selectedMoves, color);\n    } else {\n      let selectedMove = selectedMoves[0];\n      this.position.makeMove(selectedMove);\n      this.playNextTurn();\n    }\n  }\n\n  createPromoPiece(move, pType, color) {\n    const promoPiece = $(`<div class='promo-piece piece ${color}'\">${PieceTypeHTML[pType]}</div>`);\n    promoPiece.click(() => {\n      $('.promo-window').remove();\n      this.position.makeMove(move);\n      this.playNextTurn();\n    });\n\n    return promoPiece;\n  }\n\n  createPromoPieces(promoMoves, color) {\n    const PromosPTypes = {\n      [MoveTypes.NPROMO]: PTypes.KNIGHTS,\n      [MoveTypes.BPROMO]: PTypes.BISHOPS,\n      [MoveTypes.RPROMO]: PTypes.ROOKS,\n      [MoveTypes.QPROMO]: PTypes.QUEENS\n    };\n\n    const promoPieces = [];\n    let newPromoPiece;\n\n    promoMoves.forEach((promoMove) => {\n      newPromoPiece = this.createPromoPiece(promoMove, PromosPTypes[promoMove.getType()], color);\n      promoPieces.push(newPromoPiece);\n    });\n\n    return promoPieces;\n  }\n\n  createPromoWindow(destSq, promoMoves, color) {\n    const promoDiv = $(\"<div class='promo-window'></div>\");\n    const promoPieces = this.createPromoPieces(promoMoves, color);\n\n    let promoWinRow = $(\"<div class='promo-window-row'></div>\");\n    promoWinRow.append(promoPieces.slice(0, 2));\n    promoDiv.append(promoWinRow);\n\n    promoWinRow = $(\"<div class='promo-window-row'></div>\");\n    promoWinRow.append(promoPieces.slice(2));\n    promoDiv.append(promoWinRow);\n\n    destSq.append(promoDiv);\n  }\n}\n\nmodule.exports = UI;\n\n\n\n// WEBPACK FOOTER //\n// ./js/ui/index.js","const { BitBoard, BBMasks } = require('../bitboard');\n\nconst { Move, MoveTypes } = require('../move');\n\nconst { PUtils, PTypes,\n        Colors, Dirs } = require('../pieces');\n\nconst { piecePosHashKeys,\n        epPosHashKeys,\n        castleHashKeys,\n        turnHashKeys } = require('./zhash_constants.js');\n\nconst { pieceSetsToArray,\n        pieceSetsFromArray } = require('./utils/array_conversions.js');\n\n\nconst defaultInitVals = {\n  pieces: pieceSetsFromArray(),\n  turn: Colors.WHITE,\n  prevMoves: [],\n  // castling rights represented by 4bit int\n  // in the following order (left bit to right):\n  // bKing bQueen wKing wQueen\n  castleRights: 0xf,\n  // the en passant BB will either be empty\n  // or have one position marked that indicates\n  // the destination of an en passant attack\n  epBB: new BitBoard(),\n  // holds previous state info (castling rights, en passant)\n  // for move reversal purposes\n  prevStates: [],\n  positionCounts: {}\n};\n\nclass Position {\n  constructor(initVals) {\n    initVals = initVals || defaultInitVals;\n\n    this.pieces = initVals.pieces;\n\n    this.prevMoves = initVals.prevMoves;\n\n    this.castleRights = initVals.castleRights;\n\n    this.epBB = initVals.epBB;\n\n    this.prevStates = initVals.prevStates;\n\n    this.pTypesLocations = this.createPTypesLocations();\n\n    // we separate our hashed values into piece position hashes\n    // and state hashes for simpler integration with our move making/unmaking process\n    // they are xor'd to represent the complete position\n    this.pPosHash = this.createPiecesPosHash();\n    this.stateHash = this.createStateHash();\n\n    this.setTurn(initVals.turn, this.getOtherColor(initVals.turn));\n\n    this.positionCounts = initVals.positionCounts;\n    this.addPositionCount();\n  }\n\n  createPTypesLocations() {\n    let pos;\n    const res = [];\n\n    for (pos = 0; pos < 64; pos++) {\n      res[pos] = this.getPieceAt(pos);\n    }\n\n    return res;\n  }\n\n  createPiecesPosHash() {\n    let val = new BitBoard();\n\n    let pType;\n    const whitesPos = this.pieces[Colors.WHITE];\n    whitesPos.dup().pop1Bits((pos) => {\n      pType = this.pTypesLocations[pos];\n      val ^= piecePosHashKeys[pos][pType][Colors.WHITE];\n    });\n\n    const blacksPos = this.pieces[Colors.BLACK];\n    blacksPos.dup().pop1Bits((pos) => {\n      pType = this.pTypesLocations[pos];\n      val ^= piecePosHashKeys[pos][pType][Colors.BLACK];\n    });\n\n    return val;\n  }\n\n  createStateHash() {\n    let val = new BitBoard();\n    this.epBB.dup().pop1Bits((pos) => {\n      val ^= epPosHashKeys[pos];\n    });\n\n    let castleRightsPos;\n    for (castleRightsPos = 0; castleRightsPos < 4; castleRightsPos++) {\n      if ((this.castleRights & (1 << castleRightsPos)) >>> 0) {\n        val ^= castleHashKeys[castleRightsPos];\n      }\n    }\n\n    return val;\n  }\n\n  getHash() {\n    return this.pPosHash ^ this.stateHash ^ turnHashKeys[this.turn];\n  }\n\n  setTurn(turn, opp) {\n    this.turn = turn;\n    this.opp = opp;\n  }\n\n  swapTurn() {\n    this.setTurn(this.opp, this.turn);\n  }\n\n  getOtherColor(color) {\n    return color ^ Colors.BLACK;\n  }\n\n  // generates all pseudo legal moves, ie moves that may put the king\n  // in check but are otherwise legal\n  // why do this: our ai move search generates all moves for a position\n  // and then considers each move individually. some of those moves\n  // will not be considered due to pruning cutoffs, so it's more efficient\n  // to only check for full legality of moves that we actually consider\n  generatePseudoMoves(includeQuiet = true) {\n    const moves = [];\n    if (this.isNonStalemateDraw()) { return moves; }\n    this.addPawnMoves(moves, includeQuiet);\n    this.addNormalMoves(moves, includeQuiet);\n    this.addKingMoves(moves, includeQuiet);\n\n    return moves;\n  }\n\n  // generates moves with a filter for whether the move puts the king in check\n  // mainly used to determine checkmate or stalemate\n  generateLegalMoves() {\n    const pseudoMoves = this.generatePseudoMoves();\n    let moveData;\n    let isLegal;\n\n    const legals = [];\n    return pseudoMoves.filter((pseudoMove) => {\n      moveData = pseudoMove.getData();\n\n      this.testMove(moveData, (testsLegal) => {\n        isLegal = testsLegal;\n        return true;\n      });\n\n      return isLegal;\n    });\n  }\n\n  // inserts pawn moves into the moves array\n  addPawnMoves(moves, includeQuiet) {\n    const pawnsPos = this.getColorPieceSet(this.turn, PTypes.PAWNS);\n\n    if (includeQuiet) {\n      const notOccupied = this.getOccupied().not();\n\n      const pawnSinglePushes = PUtils[PTypes.PAWNS].singlePush(this.turn, pawnsPos, notOccupied);\n      this.addPawnMoveSet(pawnSinglePushes, 8 * PUtils[PTypes.PAWNS].DIRS[this.turn], moves);\n\n      const pawnDoublePushes = PUtils[PTypes.PAWNS].doublePush(this.turn, pawnsPos, notOccupied);\n      this.addPawnMoveSet(pawnDoublePushes, 16 * PUtils[PTypes.PAWNS].DIRS[this.turn], moves, false, true);\n    }\n\n    let oppPositions = this.pieces[this.opp].or(this.epBB);\n\n    const pawnLeftAttacks = PUtils[PTypes.PAWNS].attacksLeft(this.turn, pawnsPos, oppPositions);\n    this.addPawnMoveSet(pawnLeftAttacks, 7 * PUtils[PTypes.PAWNS].DIRS[this.turn], moves, true);\n\n    const pawnRightAttacks = PUtils[PTypes.PAWNS].attacksRight(this.turn, pawnsPos, oppPositions);\n    this.addPawnMoveSet(pawnRightAttacks, 9 * PUtils[PTypes.PAWNS].DIRS[this.turn], moves, true);\n  }\n\n  // takes a new position set for pawns and adds each corresponding move\n  // to the moves array, with special handling for en passants, promotions and double pushes\n\n  // note: unlike other pieces, we map pawn movements from the set of all existing pawns\n  // rather than each pawn individually, so the function takes a shift amount to determine\n  // the location of the individual pawn that moved to a new position\n  addPawnMoveSet(newPositions, shiftAmt, moves, isCapture, isDblPush) {\n    let from;\n    let captured = null;\n\n    newPositions.pop1Bits((pos) => {\n      from = pos - shiftAmt;\n      if (isDblPush) {\n        moves.push(new Move(from, pos, MoveTypes.DBL_PPUSH, PTypes.PAWNS));\n      } else if (isCapture && this.epBB.hasSetBit(pos)) {\n        moves.push(new Move(from, pos, MoveTypes.EP_CAPT, PTypes.PAWNS));\n      } else {\n        if (isCapture) { captured = this.pTypesLocations[pos]; }\n\n        if (PUtils[PTypes.PAWNS].PROMO_MASKS[this.turn].hasSetBit(pos)) {\n          this.addPromos(from, pos, moves, captured);\n        } else {\n          moves.push(new Move(from, pos, MoveTypes.NORMAL, PTypes.PAWNS, captured));\n        }\n      }\n    });\n  }\n\n  // adds a move to the moves array for each possible promotion type\n\n  // side note: I was curious about why you'd ever promote to rook or bishop\n  // and the reason is if promoting to a queen results in stalemate\n  addPromos(from, to, moves, captured) {\n    [MoveTypes.NPROMO, MoveTypes.BPROMO,\n     MoveTypes.RPROMO, MoveTypes.QPROMO].forEach((promoType) => {\n       moves.push(new Move(from, to, promoType, PTypes.PAWNS, captured));\n     });\n  }\n\n  // adds moves to the moves array for all pieces that don't\n  // have 'special' moves, ie not pawns or kings\n  addNormalMoves(moves, includeQuiet) {\n    const occupied = this.getOccupied();\n    const notOwnPieces = this.getNotOccupiedBy(this.turn);\n\n    const knightsPos = this.getColorPieceSet(this.turn, PTypes.KNIGHTS);\n    let knightMoves;\n    knightsPos.dup().pop1Bits((pos) => {\n      knightMoves = PUtils[PTypes.KNIGHTS].moves(pos, notOwnPieces);\n      this.addNormalMoveSet(knightMoves, pos, PTypes.KNIGHTS, moves, includeQuiet);\n    });\n\n    const bishopsPos = this.getColorPieceSet(this.turn, PTypes.BISHOPS);\n    let bishopMoves;\n    bishopsPos.dup().pop1Bits((pos) => {\n      bishopMoves = PUtils[PTypes.BISHOPS].moves(pos, occupied, notOwnPieces);\n      this.addNormalMoveSet(bishopMoves, pos, PTypes.BISHOPS, moves, includeQuiet);\n    });\n\n    const rooksPos = this.getColorPieceSet(this.turn, PTypes.ROOKS);\n    let rookMoves;\n    rooksPos.dup().pop1Bits((pos) => {\n      rookMoves = PUtils[PTypes.ROOKS].moves(pos, occupied, notOwnPieces);\n      this.addNormalMoveSet(rookMoves, pos, PTypes.ROOKS, moves, includeQuiet);\n    });\n\n    const queensPos = this.getColorPieceSet(this.turn, PTypes.QUEENS);\n    let queenMoves;\n    queensPos.dup().pop1Bits((pos) => {\n      queenMoves = PUtils[PTypes.QUEENS].moves(pos, occupied, notOwnPieces);\n      this.addNormalMoveSet(queenMoves, pos, PTypes.QUEENS, moves, includeQuiet);\n    });\n  }\n\n  // adds available king moves to the moves array\n  addKingMoves(moves, includeQuiet) {\n      const notOwnPieces = this.getNotOccupiedBy(this.turn);\n      const kingPos = this.getColorPieceSet(this.turn, PTypes.KINGS).bitScanForward();\n\n      // for testing purposes...\n      if (kingPos === null) { return; }\n\n      const normalMoves = PUtils[PTypes.KINGS].moves(kingPos, notOwnPieces);\n      this.addNormalMoveSet(normalMoves, kingPos, PTypes.KINGS, moves, includeQuiet);\n\n      if (includeQuiet) {\n        this.addCastleMoves(moves);\n      }\n  }\n\n  // takes a BB of possible new positions for a single\n  // piece and adds each corresponding move to the moves array\n  addNormalMoveSet(newPositions, startPos, pieceType, moves, includeQuiet) {\n    let newPos;\n    let newMove;\n    let captType;\n\n    newPositions.pop1Bits((pos) => {\n      captType = this.pieces[this.opp].hasSetBit(pos) ? this.pTypesLocations[pos] : null;\n      if (includeQuiet || captType) {\n        moves.push(new Move(startPos, pos, MoveTypes.NORMAL, pieceType, captType));\n      }\n    });\n  }\n\n  // adds available castling moves to the moves array\n  addCastleMoves(moves) {\n    const turnCastleRights = this.getCastleRights(this.turn);\n    const startPos = PUtils[PTypes.KINGS].INIT_POS[this.turn];\n    const notOccupied = this.getOccupied().not();\n\n    if ((turnCastleRights & 0b1) && PUtils[PTypes.KINGS].canCastle(this.turn, Dirs.WEST, notOccupied)) {\n      moves.push(new Move(startPos, startPos - 2, MoveTypes.CSTL_QUEEN, PTypes.KINGS));\n    }\n\n    if ((turnCastleRights & 0b10) && PUtils[PTypes.KINGS].canCastle(this.turn, Dirs.EAST, notOccupied)) {\n      moves.push(new Move(startPos, startPos + 2, MoveTypes.CSTL_KING, PTypes.KINGS));\n    }\n  }\n\n  // returns 2bit value for the color's castling rights\n  // left bit => king-side rights\n  // right bit => queen-side rights\n  getCastleRights(color) {\n    return color === Colors.WHITE ? this.castleRights & 0b11 : this.castleRights >>> 2;\n  }\n\n  // returns a BB with occupied positions for a given color and piece type\n  getColorPieceSet(color, pieceType) {\n    return this.pieces[color].and(this.pieces[pieceType]);\n  }\n\n  // returns a BB of all occupied positions\n  getOccupied() {\n    return this.pieces[Colors.WHITE].or(this.pieces[Colors.BLACK]);\n  }\n\n  // returns a BB of all positions that this color does not occupy\n  getNotOccupiedBy(color) {\n    return this.pieces[color].not();\n  }\n\n  // returns the piece type that occupies the given position\n  // if no piece is found, returns null\n  getPieceAt(pos) {\n    const types = Object.values(PTypes);\n\n    let idx;\n    let type;\n\n    for (idx = 0; idx < types.length; idx++) {\n      type = types[idx];\n      if (this.pieces[type].hasSetBit(pos)) {\n        return type;\n      }\n    }\n\n    return null;\n  }\n\n  // makes a specified move if it's legal, updating the current position\n  // returns true if the move is made, false otherwise\n  makeMove(move) {\n    const moveData = move.getData();\n\n    let isLegal;\n    this.testMove(moveData, (testsLegal) => {\n      isLegal = testsLegal;\n      return !isLegal;\n    });\n\n    if (!isLegal) { return false; }\n    this.addPrevState();\n\n    this.adjustCastleRights(moveData.pieceType, moveData.from, moveData.captPieceType, moveData.to);\n    const epPos = this.epBB.bitScanForward();\n    if (epPos !== null) { this.stateHash ^= epPosHashKeys[epPos]; }\n    this.epBB = new BitBoard();\n\n    this.execMoveType(moveData.from, moveData.to, moveData.type);\n\n    this.prevMoves.push(move);\n    this.swapTurn();\n    this.addPositionCount();\n\n    return true;\n  }\n\n  // makes the piece movements needed to determine\n  // if the move is legal, sends a boolean for the legality\n  // to the callback and undoes the piece movements if the callback\n  // returns true\n  testMove(moveData, cb) {\n    if (moveData.captPieceType) {\n      this.clearPieceAt(moveData.to, this.opp, moveData.captPieceType);\n    }\n\n    if (moveData.isPromo) {\n      this.clearPieceAt(moveData.from, this.turn, PTypes.PAWNS);\n    } else {\n      this.movePiece(moveData.from, moveData.to, this.turn, moveData.pieceType);\n    }\n\n    const undo = cb(this.testsLegal(moveData));\n    if (!undo) { return; }\n\n    if (moveData.isPromo) {\n      this.setPieceAt(moveData.from, this.turn, PTypes.PAWNS);\n    } else {\n      this.movePiece(moveData.to, moveData.from, this.turn, moveData.pieceType);\n    }\n\n    if (moveData.captPieceType) {\n      this.setPieceAt(moveData.to, this.opp, moveData.captPieceType);\n    }\n  }\n\n  // returns boolean for whether or not move is legal\n  // based on the current position\n  testsLegal(moveData) {\n    if (moveData.isCastle) {\n      return this.isLegalCastle(moveData.from, moveData.type);\n    } else {\n      return !this.inCheck(this.turn);\n    }\n  }\n\n  isLegalCastle(pos, castleType) {\n    const dir = castleType === MoveTypes.CSTL_KING ? 1 : -1;\n    let count = 0;\n\n    while (count <= 2) {\n      if (this.isAttacked(pos, this.turn)) { return false; }\n      count++;\n      pos += dir;\n    }\n\n    return true;\n  }\n\n  // returns boolean for whether the provided color's king is in check\n  inCheck(color) {\n    const kingPos = this.getColorPieceSet(color, PTypes.KINGS).bitScanForward();\n    // for testing purposes...\n    if (kingPos === null) {\n      console.log('NO KING');\n      console.log(this.prevMoves.map((move) => move.val));\n    }\n    return this.isAttacked(kingPos, color);\n  }\n\n\n  // returns boolean for whether any opponent color piece is attacking the provided position\n  isAttacked(pos, color) {\n    const posBB = BitBoard.fromPos(pos);\n    const occupied = this.getOccupied();\n    const oppColor = this.getOtherColor(color);\n    const pawns = this.getColorPieceSet(oppColor, PTypes.PAWNS);\n\n    const queenBB = this.getColorPieceSet(oppColor, PTypes.QUEENS);\n    return (!PUtils[PTypes.PAWNS].attacksLeft(oppColor, pawns, posBB).isZero() ||\n            !PUtils[PTypes.PAWNS].attacksRight(oppColor, pawns, posBB).isZero() ||\n            !PUtils[PTypes.KNIGHTS].moves(pos, this.getColorPieceSet(oppColor, PTypes.KNIGHTS)).isZero() ||\n            !PUtils[PTypes.BISHOPS].moves(pos, occupied, this.getColorPieceSet(oppColor, PTypes.BISHOPS).or(queenBB)).isZero() ||\n            !PUtils[PTypes.ROOKS].moves(pos, occupied, this.getColorPieceSet(oppColor, PTypes.ROOKS).or(queenBB)).isZero() ||\n            !PUtils[PTypes.KINGS].moves(pos, this.getColorPieceSet(oppColor, PTypes.KINGS)).isZero());\n  }\n\n  // unmakes the previous move, updating the current position\n  unmakePrevMove() {\n    const prevMove = this.prevMoves.pop();\n    if (!prevMove) { return false; }\n\n    this.subtractPositionCount();\n    this.swapTurn();\n\n    const moveData = prevMove.getData();\n\n    this.reverseMoveType(moveData.from, moveData.to, moveData.type);\n\n    const prevState = this.prevStates.pop();\n    this.epBB = prevState.epBB;\n    this.castleRights = prevState.castleRights;\n    this.stateHash = prevState.stateHash;\n\n    if (moveData.isPromo) {\n      this.setPieceAt(moveData.from, this.turn, PTypes.PAWNS);\n    } else {\n      this.movePiece(moveData.to, moveData.from, this.turn, moveData.pieceType);\n    }\n\n\n    if (moveData.captPieceType) {\n      this.setPieceAt(moveData.to, this.opp, moveData.captPieceType);\n    }\n\n    return true;\n  }\n\n  clearCastleRights(color, dir) {\n    let clearRightsPos = 0;\n    if (color === Colors.BLACK) { clearRightsPos += 2; }\n    if (dir === Dirs.EAST) { clearRightsPos += 1; }\n\n    let clearRightsMask = 1 << clearRightsPos;\n    if (clearRightsMask & this.castleRights) {\n      this.castleRights = (this.castleRights & (~clearRightsMask)) >>> 0;\n      this.stateHash ^= castleHashKeys[clearRightsPos];\n    }\n  }\n\n  // makes adjustments to the castling rights\n  // if a rook or king is moved\n  adjustCastleRights(pieceType, from, captPieceType, to) {\n    const turnCastleRights = this.getCastleRights(this.turn);\n    let dir;\n    if (pieceType === PTypes.KINGS && turnCastleRights) {\n      this.clearCastleRights(this.turn, Dirs.EAST);\n      this.clearCastleRights(this.turn, Dirs.WEST);\n    } else if (pieceType === PTypes.ROOKS && turnCastleRights) {\n      dir = from > PUtils[PTypes.KINGS].INIT_POS[this.turn] ? Dirs.EAST : Dirs.WEST;\n      this.clearCastleRights(this.turn, dir);\n    }\n\n    if (captPieceType === PTypes.ROOKS && this.getCastleRights(this.opp)) {\n      dir = to > PUtils[PTypes.KINGS].INIT_POS[this.opp] ? Dirs.EAST : Dirs.WEST;\n      this.clearCastleRights(this.opp, dir);\n    }\n  }\n\n  // adds the current state values to the prevStates array\n  // used for move unmaking purposes\n  addPrevState() {\n    const state = { epBB: this.epBB,\n                    castleRights: this.castleRights,\n                    stateHash: this.stateHash\n                  };\n    this.prevStates.push(state);\n  }\n\n  addPositionCount() {\n    const currHash = this.getHash();\n    if (!this.positionCounts[currHash]) {\n      this.positionCounts[currHash] = 1;\n    } else {\n      this.positionCounts[currHash] += 1;\n    }\n  }\n\n  subtractPositionCount() {\n    const currHash = this.getHash();\n    this.positionCounts[currHash] -= 1;\n    if (this.positionCounts[currHash] <= 0) {\n      delete this.positionCounts[currHash];\n    }\n  }\n\n  // makes special adjustments to the position based on the move type\n  execMoveType(from, to, type) {\n    switch(type) {\n      case MoveTypes.NORMAL:\n        return;\n      case MoveTypes.DBL_PPUSH:\n        let epPos = to + (-PUtils[PTypes.PAWNS].DIRS[this.turn] * 8);\n        this.epBB = BitBoard.fromPos(epPos);\n        this.stateHash ^= epPosHashKeys[epPos];\n        break;\n      case MoveTypes.CSTL_KING:\n        this.movePiece(from + 3, from + 1, this.turn, PTypes.ROOKS);\n        break;\n      case MoveTypes.CSTL_QUEEN:\n        this.movePiece(from - 4, from - 1, this.turn, PTypes.ROOKS);\n        break;\n      case MoveTypes.EP_CAPT:\n        let capturedPos = to - (PUtils[PTypes.PAWNS].DIRS[this.turn] * 8);\n        this.clearPieceAt(capturedPos, this.opp, PTypes.PAWNS);\n        break;\n      case MoveTypes.NPROMO:\n        this.setPieceAt(to, this.turn, PTypes.KNIGHTS);\n        break;\n      case MoveTypes.BPROMO:\n        this.setPieceAt(to, this.turn, PTypes.BISHOPS);\n        break;\n      case MoveTypes.RPROMO:\n        this.setPieceAt(to, this.turn, PTypes.ROOKS);\n        break;\n      case MoveTypes.QPROMO:\n        this.setPieceAt(to, this.turn, PTypes.QUEENS);\n        break;\n    }\n  }\n\n  // unmakes special adjustments to the position based on the move type\n  reverseMoveType(from, to, type) {\n    switch(type) {\n      case MoveTypes.NORMAL:\n      case MoveTypes.DBL_PPUSH:\n        return;\n      case MoveTypes.CSTL_KING:\n        this.movePiece(from + 1, from + 3, this.turn, PTypes.ROOKS);\n        break;\n      case MoveTypes.CSTL_QUEEN:\n        this.movePiece(from - 1, from - 4, this.turn, PTypes.ROOKS);\n        break;\n      case MoveTypes.EP_CAPT:\n        let capturedPos = to - (PUtils[PTypes.PAWNS].DIRS[this.turn] * 8);\n        this.setPieceAt(capturedPos, this.opp, PTypes.PAWNS);\n        break;\n      case MoveTypes.NPROMO:\n        this.clearPieceAt(to, this.turn, PTypes.KNIGHTS);\n        break;\n      case MoveTypes.BPROMO:\n        this.clearPieceAt(to, this.turn, PTypes.BISHOPS);\n        break;\n      case MoveTypes.RPROMO:\n        this.clearPieceAt(to, this.turn, PTypes.ROOKS);\n        break;\n      case MoveTypes.QPROMO:\n        this.clearPieceAt(to, this.turn, PTypes.QUEENS);\n        break;\n    }\n  }\n\n  // moves piece from one position to another\n  movePiece(from, to, color, pieceType) {\n    this.clearPieceAt(from, color, pieceType);\n    this.setPieceAt(to, color, pieceType);\n  }\n\n  // marks the given color and pieceType BBs as occupied at the specified position\n  setPieceAt(pos, color, pieceType) {\n    this.pieces[color].setBit(pos);\n    this.pieces[pieceType].setBit(pos);\n    this.pTypesLocations[pos] = pieceType;\n    this.pPosHash ^= piecePosHashKeys[pos][pieceType][color];\n  }\n\n  // marks the given color and pieceType BBs as unoccupied at the specified position\n  clearPieceAt(pos, color, pieceType) {\n    this.pieces[color].clearBit(pos);\n    this.pieces[pieceType].clearBit(pos);\n    this.pTypesLocations[pos] = null;\n    this.pPosHash ^= piecePosHashKeys[pos][pieceType][color];\n  }\n\n  isNonStalemateDraw() {\n    return this.isThreefoldRepetition();\n    // return this.isMoveLimitExceeded() || this.isThreefoldRepetition();\n  }\n\n  isThreefoldRepetition() {\n    return this.positionCounts[this.getHash()] === 3;\n  }\n\n  // need to refactor this to start count after pawn movement...\n  isMoveLimitExceeded() {\n    return this.prevMoves.length >= 100;\n  }\n\n  // renders BBs for all piece sets\n  renderPieceSets() {\n    Object.keys(this.pieces).forEach((boardType) => {\n      console.log(boardType);\n      this.pieces[boardType].render();\n    });\n  }\n\n  getBoardArr() {\n    return pieceSetsToArray(this.pieces);\n  }\n\n\n  // renders the board for the current position\n  renderBoardArr() {\n    const boardArr = pieceSetsToArray(this.pieces);\n\n    let pos;\n    let rowStr = '';\n    console.log(\"\\n\");\n    for (pos = 63; pos >= 0; pos--) {\n      rowStr = boardArr[pos] + rowStr;\n      if (pos % 8 === 0) {\n        console.log(rowStr);\n        rowStr = '';\n      }\n    }\n    console.log(\"\\n\");\n  }\n}\n\nmodule.exports = Position;\n\n\n\n// WEBPACK FOOTER //\n// ./js/position/index.js","function popCount32(int) {\n\tint -= (int >>> 1) & 0x55555555;\n\tint = (int & 0x33333333) + ((int >>> 2) & 0x33333333);\n\treturn ((int + (int >>> 4) & 0xF0F0F0F) * 0x1010101) >>> 24;\n}\n\nfunction bitScanForward32(int) {\n  return popCount32((int & -int) - 1);\n}\n\nfunction generateMSBTable(max) {\n  let res = [];\n  let int;\n  for (int = 1; int <= max; int++) {\n    res[int] = Math.floor(Math.log2(int));\n  }\n\n  return res;\n}\n\nconst mostSigBitTable = generateMSBTable(255);\n\nfunction bitScanReverse32(int) {\n  let res = 0;\n  if (int > 0xFFFF) {\n    int >>>= 16;\n    res += 16;\n  }\n\n  if (int > 0xFF) {\n    int >>>= 8;\n    res += 8;\n  }\n\n  return res + mostSigBitTable[int];\n}\n\nfunction clearLeastSigBit32(int) {\n  return (int & (int - 1));\n}\n\nmodule.exports = {\n  popCount32,\n  bitScanForward32,\n  bitScanReverse32,\n  clearLeastSigBit32\n};\n\n\n\n// WEBPACK FOOTER //\n// ./js/bitboard/utils.js","const BitBoard = require('./bitboard.js');\n\n// this file includes static sets of bitboards that\n// are commonly used throughout the program\n\nconst FULL_BOARD = new BitBoard().not();\n\nconst COLS = function() {\n  let colIdx = 0;\n  let cols = [];\n  while (colIdx < 8) {\n    cols.push(BitBoard.fromCol(colIdx));\n    colIdx++;\n  }\n\n  return cols;\n}();\n\n\nconst ROWS = function() {\n  let rowIdx = 0;\n  let rows = [];\n  while (rowIdx < 8) {\n    rows.push(BitBoard.fromRow(rowIdx));\n    rowIdx++;\n  }\n\n  return rows;\n}();\n\n\nconst DIAGS = function() {\n  const diags = [];\n  let pos = 56;\n\n  while (pos >= 0) {\n    diags.push(BitBoard.upperRightDiag(pos));\n    pos -= 8;\n  }\n\n  pos = 1;\n\n  while (pos < 8) {\n    diags.push(BitBoard.upperRightDiag(pos));\n    pos++;\n  }\n\n  return diags;\n}();\n\n\nconst ANTI_DIAGS = function() {\n  const antiDiags = [];\n  let pos = 0;\n\n  while (pos < 8) {\n    antiDiags.push(BitBoard.upperLeftDiag(pos));\n    pos++;\n  }\n\n  pos = 15;\n  while (pos < 64) {\n    antiDiags.push(BitBoard.upperLeftDiag(pos));\n    pos += 8;\n  }\n\n  return antiDiags;\n}();\n\nconst NORTH_OF_ROW = function() {\n  const res = [];\n  let bb = FULL_BOARD;\n  let idx = 0;\n\n  while (idx <= 7) {\n    bb = bb.xor(ROWS[idx]);\n    res.push(bb);\n    idx++;\n  }\n\n  return res;\n}();\n\nconst SOUTH_OF_ROW = function() {\n  const res = [];\n  let bb = new BitBoard();\n  let idx = 0;\n\n  while (idx <= 7) {\n    res.push(bb);\n    bb = bb.or(ROWS[idx]);\n    idx++;\n  }\n\n  return res;\n}();\n\nconst EAST_OF_COL = function() {\n  const res = [];\n  let bb = FULL_BOARD;\n  let idx = 0;\n\n  while (idx <= 7) {\n    bb = bb.xor(COLS[idx]);\n    res.push(bb);\n    idx++;\n  }\n\n  return res;\n}();\n\nconst WEST_OF_COL = function() {\n  const res = [];\n  let bb = new BitBoard();\n  let idx = 0;\n\n  while (idx <= 7) {\n    res.push(bb);\n    bb = bb.or(COLS[idx]);\n    idx++;\n  }\n\n  return res;\n}();\n\nmodule.exports = {\n  FULL_BOARD,\n  COLS,\n  ROWS,\n  DIAGS,\n  ANTI_DIAGS,\n  NORTH_OF_ROW,\n  SOUTH_OF_ROW,\n  EAST_OF_COL,\n  WEST_OF_COL\n};\n\n\n\n// WEBPACK FOOTER //\n// ./js/bitboard/masks.js","// https://www.chessprogramming.org/Encoding_Moves#From-To_Based\n// require('../string_contants.js');\n\nconst typesArr = ['NORMAL', 'DBL_PPUSH',\n                  'CSTL_KING', 'CSTL_QUEEN',\n                  'EP_CAPT', 'NPROMO',\n                  'BPROMO','RPROMO', 'QPROMO'];\n\nconst Types = typesArr.reduce((res, type, idx) => {\n  res[type] = idx;\n  return res;\n}, {});\n\nmodule.exports = { Types };\n\n\n\n// WEBPACK FOOTER //\n// ./js/move/constants.js","const stepMove = require('./movements/step_move.js');\nconst { BBMasks } = require('../bitboard');\nconst { Colors } = require('./constants.js');\n\nconst DIRS = {\n  [Colors.WHITE]: 1,\n  [Colors.BLACK]: -1\n};\n\nconst INIT_MASKS = {\n  [Colors.WHITE]: BBMasks.ROWS[1],\n  [Colors.BLACK]: BBMasks.ROWS[6]\n};\n\nconst Pawns = {\n  value: 100,\n  positionValues: [\n\t\t0, 0, 0, 0, 0, 0, 0, 0,\n\t\t50, 50, 50, 50, 50, 50, 50, 50,\n\t\t10, 10, 20, 30, 30, 20, 10, 10,\n\t\t5, 5, 10, 25, 25, 10, 5, 5,\n\t\t0, 0, 0, 20, 20, 0, 0, 0,\n\t\t5, -5, -10, 0, 0, -10, -5, 5,\n\t\t5, 10, 10, -20, -20, 10, 10, 5,\n\t\t0, 0, 0, 0, 0, 0, 0, 0\n\t],\n  DIRS,\n  PROMO_MASKS: { [Colors.WHITE]: BBMasks.ROWS[7],\n                 [Colors.BLACK]: BBMasks.ROWS[0]\n               },\n  attacksLeft: (color, positions, oppPieces) => {\n    return stepMove(positions, DIRS[color], -DIRS[color]).and(oppPieces);\n  },\n  attacksRight: (color, positions, oppPieces) => {\n    return stepMove(positions, DIRS[color], DIRS[color]).and(oppPieces);\n  },\n  singlePush: (color, positions, notOccupied) => {\n    return stepMove(positions, DIRS[color], 0).and(notOccupied);\n  },\n  doublePush: (color, positions, notOccupied) => {\n    const onePush = stepMove(positions.and(INIT_MASKS[color]), DIRS[color], 0).and(notOccupied);\n    return stepMove(onePush, DIRS[color], 0).and(notOccupied);\n  }\n};\n\nmodule.exports = Pawns;\n\n\n\n// WEBPACK FOOTER //\n// ./js/pieces/pawns.js","const { KNIGHT_MOVES } = require('./movements/masks.js');\n\nconst Knight = {\n  value: 325,\n  positionValues: [\n\t\t-50, -40, -30, -30, -30, -30, -40, -50,\n\t\t-40, -20, 0, 0, 0, 0, -20, -40,\n\t\t-30, 0, 10, 15, 15, 10, 0, -30,\n\t\t-30, 5, 15, 20, 20, 15, 5, -30,\n\t\t-30, 0, 15, 20, 20, 15, 0, -30,\n\t\t-30, 5, 10, 15, 15, 10, 5, -30,\n\t\t-40, -20, 0, 5, 5, 0, -20, -40,\n\t\t-50, -40, -30, -30, -30, -30, -40, -50\n\t],\n  moves: (position, notOwnPieces) => {\n    return KNIGHT_MOVES[position].and(notOwnPieces);\n  }\n};\n\nmodule.exports = Knight;\n\n\n\n// WEBPACK FOOTER //\n// ./js/pieces/knight.js","const { diag } = require('./movements/slide_moves.js');\n\nconst Bishop = {\n  value: 325,\n  positionValues: [\n\t\t-20, -10, -10, -10, -10, -10, -10, -20,\n\t\t-10, 0, 0, 0, 0, 0, 0, -10,\n\t\t-10, 0, 5, 10, 10, 5, 0, -10,\n\t\t-10, 5, 5, 10, 10, 5, 5, -10,\n\t\t-10, 0, 10, 10, 10, 10, 0, -10,\n\t\t-10, 10, 10, 10, 10, 10, 10, -10,\n\t\t-10, 5, 0, 0, 0, 0, 5, -10,\n\t\t-20, -10, -10, -10, -10, -10, -10, -20\n\t],\n  moves: (position, occupied, notOwnPieces) => {\n    return diag(position, occupied, notOwnPieces);\n  }\n};\n\nmodule.exports = Bishop;\n\n\n\n// WEBPACK FOOTER //\n// ./js/pieces/bishop.js","const { horizVert } = require('./movements/slide_moves.js');\n\nconst Rook = {\n  value: 500,\n  positionValues:\t[\n\t\t0, 0, 0, 0, 0, 0, 0, 0,\n\t\t5, 10, 10, 10, 10, 10, 10, 5,\n\t\t-5, 0, 0, 0, 0, 0, 0, -5,\n\t\t-5, 0, 0, 0, 0, 0, 0, -5,\n\t\t-5, 0, 0, 0, 0, 0, 0, -5,\n\t\t-5, 0, 0, 0, 0, 0, 0, -5,\n\t\t-5, 0, 0, 0, 0, 0, 0, -5,\n\t\t0, 0, 0, 5, 5, 0, 0, 0\n\t],\n  moves: (position, occupied, notOwnPieces) => {\n    return horizVert(position, occupied, notOwnPieces);\n  },\n};\n\nmodule.exports = Rook;\n\n\n\n// WEBPACK FOOTER //\n// ./js/pieces/rook.js","const { diag, horizVert } = require('./movements/slide_moves.js');\n\nconst Queen = {\n  value: 1050,\n  positionValues: [\n\t\t-20, -10, -10, -5, -5, -10, -10, -20,\n\t\t-10, 0, 0, 0, 0, 0, 0, -10,\n\t\t-10, 0, 5, 5, 5, 5, 0, -10,\n\t\t-5, 0, 5, 5, 5, 5, 0, -5,\n\t\t0, 0, 5, 5, 5, 5, 0, -5,\n\t\t-10, 5, 5, 5, 5, 5, 0, -10,\n\t\t-10, 0, 5, 0, 0, 0, 0, -10,\n\t\t-20, -10, -10, -5, -5, -10, -10, -20\n\t],\n  moves: (position, occupied, notOwnPieces) => {\n    return diag(position, occupied, notOwnPieces).or(horizVert(position, occupied, notOwnPieces));\n  }\n};\n\nmodule.exports = Queen;\n\n\n\n// WEBPACK FOOTER //\n// ./js/pieces/queen.js","const { BBMasks } = require('../bitboard');\nconst Dirs = require('./movements/dir_constants.js');\nconst { KING_MOVES, SLIDE_MOVES } = require('./movements/masks.js');\nconst { Colors } = require('./constants.js');\n\nconst INIT_POS = {\n  [Colors.BLACK]: 60,\n  [Colors.WHITE]: 4\n};\n\nconst King = {\n  value: 40000,\n  positionValues:\t[\n\t\t-30, -40, -40, -50, -50, -40, -40, -30,\n\t\t-30, -40, -40, -50, -50, -40, -40, -30,\n\t\t-30, -40, -40, -50, -50, -40, -40, -30,\n\t\t-30, -40, -40, -50, -50, -40, -40, -30,\n\t\t-20, -30, -30, -40, -40, -30, -30, -20,\n\t\t-10, -20, -20, -20, -20, -20, -20, -10,\n\t\t 20, 20, 0, 0, 0, 0, 20, 20,\n\t\t 20, 30, 10, 0, 0, 10, 30, 20\n\t],\n  INIT_POS,\n  moves: (position, notOwnPieces) => {\n    return KING_MOVES[position].and(notOwnPieces);\n  },\n  canCastle: (color, dir, notOccupied) => {\n    const castleSlide = SLIDE_MOVES[INIT_POS[color]][dir].and(notOccupied);\n    if (dir === Dirs.EAST) {\n      return castleSlide.popCount() === 2;\n    } else {\n      return castleSlide.popCount() === 3;\n    }\n  }\n};\n\nmodule.exports = King;\n\n\n\n// WEBPACK FOOTER //\n// ./js/pieces/king.js","const { Types, Colors, PieceTypeLetters } = require('./constants.js');\n\nfunction pieceToLetter(type, color) {\n  if (color === Colors.WHITE) {\n    return PieceTypeLetters[type];\n  } else if (color === Colors.BLACK) {\n    return PieceTypeLetters[type].toUpperCase();\n  } else {\n    return '?';\n  }\n}\n\nfunction letterToColor(letter) {\n  return letter.toUpperCase() === letter ? Colors.BLACK : Colors.WHITE;\n}\n\nfunction letterToType(letter) {\n  const pieceTypes = Object.values(Types);\n  let pieceType;\n  let idx;\n\n  for (idx = 0; idx < pieceTypes.length; idx++) {\n    if (PieceTypeLetters[pieceTypes[idx]] === letter.toLowerCase()) {\n      pieceType = pieceTypes[idx];\n      break;\n    }\n  }\n\n  return pieceType;\n}\n\nmodule.exports = { pieceToLetter, letterToColor, letterToType };\n\n\n\n// WEBPACK FOOTER //\n// ./js/pieces/conversions.js","const { Types } = require('./constants.js');\n\nfunction eachPieceType(cb) {\n  let type;\n  for (type = Types.PAWNS; type <= Types.KINGS; type++) {\n    cb(type);\n  }\n}\n\nmodule.exports = eachPieceType;\n\n\n\n// WEBPACK FOOTER //\n// ./js/pieces/each_piece_type.js","const { PTypes, PUtils, Colors, eachPieceType } = require('../pieces');\n\n// we store zobrist hash values as signed 32bit integers\n// if we limited the range of values to signed 32bits,\n// there likely wouldn't be enough variation to mitigate hashing collisions\n\nfunction randSigned32Bit() {\n  const positive = [true, false][Math.floor(Math.random() * 2)];\n  if (positive) {\n    return Math.floor(Math.random() * (Math.pow(2, 31) - 1));\n  } else {\n    return -Math.floor(Math.random() * (Math.pow(2, 31)));\n  }\n}\n\nconst piecePosHashKeys = function() {\n  let res = [];\n  let pos;\n  let newPosKeys;\n\n  const addPTypeKeys = (pType) => {\n    res[pos][pType] = {};\n    res[pos][pType][Colors.WHITE] = randSigned32Bit();\n    res[pos][pType][Colors.BLACK] = randSigned32Bit();\n  };\n\n  for (pos = 0; pos < 64; pos++) {\n    res[pos] = {};\n    eachPieceType((pType) => addPTypeKeys(pType));\n  }\n\n  return res;\n}();\n\nconst epPosHashKeys = function() {\n  let res = {};\n  let pos;\n\n  // can only en passant onto 3rd or 6th row\n  for (pos = 16; pos <= 23; pos++) {\n    res[pos] = randSigned32Bit();\n  }\n\n  for (pos = 40; pos <= 47; pos++) {\n    res[pos] = randSigned32Bit();\n  }\n\n  return res;\n}();\n\nconst castleHashKeys = function() {\n  let res = [];\n  let rightsIdx;\n\n  for (rightsIdx = 0; rightsIdx < 4; rightsIdx++) {\n    res[rightsIdx] = randSigned32Bit();\n  }\n\n  return res;\n}();\n\nconst turnHashKeys = function() {\n  const res = [];\n  res[Colors.WHITE] = randSigned32Bit();\n  res[Colors.BLACK] = randSigned32Bit();\n\n  return res;\n}();\n\nmodule.exports = { piecePosHashKeys, epPosHashKeys, castleHashKeys, turnHashKeys };\n\n\n\n// WEBPACK FOOTER //\n// ./js/position/zhash_constants.js","const { PieceConv, PTypes, Colors } = require('../../pieces');\nconst { BitBoard } = require('../../bitboard');\n\nconst xx = \"_\";\n\nconst WP = PieceConv.pieceToLetter(PTypes.PAWNS, Colors.WHITE);\nconst WN = PieceConv.pieceToLetter(PTypes.KNIGHTS, Colors.WHITE);\nconst WB = PieceConv.pieceToLetter(PTypes.BISHOPS, Colors.WHITE);\nconst WR = PieceConv.pieceToLetter(PTypes.ROOKS, Colors.WHITE);\nconst WQ = PieceConv.pieceToLetter(PTypes.QUEENS, Colors.WHITE);\nconst WK = PieceConv.pieceToLetter(PTypes.KINGS, Colors.WHITE);\n\nconst BP = PieceConv.pieceToLetter(PTypes.PAWNS, Colors.BLACK);\nconst BN = PieceConv.pieceToLetter(PTypes.KNIGHTS, Colors.BLACK);\nconst BB = PieceConv.pieceToLetter(PTypes.BISHOPS, Colors.BLACK);\nconst BR = PieceConv.pieceToLetter(PTypes.ROOKS, Colors.BLACK);\nconst BQ = PieceConv.pieceToLetter(PTypes.QUEENS, Colors.BLACK);\nconst BK = PieceConv.pieceToLetter(PTypes.KINGS, Colors.BLACK);\n\nconst defaultBoardArr = [\nWR, WN, WB, WQ, WK, WB, WN, WR,\nWP, WP, WP, WP, WP, WP, WP, WP,\nxx, xx, xx, xx, xx, xx, xx, xx,\nxx, xx, xx, xx, xx, xx, xx, xx,\nxx, xx, xx, xx, xx, xx, xx, xx,\nxx, xx, xx, xx, xx, xx, xx, xx,\nBP, BP, BP, BP, BP, BP, BP, BP,\nBR, BN, BB, BQ, BK, BB, BN, BR\n];\n\nfunction createEmptyBoardArr() {\n  const res = [];\n\n  let count = 0;\n  while (count <= 64) {\n    res.push(xx);\n    count++;\n  }\n\n  return res;\n}\n\nfunction pieceSetsToArray(pieces) {\n  const res = createEmptyBoardArr();\n\n  const pieceTypes = Object.values(PTypes);\n  pieceTypes.forEach((type) => {\n    pieces[type].dup().pop1Bits((pos) => {\n      if (pieces[Colors.WHITE].hasSetBit(pos)) {\n        res[pos] = PieceConv.pieceToLetter(type, Colors.WHITE);\n      } else {\n        res[pos] = PieceConv.pieceToLetter(type, Colors.BLACK);\n      }\n    });\n  });\n\n  return res;\n}\n\nfunction pieceSetsFromArray(array = defaultBoardArr) {\n  const pieces = {};\n\n  Object.values(PTypes).forEach((type) => {\n    pieces[type] = new BitBoard();\n  });\n\n  Object.values(Colors).forEach((color) => {\n    pieces[color] = new BitBoard();\n  });\n\n\n  let pos;\n  let type;\n  let color;\n  for (pos = 0; pos < array.length; pos++) {\n    if (array[pos] !== xx) {\n      type = PieceConv.letterToType(array[pos]);\n      color = PieceConv.letterToColor(array[pos]);\n      pieces[type].setBit(pos);\n      pieces[color].setBit(pos);\n    }\n  }\n\n  return pieces;\n}\n\nmodule.exports = { pieceSetsToArray, pieceSetsFromArray };\n\n\n\n// WEBPACK FOOTER //\n// ./js/position/utils/array_conversions.js","const MoveSearch = require('./move_search.js');\n\nclass AI {\n  constructor() {\n    this.thinkingTime = 1000;\n    this.prevPerformance = null;\n  }\n\n  setThinkingTime(thinkingTime) {\n    this.thinkingTime = thinkingTime;\n  }\n\n  chooseMove(position, availableMoves) {\n    const moveSearch = new MoveSearch(position, availableMoves);\n    const bestMove = moveSearch.findBest(this.thinkingTime);\n    const perfResults = moveSearch.getPerformance();\n\n    return { move: bestMove, performance: perfResults };\n  }\n}\n\nmodule.exports = AI;\n\n\n\n// WEBPACK FOOTER //\n// ./js/ai/index.js","const { PTypes, PUtils,\n        Colors, Dirs,\n        eachPieceType } = require('../pieces');\nconst TransposTable = require('./transpos_table.js');\nconst PerfMonitor = require('./perf_monitor.js');\n\nclass MoveSearch {\n  constructor(position, initAvailable) {\n    this.position = position;\n    this.initAvailable = initAvailable;\n    this.transPosTable = new TransposTable();\n    this.perfMonitor = new PerfMonitor();\n  }\n\n  findBest(thinkingTime) {\n    this.perfMonitor.setStartTime();\n    this.endTime = Date.now() + thinkingTime;\n\n    this.maxDepth = 1;\n    while (Date.now() < this.endTime && this.maxDepth < 30) {\n      this.negaMax(this.maxDepth, -Infinity, Infinity);\n      this.maxDepth++;\n    }\n\n    if (this.maxDepth >= 30) {\n      console.log('Approaching draw...');\n    } else {\n      if (!this.perfMonitor.depth) { this.perfMonitor.setDepth(this.maxDepth); }\n      this.perfMonitor.setEndTime();\n      this.perfMonitor.printResults();\n    }\n\n    const currNodeEntry = this.transPosTable.getEntry(this.position.getHash());\n    if (currNodeEntry && currNodeEntry.bestMove) {\n      return currNodeEntry.bestMove;\n    } else {\n      return this.initAvailable[Math.floor(Math.random() * this.initAvailable.length)];\n    }\n  }\n\n\n  getPerformance() {\n    return this.perfMonitor.getResults();\n  }\n\n  quiescenceSearch(alpha, beta) {\n    if (Date.now() > this.endTime) {\n      this.perfMonitor.setDepth(this.maxDepth - 1);\n      return 'early exit';\n    }\n    this.perfMonitor.logQuiescentNode();\n    const standPatVal = this.evaluate();\n\n    if (standPatVal >= beta) {\n      return beta;\n    } else if (standPatVal > alpha) {\n      alpha = standPatVal;\n    }\n\n    let inCheck = this.position.inCheck(this.position.turn);\n    // include quiet moves (ie non captures) only if the king is in check;\n    const moves = this.sortMoves(this.position.generatePseudoMoves(inCheck));\n    let moveIdx;\n    let score;\n\n    for (moveIdx = 0; moveIdx < moves.length; moveIdx++) {\n      if (this.position.makeMove(moves[moveIdx])) {\n        score = -this.quiescenceSearch(-beta, -alpha);\n        this.position.unmakePrevMove();\n\n        if (score >= beta) { return beta; }\n        if (score > alpha) { alpha = score; }\n      }\n    }\n\n    return alpha;\n  }\n\n  negaMax(depth, alpha, beta) {\n    if (Date.now() > this.endTime) {\n      this.perfMonitor.setDepth(this.maxDepth - 1);\n      return 'early exit';\n    }\n\n    const prevAlpha = alpha;\n    const currHash = this.position.getHash();\n    const entry = this.transPosTable.getEntry(currHash);\n    if (entry && entry.depth >= depth) {\n      this.perfMonitor.logTableHit();\n      switch (entry.type) {\n        case 'exact':\n          return entry.score;\n        case 'lowerbound':\n          alpha = Math.max(alpha, entry.score);\n          break;\n        case 'upperbound':\n          beta = Math.min(beta, entry.score);\n          break;\n      }\n      if (alpha >= beta) { return entry.score; }\n    }\n\n    if (depth === 0) {\n      return this.quiescenceSearch(alpha, beta);\n    }\n\n    this.perfMonitor.logMainSearchNode();\n\n    let prevBestMove = (entry && entry.bestMove) ? entry.bestMove : null;\n\n    const moves = this.sortMoves(this.position.generatePseudoMoves(), prevBestMove);\n    let moveIdx;\n    let canMove = false;\n    let result;\n    let score;\n    let bestScore = -Infinity;\n    let bestMove = null;\n\n    for (moveIdx = 0; moveIdx < moves.length; moveIdx++) {\n      if (this.position.makeMove(moves[moveIdx])) {\n        canMove = true;\n        result = this.negaMax(depth - 1, -beta, -alpha);\n        this.position.unmakePrevMove();\n        if (result === 'early exit') {\n          return result;\n        }\n        score = -result;\n        if (score > bestScore) {\n          bestScore = score;\n          bestMove = moves[moveIdx];\n          if (score > alpha) {\n            alpha = score;\n          }\n        }\n        if (alpha >= beta) { break; }\n      }\n    }\n\n    if (!canMove) {\n      if (this.position.inCheck(this.position.turn)) {\n        bestScore = -PUtils[PTypes.KINGS].value;\n      } else {\n        bestScore = 0;\n      }\n    }\n\n\n    this.transPosTable.storeEntry(bestScore, bestMove, prevAlpha, beta, depth, currHash);\n    return bestScore;\n  }\n\n  sortMoves(moves, prevBestMove) {\n    function calculateScore(move) {\n      if (prevBestMove && move.val === prevBestMove.val) {\n        return 10000000;\n      }\n      let score = move.getCaptPiece()? ((1 + move.getCaptPiece()) / (1 + move.getPiece())): 0;\n      score = score * 6 + move.getPiece();\n      score = score * 16 + move.getType();\n      score = score * 64 + move.getTo();\n      score = score * 64 + move.getFrom();\n\n      return score;\n    }\n\n    moves.sort((moveA, moveB) => calculateScore(moveB) - calculateScore(moveA));\n    return moves;\n  }\n\n\n  evaluate() {\n    let materialScore = this.scoreMaterial(this.position.turn) -\n                        this.scoreMaterial(this.position.opp);\n\n    let piecePositionScore = this.scorePiecePositions(this.position.turn) -\n                             this.scorePiecePositions(this.position.opp);\n\n    return materialScore + piecePositionScore;\n  }\n\n  scoreMaterial(color) {\n    let score = 0;\n    eachPieceType((pieceType) => {\n      score += this.position.getColorPieceSet(color, pieceType).popCount() *\n               PUtils[pieceType].value;\n    });\n\n    return score;\n  }\n\n  scorePiecePositions(color) {\n    let score = 0;\n    let piecePositions;\n    eachPieceType((pieceType) => {\n      piecePositions = this.position.getColorPieceSet(color, pieceType);\n      piecePositions.dup().pop1Bits((pos) => {\n        score += PUtils[pieceType].positionValues[color ? pos : 56 ^ pos];\n      });\n    });\n\n    return score;\n  }\n}\n\nmodule.exports = MoveSearch;\n\n\n\n// WEBPACK FOOTER //\n// ./js/ai/move_search.js","class TransposTable {\n  constructor() {\n    this.size = 10000;\n    this.table = new Array(this.size);\n  }\n\n  getEntry(key) {\n    const index = key % this.size;\n    if (this.table[index] && this.table[index].key === key) {\n      return this.table[index];\n    } else {\n      return null;\n    }\n  }\n\n  storeEntry(score, bestMove, alpha, beta, depth, key) {\n    const index = key % this.size;\n    if (this.table[index] && this.table[index].depth > depth) {\n      return;\n    } else {\n      this.table[index] = {\n        score,\n        bestMove,\n        type: this.determineScoreType(score, alpha, beta),\n        depth,\n        key\n      };\n    }\n  }\n\n  determineScoreType(score, alpha, beta) {\n    if (score <= alpha) {\n      return 'upperbound';\n    } else if (score >= beta) {\n      return 'lowerbound';\n    } else {\n      return 'exact';\n    }\n  }\n}\n\nmodule.exports = TransposTable;\n\n\n\n// WEBPACK FOOTER //\n// ./js/ai/transpos_table.js","class PerfMonitor {\n  constructor() {\n    this.mainSearchNodes = 0;\n    this.qSearchNodes = 0;\n    this.tableHits = 0;\n  }\n\n  setStartTime() {\n    this.startTime = new Date();\n  }\n\n  setEndTime() {\n    this.endTime = new Date();\n  }\n\n  setDepth(depth) {\n    this.depth = depth;\n  }\n\n  printResults() {\n    console.log('---------');\n\n    if (this.startTime && this.endTime) {\n      console.log(`Run Time: ${this.endTime - this.startTime}`);\n    }\n\n    console.log(`Depth:  ${this.depth}`);\n    console.log(`Total Explored Positions: ${this.qSearchNodes + this.mainSearchNodes}`);\n    console.log(`Main Search Nodes: ${this.mainSearchNodes}`);\n    console.log(`Quiescent Search Nodes: ${this.qSearchNodes}`);\n    console.log(`Table Hits: ${this.tableHits}`);\n\n    console.log('---------');\n  }\n\n  logTableHit() {\n    this.tableHits++;\n  }\n\n  logMainSearchNode() {\n    this.mainSearchNodes++;\n  }\n\n  logQuiescentNode() {\n    this.qSearchNodes++;\n  }\n\n  getResults() {\n    return {\n      runTime: this.endTime - this.startTime,\n      depth: this.depth,\n      exploredPositions: this.qSearchNodes + this.mainSearchNodes,\n      mainSearchNodes: this.mainSearchNodes,\n      qSearchNodes: this.qSearchNodes,\n      tTableHits: this.tableHits\n    };\n  }\n}\n\nmodule.exports = PerfMonitor;\n\n\n\n// WEBPACK FOOTER //\n// ./js/ai/perf_monitor.js","const { PieceConv, Colors } = require('../pieces');\nconst { ColsFiles, FilesCols,\n        RowsRanks, RanksRows } = require('./constants.js');\n\nfunction posFromFileRank(fileRank) {\n  const [file, rank] = fileRank.split('');\n  return (RanksRows[rank] * 8) + FilesCols[file];\n}\n\nfunction fileRankFromPos(pos) {\n  return ColsFiles[pos % 8] + (RowsRanks[Math.floor(pos / 8)]);\n}\n\n// if the row and col are either both even or both odd\nfunction isDarkSquare(fileRank) {\n  const [file, rank] = fileRank.split('');\n  const row = RanksRows[rank];\n  const col = FilesCols[file];\n  return (row % 2 === 0 && col % 2 === 0) ||\n         (row % 2 === 1 && col % 2 === 1);\n}\n\nfunction formatMove(move, color) {\n  return `${PieceConv.pieceToLetter(move.getPiece(), color)}:` +\n         `${fileRankFromPos(move.getFrom())}->` +\n         `${fileRankFromPos(move.getTo())}`;\n}\n\nfunction parseMoveStats(moveStats) {\n  return Object.keys(moveStats)\n               .map((key) => `${key}: ${moveStats[key]}`)\n               .join(\"<br/>\");\n}\n\nfunction formatTime(millisecs) {\n  let timeStr = (millisecs / 1000).toString();\n  if (timeStr.indexOf('.') == -1) timeStr += '.';\n\n  while (timeStr.length < timeStr.indexOf('.') + 3) {\n    timeStr += '0';\n  }\n\n  while (timeStr.length > timeStr.indexOf('.') + 3) {\n    timeStr = timeStr.slice(0, timeStr.length - 1);\n  }\n\n  return timeStr;\n}\n\nmodule.exports = {\n  posFromFileRank,\n  fileRankFromPos,\n  isDarkSquare,\n  formatMove,\n  parseMoveStats,\n  formatTime\n};\n\n\n\n// WEBPACK FOOTER //\n// ./js/ui/util.js"],"sourceRoot":""}