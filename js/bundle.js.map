{"version":3,"sources":["webpack:///webpack/bootstrap f3794b7dcfe4231f7b4d","webpack:///./js/bitboard/index.js","webpack:///./js/pieces/index.js","webpack:///./js/pieces/constants.js","webpack:///./js/pieces/movements/dir_constants.js","webpack:///./js/pieces/movements/masks.js","webpack:///./js/pieces/movements/slide_moves.js","webpack:///./js/bitboard/bitboard.js","webpack:///./js/pieces/movements/step_move.js","webpack:///./js/ui/constants.js","webpack:///./js/app.js","webpack:///./js/ui/index.js","webpack:///./js/position/index.js","webpack:///./js/bitboard/utils.js","webpack:///./js/bitboard/masks.js","webpack:///./js/move/index.js","webpack:///./js/move/constants.js","webpack:///./js/pieces/pawns.js","webpack:///./js/pieces/knight.js","webpack:///./js/pieces/bishop.js","webpack:///./js/pieces/rook.js","webpack:///./js/pieces/queen.js","webpack:///./js/pieces/king.js","webpack:///./js/pieces/conversions.js","webpack:///./js/pieces/each_piece_type.js","webpack:///./js/position/zhash_constants.js","webpack:///./js/position/utils/array_conversions.js","webpack:///./js/ai/index.js","webpack:///./js/ai/transpos_table.js","webpack:///./js/ui/util.js","webpack:///./js/ai/perf_monitor.js"],"names":["BitBoard","require","Masks","module","exports","BBMasks","Constants","Pawns","Knight","Bishop","Rook","Queen","King","PieceConv","eachPieceType","Dirs","PUtils","Types","PAWNS","KNIGHTS","BISHOPS","ROOKS","QUEENS","KINGS","PTypes","Colors","PieceTypeHTML","WHITE","BLACK","PieceTypeLetters","DIRS","stepMove","generateStepBitBoards","dirs","res","pos","initial","posRes","addMove","currRes","dir","or","fromPos","reduce","push","KNIGHT_MOVES","KING_MOVES","SLIDE_MOVES","moves","colIdx","rowIdx","diagIdx","antiDiagIdx","Math","floor","NORTH","COLS","and","NORTH_OF_ROW","SOUTH","SOUTH_OF_ROW","EAST","ROWS","EAST_OF_COL","WEST","WEST_OF_COL","NOEA","DIAGS","SOWE","NOWE","ANTI_DIAGS","SOEA","isPosRay","findUnblocked","occupied","posBB","dirBB","blocking","blockingPos","isZero","bitScanForward","bitScanReverse","xor","horizVert","notOwnPieces","diag","Utils","POW32","pow","low","high","other","numBits","newLowBits","newHighBits","count","int32","popCount32","bitScanForward32","Boolean","bitScanReverse32","cb","clearLeastSigBit32","row","posVal","console","log","length","setBit","positions","forEach","colNum","rowNum","posMax","startPos","noSo","eaWe","shiftLeft","shiftRight","ColsFiles","FilesCols","file","col","RowsRanks","RanksRows","rank","Selectors","BOARD_ID","PIECE_CLASS","SQUARE_CLASS","RANK_CLASS","FILE_CLASS","UI","$","document","ready","ui","run","Position","AI","Util","position","playerColor","ai","currMoves","generateLegalMoves","drawBoard","setupButtons","playNextTurn","click","event","currentTarget","hasClass","unmakePrevMove","aiMove","slider","value","thinkingTime","min","round","max","step","slide","val","E","text","formatTime","change","setThinkingTime","removeClass","addClass","movesHistory","endGameStatus","determineGameResult","prepend","isThreeMoveRepetition","isMoveLimitExceeded","inCheck","turn","updateMovesList","updatePieces","setupPlayerMove","empty","moveStrs","formatMoves","prevMoves","moveStr","newRow","append","fileRank","newSquare","squareColor","isDarkSquare","board","newRankRow","generateSquare","generateFileHeader","remove","pieceTypes","Object","values","pieces","newPiece","pieceType","dup","pop1Bits","hasSetBit","fileRankFromPos","displayGameResult","move","setTimeout","chooseMove","animateMove","makeMove","pieceEl","getFrom","getTo","getCaptPiece","captPiece","captOffset","offset","css","left","top","fadeOut","oldOffset","appendTo","newOffset","animPiece","clone","hide","animate","show","movesData","map","getData","moveFromTos","moveToFroms","moveData","from","to","activateDraggablePieces","activateDroppableSquares","fromFileRank","keys","draggable","containment","revert","revertDuration","mouseenter","toPos","mouseleave","destSq","originSquare","originPos","selectedMove","droppable","accept","parent","attr","posFromFileRank","includes","drop","filter","parseInt","Move","MoveTypes","piecePosHashKeys","epPosHashKeys","castleHashKeys","turnHashKeys","pieceSetsToArray","pieceSetsFromArray","castleRights","epBB","prevStates","pTypesLocations","createPTypesLocations","pPosHash","createPiecesPosHash","stateHash","createStateHash","setTurn","getOtherColor","getPieceAt","pType","whitesPos","blacksPos","castleRightsPos","opp","color","includeQuiet","isNonStalemateDraw","addPawnMoves","addNormalMoves","addKingMoves","pseudoMoves","generatePseudoMoves","isLegal","legals","pseudoMove","testMove","testsLegal","pawnsPos","getColorPieceSet","notOccupied","getOccupied","not","pawnSinglePushes","singlePush","addPawnMoveSet","pawnDoublePushes","doublePush","oppPositions","pawnLeftAttacks","attacksLeft","pawnRightAttacks","attacksRight","newPositions","shiftAmt","isCapture","isDblPush","captured","DBL_PPUSH","EP_CAPT","PROMO_MASKS","addPromos","NORMAL","NPROMO","BPROMO","RPROMO","QPROMO","promoType","getNotOccupiedBy","knightsPos","knightMoves","addNormalMoveSet","bishopsPos","bishopMoves","rooksPos","rookMoves","queenPos","queenMoves","kingPos","normalMoves","addCastleMoves","newPos","newMove","captType","turnCastleRights","getCastleRights","INIT_POS","canCastle","CSTL_QUEEN","CSTL_KING","types","idx","type","addPrevState","adjustCastleRights","captPieceType","epPos","execMoveType","swapTurn","clearPieceAt","isPromo","movePiece","undo","setPieceAt","isCastle","isLegalCastle","castleType","isAttacked","oppColor","pawns","queenBB","prevMove","pop","reverseMoveType","prevState","clearRightsPos","clearRightsMask","clearCastleRights","state","capturedPos","clearBit","lastMoveIdx","boardType","render","boardArr","rowStr","int","generateMSBTable","log2","mostSigBitTable","FULL_BOARD","cols","fromCol","rows","fromRow","diags","upperRightDiag","antiDiags","upperLeftDiag","bb","piece","getType","getPiece","typesArr","INIT_MASKS","positionValues","oppPieces","onePush","castleSlide","popCount","pieceToLetter","toUpperCase","letterToColor","letter","letterToType","toLowerCase","randSigned32Bit","positive","random","newPosKeys","addPTypeKeys","rightsIdx","xx","WP","WN","WB","WR","WQ","WK","BP","BN","BB","BR","BQ","BK","defaultBoardArr","createEmptyBoardArr","array","TransposTable","PerfMonitor","score","piecePositions","materialScore","scoreMaterial","piecePositionScore","scorePiecePositions","availableMoves","perfMonitor","transPosTable","endTime","Date","now","setStartTime","maxDepth","negaMax","Infinity","depth","setDepth","setEndTime","printResults","currNodeEntry","getEntry","getHash","bestMove","alpha","beta","logQuiescentNode","standPatVal","evaluate","sortMoves","moveIdx","quiescenceSearch","prevAlpha","currHash","entry","logTableHit","logMainSearchNode","prevBestMove","canMove","result","bestScore","storeEntry","calculateScore","sort","moveA","moveB","size","table","Array","key","index","determineScoreType","split","moveList","millisecs","timeStr","toString","indexOf","slice","mainSearchNodes","qSearchNodes","tableHits","startTime"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;AC7DA,IAAMA,WAAWC,mBAAOA,CAAC,CAAR,CAAjB;AACA,IAAMC,QAAQD,mBAAOA,CAAC,EAAR,CAAd;;AAEAE,OAAOC,OAAP,GAAiB;AACfJ,oBADe;AAEfK,WAASH;AAFM,CAAjB,C;;;;;;;;;;;;;ACHA;AACA,IAAMI,YAAYL,mBAAOA,CAAC,CAAR,CAAlB;AACA,IAAMM,QAAQN,mBAAOA,CAAC,EAAR,CAAd;AACA,IAAMO,SAASP,mBAAOA,CAAC,EAAR,CAAf;AACA,IAAMQ,SAASR,mBAAOA,CAAC,EAAR,CAAf;AACA,IAAMS,OAAOT,mBAAOA,CAAC,EAAR,CAAb;AACA,IAAMU,QAAQV,mBAAOA,CAAC,EAAR,CAAd;AACA,IAAMW,OAAOX,mBAAOA,CAAC,EAAR,CAAb;AACA,IAAMY,YAAYZ,mBAAOA,CAAC,EAAR,CAAlB;AACA,IAAMa,gBAAgBb,mBAAOA,CAAC,EAAR,CAAtB;AACA,IAAMc,OAAOd,mBAAOA,CAAC,CAAR,CAAb;;AAEA,IAAMe,iDACHV,UAAUW,KAAV,CAAgBC,KADb,EACqBX,KADrB,4BAEHD,UAAUW,KAAV,CAAgBE,OAFb,EAEuBX,MAFvB,4BAGHF,UAAUW,KAAV,CAAgBG,OAHb,EAGuBX,MAHvB,4BAIHH,UAAUW,KAAV,CAAgBI,KAJb,EAIqBX,IAJrB,4BAKHJ,UAAUW,KAAV,CAAgBK,MALb,EAKsBX,KALtB,4BAMHL,UAAUW,KAAV,CAAgBM,KANb,EAMqBX,IANrB,WAAN;;AASAT,OAAOC,OAAP,GAAiB;AACfoB,UAAQlB,UAAUW,KADH;AAEfQ,UAAQnB,UAAUmB,MAFH;AAGfC,iBAAepB,UAAUoB,aAHV;AAIfV,gBAJe;AAKfF,8BALe;AAMfC,YANe;AAOfF;AAPe,CAAjB,C;;;;;;;;;;;;;ACrBA,IAAMY,SAAS;AACbE,SAAO,CADM;AAEbC,SAAO;AAFM,CAAf;;AAKA,IAAMX,QAAQ;AACZC,SAAO,CADK;AAEZC,WAAS,CAFG;AAGZC,WAAS,CAHG;AAIZC,SAAO,CAJK;AAKZC,UAAQ,CALI;AAMZC,SAAO;AANK,CAAd;;AASA,IAAMM,+EACHZ,MAAMC,KADH,EACW,GADX,sCAEHD,MAAME,OAFH,EAEa,GAFb,sCAGHF,MAAMG,OAHH,EAGa,GAHb,sCAIHH,MAAMI,KAJH,EAIW,GAJX,sCAKHJ,MAAMK,MALH,EAKY,GALZ,sCAMHL,MAAMM,KANH,EAMW,GANX,qBAAN;;AASA,IAAMG,sEACHT,MAAMC,KADH,EACW,SADX,mCAEHD,MAAME,OAFH,EAEa,SAFb,mCAGHF,MAAMG,OAHH,EAGa,SAHb,mCAIHH,MAAMI,KAJH,EAIW,SAJX,mCAKHJ,MAAMK,MALH,EAKY,SALZ,mCAMHL,MAAMM,KANH,EAMW,SANX,kBAAN;;AASApB,OAAOC,OAAP,GAAiB,EAAEa,YAAF,EAASQ,cAAT,EAAiBI,kCAAjB,EAAmCH,4BAAnC,EAAjB,C;;;;;;;;;AChCA,IAAMI,OAAO;AACX,WAAS,CADE;AAEX,WAAS,CAFE;AAGX,UAAQ,CAHG;AAIX,UAAQ,CAJG;AAKX,UAAQ,CALG;AAMX,UAAQ,CANG;AAOX,UAAQ,CAPG;AAQX,UAAQ;AARG,CAAb;;AAWA3B,OAAOC,OAAP,GAAiB0B,IAAjB,C;;;;;;;;;eCX8B7B,mBAAOA,CAAC,CAAR,C;IAAtBD,Q,YAAAA,Q;IAAUK,O,YAAAA,O;;AAClB,IAAMU,OAAOd,mBAAOA,CAAC,CAAR,CAAb;AACA,IAAM8B,WAAW9B,mBAAOA,CAAC,CAAR,CAAjB;;AAEA,SAAS+B,qBAAT,CAA+BC,IAA/B,EAAqC;AACnC,MAAMC,MAAM,EAAZ;AACA,MAAIC,MAAM,CAAV;AACA,MAAIC,gBAAJ;AACA,MAAIC,eAAJ;;AAEA,MAAMC,UAAU,SAAVA,OAAU,CAACC,OAAD,EAAUC,GAAV,EAAkB;AAChC,WAAOD,QAAQE,EAAR,CAAWV,SAASK,OAAT,EAAkBI,IAAI,CAAJ,CAAlB,EAA0BA,IAAI,CAAJ,CAA1B,CAAX,CAAP;AACD,GAFD;;AAIA,SAAOL,MAAM,EAAb,EAAiB;AACfC,cAAUpC,SAAS0C,OAAT,CAAiBP,GAAjB,CAAV;AACAE,aAASJ,KAAKU,MAAL,CAAY,UAACJ,OAAD,EAAUC,GAAV;AAAA,aAAkBF,QAAQC,OAAR,EAAiBC,GAAjB,CAAlB;AAAA,KAAZ,EAAqD,IAAIxC,QAAJ,EAArD,CAAT;AACAkC,QAAIU,IAAJ,CAASP,MAAT;AACAF;AACD;;AAED,SAAOD,GAAP;AACD;;AAED,IAAMW,eAAe,YAAW;AAC9B,MAAMZ,OAAO,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAAC,CAAD,EAAI,CAAC,CAAL,CAAT,EACC,CAAC,CAAD,EAAI,CAAJ,CADD,EACS,CAAC,CAAD,EAAI,CAAC,CAAL,CADT,EAEC,CAAC,CAAC,CAAF,EAAK,CAAL,CAFD,EAEU,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,CAFV,EAGC,CAAC,CAAC,CAAF,EAAK,CAAL,CAHD,EAGU,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,CAHV,CAAb;;AAKA,SAAOD,sBAAsBC,IAAtB,CAAP;AACD,CAPoB,EAArB;;AASA,IAAMa,aAAa,YAAW;AAC5B,MAAMb,OAAO,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAAC,CAAD,EAAI,CAAJ,CAAT,EACC,CAAC,CAAD,EAAI,CAAC,CAAL,CADD,EACS,CAAC,CAAC,CAAF,EAAK,CAAL,CADT,EAEC,CAAC,CAAC,CAAF,EAAK,CAAL,CAFD,EAEU,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,CAFV,EAGC,CAAC,CAAD,EAAI,CAAC,CAAL,CAHD,EAGU,CAAC,CAAD,EAAI,CAAJ,CAHV,CAAb;;AAKA,SAAOD,sBAAsBC,IAAtB,CAAP;AACD,CAPkB,EAAnB;;AASA,IAAMc,cAAc,YAAW;AAC7B,MAAIZ,MAAM,CAAV;AACA,MAAMD,MAAM,EAAZ;AACA,MAAIc,cAAJ;AACA,MAAIC,eAAJ;AACA,MAAIC,eAAJ;AACA,MAAIC,gBAAJ;AACA,MAAIC,oBAAJ;;AAEA,SAAOjB,MAAM,EAAb,EAAiB;AACfa,YAAQ,EAAR;AACAE,aAASG,KAAKC,KAAL,CAAWnB,MAAM,CAAjB,CAAT;AACAc,aAASd,MAAM,CAAf;AACAgB,cAAWhB,MAAMe,SAAS,CAAhB,GAAsBf,MAAM,CAAP,GAAY,CAAjC,GAAsCA,MAAM,CAAP,GAAY,CAA3D;AACA,QAAIA,QAAQ,EAAZ,EAAgB;AACdiB,oBAAc,EAAd;AACD,KAFD,MAEO;AACLA,oBAAejB,MAAM,CAACe,SAAS,CAAV,IAAe,CAAtB,GAA4Bf,MAAM,CAAlC,GAAwCA,MAAM,CAAP,GAAY,CAAjE;AACD;AACDa,UAAMjC,KAAKwC,KAAX,IAAoBlD,QAAQmD,IAAR,CAAaP,MAAb,EAAqBQ,GAArB,CAAyBpD,QAAQqD,YAAR,CAAqBR,MAArB,CAAzB,CAApB;AACAF,UAAMjC,KAAK4C,KAAX,IAAoBtD,QAAQmD,IAAR,CAAaP,MAAb,EAAqBQ,GAArB,CAAyBpD,QAAQuD,YAAR,CAAqBV,MAArB,CAAzB,CAApB;AACAF,UAAMjC,KAAK8C,IAAX,IAAmBxD,QAAQyD,IAAR,CAAaZ,MAAb,EAAqBO,GAArB,CAAyBpD,QAAQ0D,WAAR,CAAoBd,MAApB,CAAzB,CAAnB;AACAD,UAAMjC,KAAKiD,IAAX,IAAmB3D,QAAQyD,IAAR,CAAaZ,MAAb,EAAqBO,GAArB,CAAyBpD,QAAQ4D,WAAR,CAAoBhB,MAApB,CAAzB,CAAnB;AACAD,UAAMjC,KAAKmD,IAAX,IAAmB7D,QAAQ8D,KAAR,CAAchB,OAAd,EAAuBM,GAAvB,CAA2BpD,QAAQqD,YAAR,CAAqBR,MAArB,CAA3B,CAAnB;AACAF,UAAMjC,KAAKqD,IAAX,IAAmB/D,QAAQ8D,KAAR,CAAchB,OAAd,EAAuBM,GAAvB,CAA2BpD,QAAQuD,YAAR,CAAqBV,MAArB,CAA3B,CAAnB;AACAF,UAAMjC,KAAKsD,IAAX,IAAmBhE,QAAQiE,UAAR,CAAmBlB,WAAnB,EAAgCK,GAAhC,CAAoCpD,QAAQqD,YAAR,CAAqBR,MAArB,CAApC,CAAnB;AACAF,UAAMjC,KAAKwD,IAAX,IAAmBlE,QAAQiE,UAAR,CAAmBlB,WAAnB,EAAgCK,GAAhC,CAAoCpD,QAAQuD,YAAR,CAAqBV,MAArB,CAApC,CAAnB;AACAhB,QAAIU,IAAJ,CAASI,KAAT;AACAb;AACD;;AAED,SAAOD,GAAP;AACD,CAhCmB,EAApB;;AAkCA/B,OAAOC,OAAP,GAAiB;AACfyC,4BADe;AAEfC,wBAFe;AAGfC;AAHe,CAAjB,C;;;;;;;;;;;;;eC5E8B9C,mBAAOA,CAAC,CAAR,C;IAAtBD,Q,YAAAA,Q;IAAUK,O,YAAAA,O;;gBACMJ,mBAAOA,CAAC,CAAR,C;IAAhB8C,W,aAAAA,W;;AACR,IAAMhC,OAAOd,mBAAOA,CAAC,CAAR,CAAb;;AAEA,IAAMuE,uDACHzD,KAAKwC,KADF,EACU,IADV,8BAEHxC,KAAK8C,IAFF,EAES,IAFT,8BAGH9C,KAAKmD,IAHF,EAGS,IAHT,8BAIHnD,KAAKsD,IAJF,EAIS,IAJT,8BAKHtD,KAAK4C,KALF,EAKU,KALV,8BAMH5C,KAAKiD,IANF,EAMS,KANT,8BAOHjD,KAAKwD,IAPF,EAOS,KAPT,8BAQHxD,KAAKqD,IARF,EAQS,KART,aAAN;;AAWA,SAASK,aAAT,CAAuBtC,GAAvB,EAA4BuC,QAA5B,EAAsClC,GAAtC,EAA2C;AACzC,MAAMmC,QAAQ,IAAI3E,QAAJ,EAAd;AACA,MAAM4E,QAAQ7B,YAAYZ,GAAZ,EAAiBK,GAAjB,CAAd;AACA,MAAMqC,WAAWD,MAAMnB,GAAN,CAAUiB,QAAV,CAAjB;AACA,MAAII,oBAAJ;;AAEA,MAAID,SAASE,MAAT,EAAJ,EAAuB;AACrB,WAAOH,KAAP;AACD,GAFD,MAEO;AACLE,kBAAcN,SAAShC,GAAT,IAAgBqC,SAASG,cAAT,EAAhB,GAA4CH,SAASI,cAAT,EAA1D;AACA,WAAOL,MAAMM,GAAN,CAAUnC,YAAY+B,WAAZ,EAAyBtC,GAAzB,CAAV,CAAP;AACD;AACF;;AAED,SAAS2C,SAAT,CAAmBhD,GAAnB,EAAwBuC,QAAxB,EAAkCU,YAAlC,EAAgD;AAC9C,SAAO,CAACrE,KAAKwC,KAAN,EAAaxC,KAAK4C,KAAlB,EAAyB5C,KAAK8C,IAA9B,EAAoC9C,KAAKiD,IAAzC,EAA+CrB,MAA/C,CAAsD,UAACT,GAAD,EAAMM,GAAN,EAAc;AACzE,WAAON,IAAIO,EAAJ,CAAOgC,cAActC,GAAd,EAAmBuC,QAAnB,EAA6BlC,GAA7B,CAAP,CAAP;AACD,GAFM,EAEJ,IAAIxC,QAAJ,EAFI,EAEYyD,GAFZ,CAEgB2B,YAFhB,CAAP;AAGD;;AAED,SAASC,IAAT,CAAclD,GAAd,EAAmBuC,QAAnB,EAA6BU,YAA7B,EAA2C;AACzC,SAAO,CAACrE,KAAKmD,IAAN,EAAYnD,KAAKsD,IAAjB,EAAuBtD,KAAKwD,IAA5B,EAAkCxD,KAAKqD,IAAvC,EAA6CzB,MAA7C,CAAoD,UAACT,GAAD,EAAMM,GAAN,EAAc;AACvE,WAAON,IAAIO,EAAJ,CAAOgC,cAActC,GAAd,EAAmBuC,QAAnB,EAA6BlC,GAA7B,CAAP,CAAP;AACD,GAFM,EAEJ,IAAIxC,QAAJ,EAFI,EAEYyD,GAFZ,CAEgB2B,YAFhB,CAAP;AAGD;;AAEDjF,OAAOC,OAAP,GAAiB;AACf+E,sBADe;AAEfE;AAFe,CAAjB,C;;;;;;;;;;;;;ACzCA,IAAMC,QAAQrF,mBAAOA,CAAC,EAAR,CAAd;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMsF,QAAQlC,KAAKmC,GAAL,CAAS,CAAT,EAAY,EAAZ,CAAd;;IAEMxF,Q;AACJ,oBAAYyF,GAAZ,EAAiBC,IAAjB,EAAuB;AAAA;;AACrB,SAAKD,GAAL,GAAW,CAACA,OAAO,CAAR,MAAe,CAA1B;AACA,SAAKC,IAAL,GAAY,CAACA,QAAQ,CAAT,MAAgB,CAA5B;AACD;;;;wBAEGC,K,EAAO;AACT,aAAO,IAAI3F,QAAJ,CAAa,KAAKyF,GAAL,GAAWE,MAAMF,GAA9B,EAAmC,KAAKC,IAAL,GAAYC,MAAMD,IAArD,CAAP;AACD;;;uBAEEC,K,EAAO;AACR,aAAO,IAAI3F,QAAJ,CAAa,KAAKyF,GAAL,GAAWE,MAAMF,GAA9B,EAAmC,KAAKC,IAAL,GAAYC,MAAMD,IAArD,CAAP;AACD;;;wBAEGC,K,EAAO;AACT,aAAO,IAAI3F,QAAJ,CAAa,KAAKyF,GAAL,GAAWE,MAAMF,GAA9B,EAAmC,KAAKC,IAAL,GAAYC,MAAMD,IAArD,CAAP;AACD;;;0BAEK;AACJ,aAAO,IAAI1F,QAAJ,CAAa,CAAC,KAAKyF,GAAnB,EAAwB,CAAC,KAAKC,IAA9B,CAAP;AACD;;;2BAEMC,K,EAAO;AACZ,aAAQ,KAAKF,GAAL,KAAaE,MAAMF,GAAnB,IAA0B,KAAKC,IAAL,KAAcC,MAAMD,IAAtD;AACD;;;gCAEWC,K,EAAO;AACjB,aAAQ,KAAKD,IAAL,GAAYC,MAAMD,IAAlB,IAA0B,KAAKD,GAAL,GAAWE,MAAMF,GAAnD;AACD;;;6BAEQE,K,EAAO;AACd,aAAQ,KAAKD,IAAL,GAAYC,MAAMD,IAAlB,IAA0B,KAAKD,GAAL,GAAWE,MAAMF,GAAnD;AACD;;;6BAEQ;AACP,aAAQ,KAAKC,IAAL,KAAc,CAAd,IAAmB,KAAKD,GAAL,KAAa,CAAxC;AACD;;;+BAEUG,O,EAAS;AAClB,UAAIC,mBAAJ;AAAA,UAAgBC,oBAAhB;;AAEA,UAAIF,WAAW,CAAf,EAAkB;AAChB,eAAO,IAAI5F,QAAJ,CAAa,KAAKyF,GAAlB,EAAuB,KAAKC,IAA5B,CAAP;AACD,OAFD,MAEO,IAAIE,UAAU,EAAd,EAAkB;AACvB,eAAO,IAAI5F,QAAJ,EAAP;AACD,OAFM,MAEA,IAAI4F,WAAW,EAAf,EAAmB;AACxBC,qBAAa,KAAKH,IAAL,KAAeE,UAAU,EAAtC;AACAE,sBAAc,CAAd;AACD,OAHM,MAGA;AACLD,qBAAc,KAAKJ,GAAL,KAAaG,OAAd,GAA0B,KAAKF,IAAL,IAAc,KAAKE,OAA1D;AACAE,sBAAc,KAAKJ,IAAL,KAAcE,OAA5B;AACD;;AAED,aAAO,IAAI5F,QAAJ,CAAa6F,UAAb,EAAyBC,WAAzB,CAAP;AACD;;;8BAESF,O,EAAS;AACjB,UAAIC,mBAAJ;AAAA,UAAgBC,oBAAhB;;AAEA,UAAIF,WAAW,CAAf,EAAkB;AAChB,eAAO,IAAI5F,QAAJ,CAAa,KAAKyF,GAAlB,EAAuB,KAAKC,IAA5B,CAAP;AACD,OAFD,MAEO,IAAIE,UAAU,EAAd,EAAkB;AACvB,eAAO,IAAI5F,QAAJ,EAAP;AACD,OAFM,MAEA,IAAI4F,WAAW,EAAf,EAAmB;AACxBC,qBAAa,CAAb;AACAC,sBAAe,KAAKL,GAAL,IAAaG,UAAU,EAAxB,KAAiC,CAA/C;AACD,OAHM,MAGA;AACLC,qBAAc,KAAKJ,GAAL,IAAYG,OAAb,KAA0B,CAAvC;AACAE,sBAAe,CAAE,KAAKL,GAAL,KAAc,KAAKG,OAApB,GAAiC,KAAKF,IAAL,IAAaE,OAA/C,MAA6D,CAA5E;AACD;;AAED,aAAO,IAAI5F,QAAJ,CAAa6F,UAAb,EAAyBC,WAAzB,CAAP;AACD;;;+BAEU;AACP,aAAO,CAAC,KAAKL,GAAN,EAAW,KAAKC,IAAhB,EAAsB/C,MAAtB,CAA6B,UAACoD,KAAD,EAAQC,KAAR,EAAkB;AACpD,eAAOD,QAAQT,MAAMW,UAAN,CAAiBD,KAAjB,CAAf;AACD,OAFM,EAEJ,CAFI,CAAP;AAGH;;;2BAEM7D,G,EAAK;AACV,UAAIA,OAAO,EAAP,IAAaA,MAAM,EAAvB,EAA2B;AACzB,aAAKuD,IAAL,GAAY,CAAC,KAAKA,IAAL,GAAa,KAAMvD,MAAM,EAA1B,MAAoC,CAAhD;AACD,OAFD,MAEO,IAAIA,OAAO,CAAP,IAAYA,MAAM,EAAtB,EAA0B;AAC/B,aAAKsD,GAAL,GAAW,CAAC,KAAKA,GAAL,GAAY,KAAKtD,GAAlB,MAA4B,CAAvC;AACD;AACF;;;6BAEQA,G,EAAK;AACZ,UAAIA,OAAO,EAAX,EAAe;AACb,aAAKuD,IAAL,GAAY,CAAC,KAAKA,IAAL,GAAY,EAAE,KAAMvD,MAAM,EAAd,CAAb,MAAqC,CAAjD;AACD,OAFD,MAEO;AACL,aAAKsD,GAAL,GAAW,CAAC,KAAKA,GAAL,GAAW,EAAE,KAAKtD,GAAP,CAAZ,MAA6B,CAAxC;AACD;AACF;;;qCAEgB;AACf,UAAI,KAAKsD,GAAT,EAAc;AACZ,eAAOH,MAAMY,gBAAN,CAAuB,KAAKT,GAA5B,CAAP;AACD,OAFD,MAEO,IAAI,KAAKC,IAAT,EAAe;AACpB,eAAOJ,MAAMY,gBAAN,CAAuB,KAAKR,IAA5B,IAAoC,EAA3C;AACD,OAFM,MAEA;AACL,eAAO,IAAP;AACD;AACF;;;8BAESvD,G,EAAK;AACb,UAAIA,MAAM,EAAV,EAAc;AACZ,eAAOgE,QAAQ,KAAKV,GAAL,GAAY,KAAKtD,GAAzB,CAAP;AACD,OAFD,MAEO;AACL,eAAOgE,QAAQ,KAAKT,IAAL,GAAa,KAAMvD,MAAM,EAAjC,CAAP;AACD;AACF;;;qCAEgB;AACf,UAAI,KAAKuD,IAAT,EAAe;AACb,eAAOJ,MAAMc,gBAAN,CAAuB,KAAKV,IAA5B,IAAoC,EAA3C;AACD,OAFD,MAEO,IAAI,KAAKD,GAAT,EAAc;AACnB,eAAOH,MAAMc,gBAAN,CAAuB,KAAKX,GAA5B,CAAP;AACD,OAFM,MAEA;AACL,eAAO,IAAP;AACD;AACF;;;6BAEQY,E,EAAI;AACX,aAAO,KAAKZ,GAAZ,EAAiB;AACfY,WAAGf,MAAMY,gBAAN,CAAuB,KAAKT,GAA5B,CAAH;AACA,aAAKA,GAAL,GAAWH,MAAMgB,kBAAN,CAAyB,KAAKb,GAA9B,CAAX;AACD;;AAED,aAAO,KAAKC,IAAZ,EAAkB;AAChBW,WAAGf,MAAMY,gBAAN,CAAuB,KAAKR,IAA5B,IAAoC,EAAvC;AACA,aAAKA,IAAL,GAAYJ,MAAMgB,kBAAN,CAAyB,KAAKZ,IAA9B,CAAZ;AACD;AACF;;;0BAEK;AACJ,aAAO,IAAI1F,QAAJ,CAAa,KAAKyF,GAAlB,EAAuB,KAAKC,IAA5B,CAAP;AACD;;;6BA6EQ;AACP,UAAIa,MAAM,EAAV;AACA,UAAIf,MAAM,EAAV;AACA,UAAIgB,eAAJ;AACAC,cAAQC,GAAR,CAAY,QAAZ;AACA,aAAOlB,OAAO,EAAd,EAAkB;AAChBgB,iBAAS,CAACnD,KAAKmC,GAAL,CAAS,CAAT,EAAYA,MAAM,EAAlB,IAAwB,KAAKE,IAA9B,MAAwC,CAAxC,GAA4C,GAA5C,GAAkD,GAA3D;AACAa,cAAMC,SAASD,GAAf;AACA,YAAIA,IAAII,MAAJ,KAAe,CAAnB,EAAsB;AACpBF,kBAAQC,GAAR,CAAYH,GAAZ;AACAA,gBAAM,EAAN;AACD;AACDf;AACD;;AAED,aAAOA,OAAO,CAAd,EAAiB;AACfgB,iBAAS,CAACnD,KAAKmC,GAAL,CAAS,CAAT,EAAYA,GAAZ,IAAmB,KAAKC,GAAzB,MAAkC,CAAlC,GAAsC,GAAtC,GAA4C,GAArD;AACAc,cAAMC,SAASD,GAAf;AACA,YAAIA,IAAII,MAAJ,KAAe,CAAnB,EAAsB;AACpBF,kBAAQC,GAAR,CAAYH,GAAZ;AACAA,gBAAM,EAAN;AACD;AACDf;AACD;AACDiB,cAAQC,GAAR,CAAY,QAAZ;AACD;;;4BApGcvE,G,EAAK;AAClB,UAAMD,MAAM,IAAIlC,QAAJ,EAAZ;AACAkC,UAAI0E,MAAJ,CAAWzE,GAAX;;AAEA,aAAOD,GAAP;AACD;;;kCAEoB2E,S,EAAW;AAC9B,UAAM3E,MAAM,IAAIlC,QAAJ,EAAZ;;AAEA6G,gBAAUC,OAAV,CAAkB,UAAC3E,GAAD,EAAS;AACzBD,YAAI0E,MAAJ,CAAWzE,GAAX;AACD,OAFD;;AAIA,aAAOD,GAAP;AACD;;;4BAEc6E,M,EAAQ;AACrB,UAAM7E,MAAM,IAAIlC,QAAJ,EAAZ;AACA,UAAI+G,SAAS,CAAT,IAAcA,SAAS,CAA3B,EAA8B;AAAE,eAAO7E,GAAP;AAAa;AAC7C,UAAIC,MAAM4E,MAAV;;AAEA,aAAO5E,MAAM,EAAb,EAAiB;AACfD,YAAI0E,MAAJ,CAAWzE,GAAX;AACAA,eAAO,CAAP;AACD;;AAED,aAAOD,GAAP;AACD;;;4BAEc8E,M,EAAQ;AACrB,UAAM9E,MAAM,IAAIlC,QAAJ,EAAZ;AACA,UAAIgH,SAAS,CAAT,IAAcA,SAAS,CAA3B,EAA8B;AAAE,eAAO9E,GAAP;AAAa;;AAE7C,UAAIC,MAAM6E,SAAS,CAAnB;AACA,UAAIC,SAAS9E,MAAM,CAAnB;;AAEA,aAAOA,OAAO8E,MAAd,EAAsB;AACpB/E,YAAI0E,MAAJ,CAAWzE,GAAX;AACAA;AACD;;AAED,aAAOD,GAAP;AACD;;;mCAEqBgF,Q,EAAU;AAC9B,UAAMhF,MAAMlC,SAAS0C,OAAT,CAAiBwE,QAAjB,CAAZ;AACA,UAAIA,WAAW,CAAX,IAAgBA,WAAW,EAA/B,EAAmC;AAAE,eAAOhF,GAAP;AAAa;AAClD,UAAIC,MAAM+E,WAAW,CAArB;;AAEA,aAAO/E,MAAM,EAAN,IAAYA,MAAM,CAAN,KAAY,CAA/B,EAAkC;AAChCD,YAAI0E,MAAJ,CAAWzE,GAAX;AACAA,eAAO,CAAP;AACD;;AAED,aAAOD,GAAP;AACD;;;kCAEoBgF,Q,EAAU;AAC7B,UAAMhF,MAAM,IAAIlC,QAAJ,EAAZ;AACA,UAAIkH,WAAW,CAAX,IAAgBA,WAAW,EAA/B,EAAmC;AAAE,eAAOhF,GAAP;AAAa;AAClD,UAAIC,MAAM+E,QAAV;;AAEA,aAAO/E,MAAM,EAAN,IAAYA,MAAM,CAAN,KAAY,CAA/B,EAAkC;AAChCD,YAAI0E,MAAJ,CAAWzE,GAAX;AACAA,eAAO,CAAP;AACD;;AAED,UAAIA,MAAM,EAAV,EAAc;AACZD,YAAI0E,MAAJ,CAAWzE,GAAX;AACD;;AAED,aAAOD,GAAP;AACD;;;;;;AA+BH/B,OAAOC,OAAP,GAAiBJ,QAAjB,C;;;;;;;;;eC3Q8BC,mBAAOA,CAAC,CAAR,C;IAAtBD,Q,YAAAA,Q;IAAUK,O,YAAAA,O;;AAElB,SAAS0B,QAAT,CAAkBK,OAAlB,EAA2B+E,IAA3B,EAAiCC,IAAjC,EAAuC;AACrC,MAAIP,YAAYzE,OAAhB;;AAEA,MAAI+E,OAAO,CAAX,EAAc;AACZN,gBAAYA,UAAUQ,SAAV,CAAoBF,OAAO,CAA3B,CAAZ;AACD,GAFD,MAEO,IAAIA,OAAO,CAAX,EAAa;AAClBN,gBAAYA,UAAUS,UAAV,CAAqBH,OAAO,CAAC,CAA7B,CAAZ;AACD;;AAED,MAAIC,OAAO,CAAX,EAAc;AACZP,gBAAYA,UAAUQ,SAAV,CAAoBD,IAApB,EAA0B3D,GAA1B,CAA8BpD,QAAQ0D,WAAR,CAAoBqD,OAAO,CAA3B,CAA9B,CAAZ;AACD,GAFD,MAEO,IAAIA,OAAO,CAAX,EAAa;AAClBP,gBAAYA,UAAUS,UAAV,CAAqB,CAACF,IAAtB,EAA4B3D,GAA5B,CAAgCpD,QAAQ4D,WAAR,CAAoBmD,OAAO,CAA3B,CAAhC,CAAZ;AACD;;AAED,SAAOP,SAAP;AACD;;AAED1G,OAAOC,OAAP,GAAiB2B,QAAjB,C;;;;;;;;;ACpBA,IAAMwF,YAAY,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,CAAlB;;AAEA,IAAMC,YAAY,YAAW;AAC3B,SAAOD,UAAU5E,MAAV,CAAiB,UAACT,GAAD,EAAMuF,IAAN,EAAYC,GAAZ,EAAoB;AAC1CxF,QAAIuF,IAAJ,IAAYC,GAAZ;AACA,WAAOxF,GAAP;AACD,GAHM,EAGJ,EAHI,CAAP;AAID,CALiB,EAAlB;;AAOA,IAAMyF,YAAY,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,CAAlB;;AAEA,IAAMC,YAAY,YAAW;AAC3B,SAAOD,UAAUhF,MAAV,CAAiB,UAACT,GAAD,EAAM2F,IAAN,EAAYtB,GAAZ,EAAoB;AAC1CrE,QAAI2F,IAAJ,IAAYtB,GAAZ;AACA,WAAOrE,GAAP;AACD,GAHM,EAGJ,EAHI,CAAP;AAID,CALiB,EAAlB;;AAOA,IAAM4F,YAAY;AAChBC,YAAU,QADM;AAEhBC,eAAa,OAFG;AAGhBC,gBAAc,QAHE;AAIhBC,cAAY,MAJI;AAKhBC,cAAY;AALI,CAAlB;;AAQA;AACA;AACA;AACA;AACA;;AAEAhI,OAAOC,OAAP,GAAiB,EAAEmH,oBAAF,EAAaC,oBAAb,EAAwBG,oBAAxB,EAAmCC,oBAAnC,EAA8CE,oBAA9C,EAAjB,C;;;;;;;;;AChCA,IAAMM,KAAKnI,mBAAOA,CAAC,EAAR,CAAX;;AAEAoI,EAAEC,QAAF,EAAYC,KAAZ,CAAkB,YAAW;AAC3B,MAAMC,KAAK,IAAIJ,EAAJ,EAAX;AACAI,KAAGC,GAAH;AACD,CAHD,E;;;;;;;;;;;;;ACFA,IAAMC,WAAWzI,mBAAOA,CAAC,EAAR,CAAjB;AACA,IAAM0I,KAAK1I,mBAAOA,CAAC,EAAR,CAAX;;eAC0CA,mBAAOA,CAAC,CAAR,C;IAAlCuB,M,YAAAA,M;IAAQC,M,YAAAA,M;IAAQC,a,YAAAA,a;;AACxB,IAAMkH,OAAO3I,mBAAOA,CAAC,EAAR,CAAb;;gBAGsBA,mBAAOA,CAAC,CAAR,C;IAFdsH,S,aAAAA,S;IAAWC,S,aAAAA,S;IACXG,S,aAAAA,S;IAAWC,S,aAAAA,S;IACXE,S,aAAAA,S;;IAEFM,E;AACJ,gBAAc;AAAA;;AACZ,SAAKS,QAAL,GAAgB,IAAIH,QAAJ,EAAhB;AACA,SAAKI,WAAL,GAAmBrH,OAAOE,KAA1B;AACA,SAAKoH,EAAL,GAAU,IAAIJ,EAAJ,EAAV;AACA,SAAKK,SAAL,GAAiB,KAAKH,QAAL,CAAcI,kBAAd,EAAjB;AACD;;;;0BAEK;AACJ,WAAKC,SAAL;AACA,WAAKC,YAAL;AACA,WAAKC,YAAL;AACD;;;mCAEc;AAAA;;AACbf,QAAE,SAAF,EAAagB,KAAb,CAAmB,UAACC,KAAD,EAAW;AAC5B,YAAIjB,EAAEiB,MAAMC,aAAR,EAAuBC,QAAvB,CAAgC,QAAhC,CAAJ,EAA+C;AAC7C,gBAAKX,QAAL,CAAcY,cAAd;AACA,gBAAKZ,QAAL,CAAcY,cAAd;AACA,gBAAKL,YAAL;AACD;AACF,OAND;;AAQAf,QAAE,OAAF,EAAWgB,KAAX,CAAiB,UAACC,KAAD,EAAW;AAC1B,YAAIjB,EAAEiB,MAAMC,aAAR,EAAuBC,QAAvB,CAAgC,QAAhC,CAAJ,EAA+C;AAC7C,gBAAKE,MAAL;AACD;AACF,OAJD;;AAMArB,QAAE,iBAAF,EAAqBsB,MAArB,CAA4B;AAC1BC,eAAO,KAAKb,EAAL,CAAQc,YAAR,GAAuB,IADJ;AAE1BC,aAAKzG,KAAK0G,KAAL,CAAW1G,KAAKqD,GAAL,CAAS,GAAT,IAAgB,IAA3B,IAAmC,IAFd;AAG1BsD,aAAK3G,KAAK0G,KAAL,CAAW1G,KAAKqD,GAAL,CAAS,EAAT,IAAe,IAA1B,IAAkC,IAHb;AAI1BuD,cAAM,IAJoB;AAK1BC,eAAO,eAACZ,KAAD,EAAQd,EAAR,EAAe;AACpB,cAAM2B,MAAM9G,KAAK0G,KAAL,CAAW1G,KAAKmC,GAAL,CAASnC,KAAK+G,CAAd,EAAiB5B,GAAGoB,KAApB,IAA6B,IAAxC,CAAZ;AACAvB,YAAE,cAAF,EAAkBgC,IAAlB,CAAuBzB,KAAK0B,UAAL,CAAgBH,GAAhB,CAAvB;AACD,SARyB;AAS1BI,gBAAQ,gBAACjB,KAAD,EAAQd,EAAR,EAAe;AACrB,cAAM2B,MAAM9G,KAAK0G,KAAL,CAAW1G,KAAKmC,GAAL,CAASnC,KAAK+G,CAAd,EAAiB5B,GAAGoB,KAApB,IAA6B,IAAxC,CAAZ;AACA,gBAAKb,EAAL,CAAQyB,eAAR,CAAwBL,GAAxB;AACD;AAZyB,OAA5B;;AAeA9B,QAAE,cAAF,EAAkBgC,IAAlB,CAAuBzB,KAAK0B,UAAL,CAAgB,KAAKvB,EAAL,CAAQc,YAAxB,CAAvB;AACD;;;wCAEmB;AAClBxB,QAAE,OAAF,EAAWoC,WAAX,CAAuB,QAAvB;AACApC,QAAE,SAAF,EAAaqC,QAAb,CAAsB,QAAtB;AACA,UAAMC,eAAetC,EAAE,eAAF,CAArB;AACA,UAAIuC,gBAAgB,KAAKC,mBAAL,EAApB;AACAF,mBAAaG,OAAb,UAA4BF,aAA5B;AACD;;;0CAEqB;AACpB,UAAI,KAAK/B,QAAL,CAAckC,qBAAd,EAAJ,EAA2C;AACzC,eAAO,+BAAP;AACD,OAFD,MAEO,IAAI,KAAKlC,QAAL,CAAcmC,mBAAd,EAAJ,EAAyC;AAC9C,eAAO,kCAAP;AACD,OAFM,MAEA,IAAI,KAAKnC,QAAL,CAAcoC,OAAd,CAAsB,KAAKpC,QAAL,CAAcqC,IAApC,CAAJ,EAA+C;AACpD,eAAO,WAAP;AACD,OAFM,MAEA;AACL,eAAO,WAAP;AACD;AACF;;;mCAEc;AACb,WAAKC,eAAL;AACA,WAAKC,YAAL;;AAEA,UAAI,KAAKvC,QAAL,CAAcqC,IAAd,KAAuB,KAAKpC,WAAhC,EAA6C;AAC3C,aAAKuC,eAAL;AACD,OAFD,MAEO;AACL,aAAK3B,MAAL;AACA;AACD;AAEF;;;sCAEiB;AAChB,UAAMiB,eAAetC,EAAE,eAAF,CAArB;AACAsC,mBAAaW,KAAb;AACA,UAAMC,WAAW3C,KAAK4C,WAAL,CAAiB,KAAK3C,QAAL,CAAc4C,SAA/B,CAAjB;AACAF,eAASzE,OAAT,CAAiB,UAAC4E,OAAD,EAAa;AAC5Bf,qBAAaG,OAAb,CAAqBzC,WAASqD,OAAT,WAArB;AACD,OAFD;AAGD;;;4BAEO,CAEP;;;yCAEoB;AACnB,UAAMC,SAAStD,EAAE,WAAF,CAAf;AACAsD,aAAOC,MAAP;AACArE,gBAAUT,OAAV,CAAkB,UAACW,IAAD,EAAU;AAC1BkE,eAAOC,MAAP,uBAAkCnE,IAAlC;AACD,OAFD;AAGAkE,aAAOC,MAAP;;AAEA,aAAOD,MAAP;AACD;;;mCAEclE,I,EAAMI,I,EAAM;AACzB,UAAMgE,WAAWpE,OAAOI,IAAxB;;AAEA,UAAMiE,YAAYzD,eAAawD,QAAb,aAAlB;;AAEA,UAAME,cAAcnD,KAAKoD,YAAL,CAAkBH,QAAlB,IAA8B,MAA9B,GAAuC,OAA3D;AACAC,gBAAUpB,QAAV,CAAmBqB,cAAc,SAAjC;;AAEA,aAAOD,SAAP;AACD;;;gCAEW;AAAA;;AACV,UAAMG,QAAQ5D,EAAE,QAAF,CAAd;;AAEA,UAAI6D,mBAAJ;AACAvE,gBAAUb,OAAV,CAAkB,UAACe,IAAD,EAAU;AAC1BqE,qBAAa7D,EAAE,MAAF,CAAb;AACA6D,mBAAWN,MAAX,uBAAsC/D,IAAtC;AACAN,kBAAUT,OAAV,CAAkB,UAACW,IAAD,EAAU;AAC1ByE,qBAAWN,MAAX,CAAkB,OAAKO,cAAL,CAAoB1E,IAApB,EAA0BI,IAA1B,CAAlB;AACD,SAFD;AAGAqE,mBAAWN,MAAX,uBAAsC/D,IAAtC;AACAoE,cAAMnB,OAAN,CAAcoB,UAAd;AACD,OARD;;AAUAD,YAAMnB,OAAN,CAAc,KAAKsB,kBAAL,EAAd;AACAH,YAAML,MAAN,CAAa,KAAKQ,kBAAL,EAAb;AACD;;;mCAEc;AACb/D,QAAE,QAAF,EAAYgE,MAAZ;AACAhE,QAAE,SAAF,EAAaoC,WAAb,CAAyB,uCAAzB;AACA,UAAM6B,aAAaC,OAAOC,MAAP,CAAchL,MAAd,CAAnB;AACA,UAAMiL,SAAS,KAAK5D,QAAL,CAAc4D,MAA7B;AACA,UAAIZ,iBAAJ;AACA,UAAIa,iBAAJ;;AAEAJ,iBAAWxF,OAAX,CAAmB,UAAC6F,SAAD,EAAe;AAChCF,eAAOE,SAAP,EAAkBC,GAAlB,GAAwBC,QAAxB,CAAiC,UAAC1K,GAAD,EAAS;AACxCuK,qBAAWrE,0BAAwB3G,cAAciL,SAAd,CAAxB,WAAX;AACA,cAAIF,OAAOhL,OAAOE,KAAd,EAAqBmL,SAArB,CAA+B3K,GAA/B,CAAJ,EAAyC;AACvCuK,qBAAShC,QAAT,CAAkB,OAAlB;AACD,WAFD,MAEO;AACLgC,qBAAShC,QAAT,CAAkB,OAAlB;AACD;AACDmB,qBAAWjD,KAAKmE,eAAL,CAAqB5K,GAArB,CAAX;AACAkG,kBAAMwD,QAAN,EAAkBD,MAAlB,CAAyBc,QAAzB;AACD,SATD;AAUD,OAXD;AAYD;;;6BAEQ;AAAA;;AACPrE,QAAE,MAAF,EAAUoC,WAAV,CAAsB,QAAtB;AACA,WAAKzB,SAAL,GAAiB,KAAKH,QAAL,CAAcI,kBAAd,EAAjB;AACA,UAAI,KAAKD,SAAL,CAAerC,MAAf,KAA0B,CAA9B,EAAiC;AAC/B,aAAKqG,iBAAL;AACA;AACD;;AAED,UAAIC,aAAJ;AACAC,iBAAW,YAAM;AACfD,eAAO,OAAKlE,EAAL,CAAQoE,UAAR,CAAmB,OAAKtE,QAAxB,EAAkC,OAAKG,SAAvC,CAAP;AACA,eAAKoE,WAAL,CAAiBH,IAAjB,EAAuB,YAAM;AAC3B,iBAAKpE,QAAL,CAAcwE,QAAd,CAAuBJ,IAAvB;AACA,iBAAK7D,YAAL;AACD,SAHD;AAID,OAND,EAMG,CANH;AAOD;;;gCAEW6D,I,EAAM5G,E,EAAI;AACpB,UAAMiH,UAAUjF,QAAMO,KAAKmE,eAAL,CAAqBE,KAAKM,OAAL,EAArB,CAAN,aAAhB;AACA,UAAMzB,YAAYzD,QAAMO,KAAKmE,eAAL,CAAqBE,KAAKO,KAAL,EAArB,CAAN,CAAlB;;AAEA,UAAIP,KAAKQ,YAAL,EAAJ,EAAyB;AACvB,YAAMC,YAAYrF,QAAMO,KAAKmE,eAAL,CAAqBE,KAAKO,KAAL,EAArB,CAAN,aAAlB;AACA,YAAMG,aAAaD,UAAUE,MAAV,EAAnB;AACAF,kBAAUG,GAAV,CAAc;AACZ,sBAAY,UADA;AAEZ,kBAAQF,WAAWG,IAFP;AAGZ,iBAAOH,WAAWI;AAHN,SAAd;AAKAL,kBAAUM,OAAV,CAAkB,MAAlB;AACD;;AAED,UAAMC,YAAYX,QAAQM,MAAR,EAAlB;AACAN,cAAQY,QAAR,CAAiBpC,SAAjB;AACA,UAAMqC,YAAYb,QAAQM,MAAR,EAAlB;;AAEA,UAAMQ,YAAYd,QAAQe,KAAR,GAAgBH,QAAhB,CAAyB,MAAzB,CAAlB;AACAE,gBAAUP,GAAV,CAAc;AACZ,oBAAY,UADA;AAEZ,gBAAQI,UAAUH,IAFN;AAGZ,eAAOG,UAAUF,GAHL;AAIZ,mBAAW;AAJC,OAAd;AAMAT,cAAQgB,IAAR;;AAEAF,gBAAUG,OAAV,CAAkB,EAAC,OAAOJ,UAAUJ,GAAlB,EAAuB,QAAQI,UAAUL,IAAzC,EAAlB,EAAkE,MAAlE,EAA0E,YAAU;AAClFR,gBAAQkB,IAAR;AACAJ,kBAAU/B,MAAV;AACAhG;AACD,OAJD;AAKD;;;sCAEiB;AAChBgC,QAAE,MAAF,EAAUqC,QAAV,CAAmB,QAAnB;AACA,WAAK1B,SAAL,GAAiB,KAAKH,QAAL,CAAcI,kBAAd,EAAjB;AACA,UAAI,KAAKD,SAAL,CAAerC,MAAf,KAA0B,CAA9B,EAAiC;AAC/B,aAAKqG,iBAAL;AACA;AACD;AACD,UAAMyB,YAAY,KAAKzF,SAAL,CAAe0F,GAAf,CAAmB,UAACzB,IAAD;AAAA,eAAUA,KAAK0B,OAAL,EAAV;AAAA,OAAnB,CAAlB;AACA,UAAMC,cAAc,EAApB;AACA,UAAMC,cAAc,EAApB;;AAEAJ,gBAAU3H,OAAV,CAAkB,UAACgI,QAAD,EAAc;AAC9BF,oBAAYE,SAASC,IAArB,IAA6BH,YAAYE,SAASC,IAArB,KAA8B,EAA3D;AACAH,oBAAYE,SAASC,IAArB,EAA2BnM,IAA3B,CAAgCkM,SAASE,EAAzC;;AAEAH,oBAAYC,SAASE,EAArB,IAA2BH,YAAYC,SAASE,EAArB,KAA4B,EAAvD;AACAH,oBAAYC,SAASE,EAArB,EAAyBpM,IAAzB,CAA8BkM,SAASC,IAAvC;AACD,OAND;;AAQA,WAAKE,uBAAL,CAA6BL,WAA7B;AACA,WAAKM,wBAAL,CAA8BL,WAA9B;AACD;;;4CAEuBD,W,EAAa;AACnC,UAAIO,qBAAJ;AACA,UAAI7B,gBAAJ;;AAEAf,aAAO6C,IAAP,CAAYR,WAAZ,EAAyB9H,OAAzB,CAAiC,UAACpE,OAAD,EAAa;AAC5CyM,uBAAevG,KAAKmE,eAAL,CAAqBrK,OAArB,CAAf;AACA4K,kBAAUjF,QAAM8G,YAAN,aAAV;AACA7B,gBAAQ+B,SAAR,CAAkB;AAChBC,uBAAajH,EAAE,QAAF,CADG;AAEhBkH,kBAAQ,SAFQ;AAGhBC,0BAAgB;AAHA,SAAlB;;AAMAlC,gBAAQmC,UAAR,CAAmB,YAAM;AACvBb,sBAAYlM,OAAZ,EAAqBoE,OAArB,CAA6B,UAAC4I,KAAD,EAAW;AACtCrH,oBAAMO,KAAKmE,eAAL,CAAqB2C,KAArB,CAAN,EAAqChF,QAArC,CAA8C,aAA9C;AACD,WAFD;AAGD,SAJD;;AAMA4C,gBAAQqC,UAAR,CAAmB,YAAM;AACvBtH,YAAE,SAAF,EAAaoC,WAAb,CAAyB,aAAzB;AACD,SAFD;AAGD,OAlBD;AAmBD;;;6CAEwBoE,W,EAAa;AAAA;;AACpC,UAAIe,eAAJ;AACA,UAAIC,qBAAJ;AACA,UAAIC,kBAAJ;AACA,UAAIC,qBAAJ;;AAEAxD,aAAO6C,IAAP,CAAYP,WAAZ,EAAyB/H,OAAzB,CAAiC,UAAC4I,KAAD,EAAW;AAC1CE,iBAASvH,QAAMO,KAAKmE,eAAL,CAAqB2C,KAArB,CAAN,CAAT;AACAE,eAAOI,SAAP,CAAiB;AACfC,kBAAQ,gBAACZ,SAAD,EAAe;AACrBQ,2BAAexH,EAAEgH,SAAF,EAAaa,MAAb,GAAsBC,IAAtB,CAA2B,IAA3B,CAAf;AACA,gBAAI,CAACN,YAAL,EAAmB;AAAE,qBAAO,KAAP;AAAe;AACpCC,wBAAYlH,KAAKwH,eAAL,CAAqBP,YAArB,CAAZ;AACA,mBAAOhB,YAAYa,KAAZ,EAAmBW,QAAnB,CAA4BP,SAA5B,CAAP;AACD,WANc;AAOfQ,gBAAM,cAAChH,KAAD,EAAQd,EAAR,EAAe;AACnBqH,2BAAexH,EAAEG,GAAG6G,SAAL,EAAgBa,MAAhB,GAAyBC,IAAzB,CAA8B,IAA9B,CAAf;AACAL,wBAAYlH,KAAKwH,eAAL,CAAqBP,YAArB,CAAZ;AACAE,2BAAe,OAAK/G,SAAL,CAAeuH,MAAf,CAAsB,UAACtD,IAAD,EAAU;AAC7C,qBAAOA,KAAKM,OAAL,OAAmBuC,SAAnB,IACA7C,KAAKO,KAAL,OAAiBgD,SAASd,KAAT,CADxB;AAED,aAHc,EAGZ,CAHY,CAAf;AAIA,mBAAK7G,QAAL,CAAcwE,QAAd,CAAuB0C,YAAvB;AACA,mBAAK3G,YAAL;AACD;AAhBc,SAAjB;AAkBD,OApBD;AAqBD;;;;;;AAGHjJ,OAAOC,OAAP,GAAiBgI,EAAjB,C;;;;;;;;;;;;;eCtS8BnI,mBAAOA,CAAC,CAAR,C;IAAtBD,Q,YAAAA,Q;IAAUK,O,YAAAA,O;;gBAEUJ,mBAAOA,CAAC,EAAR,C;IAApBwQ,I,aAAAA,I;IAAMC,S,aAAAA,S;;gBAGWzQ,mBAAOA,CAAC,CAAR,C;IADjBe,M,aAAAA,M;IAAQQ,M,aAAAA,M;IACRC,M,aAAAA,M;IAAQV,I,aAAAA,I;;gBAKSd,mBAAOA,CAAC,EAAR,C;IAHjB0Q,gB,aAAAA,gB;IACAC,a,aAAAA,a;IACAC,c,aAAAA,c;IACAC,Y,aAAAA,Y;;gBAGuB7Q,mBAAOA,CAAC,EAAR,C;IADvB8Q,gB,aAAAA,gB;IACAC,kB,aAAAA,kB;;IAEFtI,Q;AACJ,sBAAgF;AAAA,QAApE+D,MAAoE,uEAA3DuE,oBAA2D;AAAA,QAArC9F,IAAqC,uEAA9BzJ,OAAOE,KAAuB;AAAA,QAAhB8J,SAAgB,uEAAJ,EAAI;;AAAA;;AAC9E,SAAKgB,MAAL,GAAcA,MAAd;AACA,SAAKhB,SAAL,GAAiBA,SAAjB;;AAEA;AACA;AACA;AACA,SAAKwF,YAAL,GAAoB,GAApB;;AAEA;AACA;AACA;AACA,SAAKC,IAAL,GAAY,IAAIlR,QAAJ,EAAZ;;AAEA;AACA;AACA,SAAKmR,UAAL,GAAkB,EAAlB;;AAEA,SAAKC,eAAL,GAAuB,KAAKC,qBAAL,EAAvB;;AAEA;AACA;AACA;AACA,SAAKC,QAAL,GAAgB,KAAKC,mBAAL,EAAhB;AACA,SAAKC,SAAL,GAAiB,KAAKC,eAAL,EAAjB;;AAEA,SAAKC,OAAL,CAAaxG,IAAb,EAAmB,KAAKyG,aAAL,CAAmBzG,IAAnB,CAAnB;AACD;;;;4CAEuB;AACtB,UAAI/I,YAAJ;AACA,UAAMD,MAAM,EAAZ;;AAEA,WAAKC,MAAM,CAAX,EAAcA,MAAM,EAApB,EAAwBA,KAAxB,EAA+B;AAC7BD,YAAIC,GAAJ,IAAW,KAAKyP,UAAL,CAAgBzP,GAAhB,CAAX;AACD;;AAED,aAAOD,GAAP;AACD;;;0CAEqB;AAAA;;AACpB,UAAIiI,MAAM,IAAInK,QAAJ,EAAV;;AAEA,UAAI6R,cAAJ;AACA,UAAMC,YAAY,KAAKrF,MAAL,CAAYhL,OAAOE,KAAnB,CAAlB;AACAmQ,gBAAUlF,GAAV,GAAgBC,QAAhB,CAAyB,UAAC1K,GAAD,EAAS;AAChC0P,gBAAQ,MAAKT,eAAL,CAAqBjP,GAArB,CAAR;AACAgI,eAAOwG,iBAAiBxO,GAAjB,EAAsB0P,KAAtB,EAA6BpQ,OAAOE,KAApC,CAAP;AACD,OAHD;;AAKA,UAAMoQ,YAAY,KAAKtF,MAAL,CAAYhL,OAAOG,KAAnB,CAAlB;AACAmQ,gBAAUnF,GAAV,GAAgBC,QAAhB,CAAyB,UAAC1K,GAAD,EAAS;AAChC0P,gBAAQ,MAAKT,eAAL,CAAqBjP,GAArB,CAAR;AACAgI,eAAOwG,iBAAiBxO,GAAjB,EAAsB0P,KAAtB,EAA6BpQ,OAAOG,KAApC,CAAP;AACD,OAHD;;AAKA,aAAOuI,GAAP;AACD;;;sCAEiB;AAChB,UAAIA,MAAM,IAAInK,QAAJ,EAAV;AACA,WAAKkR,IAAL,CAAUtE,GAAV,GAAgBC,QAAhB,CAAyB,UAAC1K,GAAD,EAAS;AAChCgI,eAAOyG,cAAczO,GAAd,CAAP;AACD,OAFD;;AAIA,UAAI6P,wBAAJ;AACA,WAAKA,kBAAkB,CAAvB,EAA0BA,kBAAkB,CAA5C,EAA+CA,iBAA/C,EAAkE;AAChE,YAAI,CAAC,KAAKf,YAAL,GAAqB,KAAKe,eAA3B,MAAiD,CAArD,EAAwD;AACtD7H,iBAAO0G,eAAemB,eAAf,CAAP;AACD;AACF;;AAED,aAAO7H,GAAP;AACD;;;8BAES;AACR,aAAO,KAAKmH,QAAL,GAAgB,KAAKE,SAArB,GAAiCV,aAAa,KAAK5F,IAAlB,CAAxC;AACD;;;4BAEOA,I,EAAM+G,G,EAAK;AACjB,WAAK/G,IAAL,GAAYA,IAAZ;AACA,WAAK+G,GAAL,GAAWA,GAAX;AACD;;;+BAEU;AACT,WAAKP,OAAL,CAAa,KAAKO,GAAlB,EAAuB,KAAK/G,IAA5B;AACD;;;kCAEagH,K,EAAO;AACnB,aAAOA,QAAQzQ,OAAOG,KAAtB;AACD;;AAED;AACA;AACA;AACA;AACA;AACA;;;;0CACyC;AAAA,UAArBuQ,YAAqB,uEAAN,IAAM;;AACvC,UAAMnP,QAAQ,EAAd;AACA,UAAI,KAAKoP,kBAAL,EAAJ,EAA+B;AAAE,eAAOpP,KAAP;AAAe;AAChD,WAAKqP,YAAL,CAAkBrP,KAAlB,EAAyBmP,YAAzB;AACA,WAAKG,cAAL,CAAoBtP,KAApB,EAA2BmP,YAA3B;AACA,WAAKI,YAAL,CAAkBvP,KAAlB,EAAyBmP,YAAzB;;AAEA,aAAOnP,KAAP;AACD;;AAED;AACA;;;;yCACqB;AAAA;;AACnB,UAAMwP,cAAc,KAAKC,mBAAL,EAApB;AACA,UAAI3D,iBAAJ;AACA,UAAI4D,gBAAJ;;AAEA,UAAMC,SAAS,EAAf;AACA,aAAOH,YAAYjC,MAAZ,CAAmB,UAACqC,UAAD,EAAgB;AACxC9D,mBAAW8D,WAAWjE,OAAX,EAAX;;AAEA,eAAKkE,QAAL,CAAc/D,QAAd,EAAwB,UAACgE,UAAD,EAAgB;AACtCJ,oBAAUI,UAAV;AACA,iBAAO,IAAP;AACD,SAHD;;AAKA,eAAOJ,OAAP;AACD,OATM,CAAP;AAUD;;AAED;;;;iCACa1P,K,EAAOmP,Y,EAAc;AAChC,UAAMY,WAAW,KAAKC,gBAAL,CAAsB,KAAK9H,IAA3B,EAAiC1J,OAAON,KAAxC,CAAjB;;AAEA,UAAIiR,YAAJ,EAAkB;AAChB,YAAMc,cAAc,KAAKC,WAAL,GAAmBC,GAAnB,EAApB;;AAEA,YAAMC,mBAAmBpS,OAAOQ,OAAON,KAAd,EAAqBmS,UAArB,CAAgC,KAAKnI,IAArC,EAA2C6H,QAA3C,EAAqDE,WAArD,CAAzB;AACA,aAAKK,cAAL,CAAoBF,gBAApB,EAAsC,IAAIpS,OAAOQ,OAAON,KAAd,EAAqBY,IAArB,CAA0B,KAAKoJ,IAA/B,CAA1C,EAAgFlI,KAAhF;;AAEA,YAAMuQ,mBAAmBvS,OAAOQ,OAAON,KAAd,EAAqBsS,UAArB,CAAgC,KAAKtI,IAArC,EAA2C6H,QAA3C,EAAqDE,WAArD,CAAzB;AACA,aAAKK,cAAL,CAAoBC,gBAApB,EAAsC,KAAKvS,OAAOQ,OAAON,KAAd,EAAqBY,IAArB,CAA0B,KAAKoJ,IAA/B,CAA3C,EAAiFlI,KAAjF,EAAwF,KAAxF,EAA+F,IAA/F;AACD;;AAED,UAAIyQ,eAAe,KAAKhH,MAAL,CAAY,KAAKwF,GAAjB,EAAsBxP,EAAtB,CAAyB,KAAKyO,IAA9B,CAAnB;;AAEA,UAAMwC,kBAAkB1S,OAAOQ,OAAON,KAAd,EAAqByS,WAArB,CAAiC,KAAKzI,IAAtC,EAA4C6H,QAA5C,EAAsDU,YAAtD,CAAxB;AACA,WAAKH,cAAL,CAAoBI,eAApB,EAAqC,IAAI1S,OAAOQ,OAAON,KAAd,EAAqBY,IAArB,CAA0B,KAAKoJ,IAA/B,CAAzC,EAA+ElI,KAA/E,EAAsF,IAAtF;;AAEA,UAAM4Q,mBAAmB5S,OAAOQ,OAAON,KAAd,EAAqB2S,YAArB,CAAkC,KAAK3I,IAAvC,EAA6C6H,QAA7C,EAAuDU,YAAvD,CAAzB;AACA,WAAKH,cAAL,CAAoBM,gBAApB,EAAsC,IAAI5S,OAAOQ,OAAON,KAAd,EAAqBY,IAArB,CAA0B,KAAKoJ,IAA/B,CAA1C,EAAgFlI,KAAhF,EAAuF,IAAvF;AACD;;AAED;AACA;;AAEA;AACA;AACA;;;;mCACe8Q,Y,EAAcC,Q,EAAU/Q,K,EAAOgR,S,EAAWC,S,EAAW;AAAA;;AAClE,UAAIlF,aAAJ;AACA,UAAImF,WAAW,IAAf;;AAEAJ,mBAAajH,QAAb,CAAsB,UAAC1K,GAAD,EAAS;AAC7B4M,eAAO5M,MAAM4R,QAAb;AACA,YAAIE,SAAJ,EAAe;AACbjR,gBAAMJ,IAAN,CAAW,IAAI6N,IAAJ,CAAS1B,IAAT,EAAe5M,GAAf,EAAoBuO,UAAUyD,SAA9B,EAAyC3S,OAAON,KAAhD,CAAX;AACD,SAFD,MAEO,IAAI8S,aAAa,OAAK9C,IAAL,CAAUpE,SAAV,CAAoB3K,GAApB,CAAjB,EAA2C;AAChDa,gBAAMJ,IAAN,CAAW,IAAI6N,IAAJ,CAAS1B,IAAT,EAAe5M,GAAf,EAAoBuO,UAAU0D,OAA9B,EAAuC5S,OAAON,KAA9C,CAAX;AACD,SAFM,MAEA;AACL,cAAI8S,SAAJ,EAAe;AAAEE,uBAAW,OAAK9C,eAAL,CAAqBjP,GAArB,CAAX;AAAuC;;AAExD,cAAInB,OAAOQ,OAAON,KAAd,EAAqBmT,WAArB,CAAiC,OAAKnJ,IAAtC,EAA4C4B,SAA5C,CAAsD3K,GAAtD,CAAJ,EAAgE;AAC9D,mBAAKmS,SAAL,CAAevF,IAAf,EAAqB5M,GAArB,EAA0Ba,KAA1B,EAAiCkR,QAAjC;AACD,WAFD,MAEO;AACLlR,kBAAMJ,IAAN,CAAW,IAAI6N,IAAJ,CAAS1B,IAAT,EAAe5M,GAAf,EAAoBuO,UAAU6D,MAA9B,EAAsC/S,OAAON,KAA7C,EAAoDgT,QAApD,CAAX;AACD;AACF;AACF,OAfD;AAgBD;;AAED;;AAEA;AACA;;;;8BACUnF,I,EAAMC,E,EAAIhM,K,EAAOkR,Q,EAAU;AACnC,OAACxD,UAAU8D,MAAX,EAAmB9D,UAAU+D,MAA7B,EACC/D,UAAUgE,MADX,EACmBhE,UAAUiE,MAD7B,EACqC7N,OADrC,CAC6C,UAAC8N,SAAD,EAAe;AACzD5R,cAAMJ,IAAN,CAAW,IAAI6N,IAAJ,CAAS1B,IAAT,EAAeC,EAAf,EAAmB4F,SAAnB,EAA8BpT,OAAON,KAArC,EAA4CgT,QAA5C,CAAX;AACD,OAHF;AAID;;AAED;AACA;;;;mCACelR,K,EAAOmP,Y,EAAc;AAAA;;AAClC,UAAMzN,WAAW,KAAKwO,WAAL,EAAjB;AACA,UAAM9N,eAAe,KAAKyP,gBAAL,CAAsB,KAAK3J,IAA3B,CAArB;;AAEA,UAAM4J,aAAa,KAAK9B,gBAAL,CAAsB,KAAK9H,IAA3B,EAAiC1J,OAAOL,OAAxC,CAAnB;AACA,UAAI4T,oBAAJ;AACAD,iBAAWlI,GAAX,GAAiBC,QAAjB,CAA0B,UAAC1K,GAAD,EAAS;AACjC4S,sBAAc/T,OAAOQ,OAAOL,OAAd,EAAuB6B,KAAvB,CAA6Bb,GAA7B,EAAkCiD,YAAlC,CAAd;AACA,eAAK4P,gBAAL,CAAsBD,WAAtB,EAAmC5S,GAAnC,EAAwCX,OAAOL,OAA/C,EAAwD6B,KAAxD,EAA+DmP,YAA/D;AACD,OAHD;;AAKA,UAAM8C,aAAa,KAAKjC,gBAAL,CAAsB,KAAK9H,IAA3B,EAAiC1J,OAAOJ,OAAxC,CAAnB;AACA,UAAI8T,oBAAJ;AACAD,iBAAWrI,GAAX,GAAiBC,QAAjB,CAA0B,UAAC1K,GAAD,EAAS;AACjC+S,sBAAclU,OAAOQ,OAAOJ,OAAd,EAAuB4B,KAAvB,CAA6Bb,GAA7B,EAAkCuC,QAAlC,EAA4CU,YAA5C,CAAd;AACA,eAAK4P,gBAAL,CAAsBE,WAAtB,EAAmC/S,GAAnC,EAAwCX,OAAOJ,OAA/C,EAAwD4B,KAAxD,EAA+DmP,YAA/D;AACD,OAHD;;AAKA,UAAMgD,WAAW,KAAKnC,gBAAL,CAAsB,KAAK9H,IAA3B,EAAiC1J,OAAOH,KAAxC,CAAjB;AACA,UAAI+T,kBAAJ;AACAD,eAASvI,GAAT,GAAeC,QAAf,CAAwB,UAAC1K,GAAD,EAAS;AAC/BiT,oBAAYpU,OAAOQ,OAAOH,KAAd,EAAqB2B,KAArB,CAA2Bb,GAA3B,EAAgCuC,QAAhC,EAA0CU,YAA1C,CAAZ;AACA,eAAK4P,gBAAL,CAAsBI,SAAtB,EAAiCjT,GAAjC,EAAsCX,OAAOH,KAA7C,EAAoD2B,KAApD,EAA2DmP,YAA3D;AACD,OAHD;;AAKA,UAAMkD,WAAW,KAAKrC,gBAAL,CAAsB,KAAK9H,IAA3B,EAAiC1J,OAAOF,MAAxC,EAAgD0D,cAAhD,EAAjB;AACA,UAAIqQ,aAAa,IAAjB,EAAuB;AACrB,YAAMC,aAAatU,OAAOQ,OAAOF,MAAd,EAAsB0B,KAAtB,CAA4BqS,QAA5B,EAAsC3Q,QAAtC,EAAgDU,YAAhD,CAAnB;AACA,aAAK4P,gBAAL,CAAsBM,UAAtB,EAAkCD,QAAlC,EAA4C7T,OAAOF,MAAnD,EAA2D0B,KAA3D,EAAkEmP,YAAlE;AACD;AACF;;AAED;;;;iCACanP,K,EAAOmP,Y,EAAc;AAC9B,UAAM/M,eAAe,KAAKyP,gBAAL,CAAsB,KAAK3J,IAA3B,CAArB;AACA,UAAMqK,UAAU,KAAKvC,gBAAL,CAAsB,KAAK9H,IAA3B,EAAiC1J,OAAOD,KAAxC,EAA+CyD,cAA/C,EAAhB;;AAEA;AACA,UAAIuQ,YAAY,IAAhB,EAAsB;AAAE;AAAS;;AAEjC,UAAMC,cAAcxU,OAAOQ,OAAOD,KAAd,EAAqByB,KAArB,CAA2BuS,OAA3B,EAAoCnQ,YAApC,CAApB;AACA,WAAK4P,gBAAL,CAAsBQ,WAAtB,EAAmCD,OAAnC,EAA4C/T,OAAOD,KAAnD,EAA0DyB,KAA1D,EAAiEmP,YAAjE;;AAEA,UAAIA,YAAJ,EAAkB;AAChB,aAAKsD,cAAL,CAAoBzS,KAApB;AACD;AACJ;;AAED;AACA;;;;qCACiB8Q,Y,EAAc5M,Q,EAAUyF,S,EAAW3J,K,EAAOmP,Y,EAAc;AAAA;;AACvE,UAAIuD,eAAJ;AACA,UAAIC,gBAAJ;AACA,UAAIC,iBAAJ;;AAEA9B,mBAAajH,QAAb,CAAsB,UAAC1K,GAAD,EAAS;AAC7ByT,mBAAW,OAAKnJ,MAAL,CAAY,OAAKwF,GAAjB,EAAsBnF,SAAtB,CAAgC3K,GAAhC,IAAuC,OAAKiP,eAAL,CAAqBjP,GAArB,CAAvC,GAAmE,IAA9E;AACA,YAAIgQ,gBAAgByD,QAApB,EAA8B;AAC5B5S,gBAAMJ,IAAN,CAAW,IAAI6N,IAAJ,CAASvJ,QAAT,EAAmB/E,GAAnB,EAAwBuO,UAAU6D,MAAlC,EAA0C5H,SAA1C,EAAqDiJ,QAArD,CAAX;AACD;AACF,OALD;AAMD;;AAED;;;;mCACe5S,K,EAAO;AACpB,UAAM6S,mBAAmB,KAAKC,eAAL,CAAqB,KAAK5K,IAA1B,CAAzB;AACA,UAAMhE,WAAWlG,OAAOQ,OAAOD,KAAd,EAAqBwU,QAArB,CAA8B,KAAK7K,IAAnC,CAAjB;AACA,UAAM+H,cAAc,KAAKC,WAAL,GAAmBC,GAAnB,EAApB;;AAEA,UAAK0C,mBAAmB,CAApB,IAA4B7U,OAAOQ,OAAOD,KAAd,EAAqByU,SAArB,CAA+B,KAAK9K,IAApC,EAA0CnK,KAAKiD,IAA/C,EAAqDiP,WAArD,CAAhC,EAAmG;AACjGjQ,cAAMJ,IAAN,CAAW,IAAI6N,IAAJ,CAASvJ,QAAT,EAAmBA,WAAW,CAA9B,EAAiCwJ,UAAUuF,UAA3C,EAAuDzU,OAAOD,KAA9D,CAAX;AACD;;AAED,UAAKsU,mBAAmB,CAApB,IAA6B7U,OAAOQ,OAAOD,KAAd,EAAqByU,SAArB,CAA+B,KAAK9K,IAApC,EAA0CnK,KAAK8C,IAA/C,EAAqDoP,WAArD,CAAjC,EAAoG;AAClGjQ,cAAMJ,IAAN,CAAW,IAAI6N,IAAJ,CAASvJ,QAAT,EAAmBA,WAAW,CAA9B,EAAiCwJ,UAAUwF,SAA3C,EAAsD1U,OAAOD,KAA7D,CAAX;AACD;AACF;;AAED;AACA;AACA;;;;oCACgB2Q,K,EAAO;AACrB,aAAOA,UAAUzQ,OAAOE,KAAjB,GAAyB,KAAKsP,YAAL,GAAoB,CAA7C,GAAoD,KAAKA,YAAL,KAAsB,CAAjF;AACD;;AAED;;;;qCACiBiB,K,EAAOvF,S,EAAW;AACjC,aAAO,KAAKF,MAAL,CAAYyF,KAAZ,EAAmBzO,GAAnB,CAAuB,KAAKgJ,MAAL,CAAYE,SAAZ,CAAvB,CAAP;AACD;;AAED;;;;kCACc;AACZ,aAAO,KAAKF,MAAL,CAAYhL,OAAOE,KAAnB,EAA0Bc,EAA1B,CAA6B,KAAKgK,MAAL,CAAYhL,OAAOG,KAAnB,CAA7B,CAAP;AACD;;AAED;;;;qCACiBsQ,K,EAAO;AACtB,aAAO,KAAKzF,MAAL,CAAYyF,KAAZ,EAAmBiB,GAAnB,EAAP;AACD;;AAED;AACA;;;;+BACWhR,G,EAAK;AACd,UAAMgU,QAAQ5J,OAAOC,MAAP,CAAchL,MAAd,CAAd;;AAEA,UAAI4U,YAAJ;AACA,UAAIC,aAAJ;;AAEA,WAAKD,MAAM,CAAX,EAAcA,MAAMD,MAAMxP,MAA1B,EAAkCyP,KAAlC,EAAyC;AACvCC,eAAOF,MAAMC,GAAN,CAAP;AACA,YAAI,KAAK3J,MAAL,CAAY4J,IAAZ,EAAkBvJ,SAAlB,CAA4B3K,GAA5B,CAAJ,EAAsC;AACpC,iBAAOkU,IAAP;AACD;AACF;;AAED,aAAO,IAAP;AACD;;AAED;AACA;;;;6BACSpJ,I,EAAM;AACb,UAAM6B,WAAW7B,KAAK0B,OAAL,EAAjB;;AAEA,UAAI+D,gBAAJ;AACA,WAAKG,QAAL,CAAc/D,QAAd,EAAwB,UAACgE,UAAD,EAAgB;AACtCJ,kBAAUI,UAAV;AACA,eAAO,CAACJ,OAAR;AACD,OAHD;;AAKA,UAAI,CAACA,OAAL,EAAc;AAAE,eAAO,KAAP;AAAe;;AAE/B,WAAK4D,YAAL;;AAEA,WAAKC,kBAAL,CAAwBzH,SAASnC,SAAjC,EAA4CmC,SAASC,IAArD,EAA2DD,SAAS0H,aAApE,EAAmF1H,SAASE,EAA5F;AACA,UAAMyH,QAAQ,KAAKvF,IAAL,CAAUlM,cAAV,EAAd;AACA,UAAIyR,UAAU,IAAd,EAAoB;AAAE,aAAKjF,SAAL,IAAkBZ,cAAc6F,KAAd,CAAlB;AAAyC;AAC/D,WAAKvF,IAAL,GAAY,IAAIlR,QAAJ,EAAZ;;AAEA,WAAK0W,YAAL,CAAkB5H,SAASC,IAA3B,EAAiCD,SAASE,EAA1C,EAA8CF,SAASuH,IAAvD;;AAEA,WAAK5K,SAAL,CAAe7I,IAAf,CAAoBqK,IAApB;AACA,WAAK0J,QAAL;;AAEA,aAAO,IAAP;AACD;;AAED;AACA;AACA;AACA;;;;6BACS7H,Q,EAAUzI,E,EAAI;AACrB,UAAIyI,SAAS0H,aAAb,EAA4B;AAC1B,aAAKI,YAAL,CAAkB9H,SAASE,EAA3B,EAA+B,KAAKiD,GAApC,EAAyCnD,SAAS0H,aAAlD;AACD;;AAED,UAAI1H,SAAS+H,OAAb,EAAsB;AACpB,aAAKD,YAAL,CAAkB9H,SAASC,IAA3B,EAAiC,KAAK7D,IAAtC,EAA4C1J,OAAON,KAAnD;AACD,OAFD,MAEO;AACL,aAAK4V,SAAL,CAAehI,SAASC,IAAxB,EAA8BD,SAASE,EAAvC,EAA2C,KAAK9D,IAAhD,EAAsD4D,SAASnC,SAA/D;AACD;;AAED,UAAMoK,OAAO1Q,GAAG,KAAKyM,UAAL,CAAgBhE,QAAhB,CAAH,CAAb;AACA,UAAI,CAACiI,IAAL,EAAW;AAAE;AAAS;;AAEtB,UAAIjI,SAAS+H,OAAb,EAAsB;AACpB,aAAKG,UAAL,CAAgBlI,SAASC,IAAzB,EAA+B,KAAK7D,IAApC,EAA0C1J,OAAON,KAAjD;AACD,OAFD,MAEO;AACL,aAAK4V,SAAL,CAAehI,SAASE,EAAxB,EAA4BF,SAASC,IAArC,EAA2C,KAAK7D,IAAhD,EAAsD4D,SAASnC,SAA/D;AACD;;AAED,UAAImC,SAAS0H,aAAb,EAA4B;AAC1B,aAAKQ,UAAL,CAAgBlI,SAASE,EAAzB,EAA6B,KAAKiD,GAAlC,EAAuCnD,SAAS0H,aAAhD;AACD;AACF;;AAED;AACA;;;;+BACW1H,Q,EAAU;AACnB,UAAIA,SAASmI,QAAb,EAAuB;AACrB,eAAO,KAAKC,aAAL,CAAmBpI,SAASC,IAA5B,EAAkCD,SAASuH,IAA3C,CAAP;AACD,OAFD,MAEO;AACL,eAAO,CAAC,KAAKpL,OAAL,CAAa,KAAKC,IAAlB,CAAR;AACD;AACF;;;kCAEa/I,G,EAAKgV,U,EAAY;AAC7B,UAAM3U,MAAM2U,eAAezG,UAAUwF,SAAzB,GAAqC,CAArC,GAAyC,CAAC,CAAtD;AACA,UAAInQ,QAAQ,CAAZ;;AAEA,aAAOA,SAAS,CAAhB,EAAmB;AACjB,YAAI,KAAKqR,UAAL,CAAgBjV,GAAhB,EAAqB,KAAK+I,IAA1B,CAAJ,EAAqC;AAAE,iBAAO,KAAP;AAAe;AACtDnF;AACA5D,eAAOK,GAAP;AACD;;AAED,aAAO,IAAP;AACD;;AAED;;;;4BACQ0P,K,EAAO;AACb,UAAMqD,UAAU,KAAKvC,gBAAL,CAAsBd,KAAtB,EAA6B1Q,OAAOD,KAApC,EAA2CyD,cAA3C,EAAhB;AACA;AACA,UAAIuQ,YAAY,IAAhB,EAAsB;AACpB9O,gBAAQC,GAAR,CAAY,SAAZ;AACAD,gBAAQC,GAAR,CAAY,KAAK+E,SAAL,CAAeiD,GAAf,CAAmB,UAACzB,IAAD;AAAA,iBAAUA,KAAK9C,GAAf;AAAA,SAAnB,CAAZ;AACD;AACD,aAAO,KAAKiN,UAAL,CAAgB7B,OAAhB,EAAyBrD,KAAzB,CAAP;AACD;;AAGD;;;;+BACW/P,G,EAAK+P,K,EAAO;AACrB,UAAMvN,QAAQ3E,SAAS0C,OAAT,CAAiBP,GAAjB,CAAd;AACA,UAAMuC,WAAW,KAAKwO,WAAL,EAAjB;AACA,UAAMmE,WAAW,KAAK1F,aAAL,CAAmBO,KAAnB,CAAjB;AACA,UAAMoF,QAAQ,KAAKtE,gBAAL,CAAsBqE,QAAtB,EAAgC7V,OAAON,KAAvC,CAAd;;AAEA,UAAMqW,UAAU,KAAKvE,gBAAL,CAAsBqE,QAAtB,EAAgC7V,OAAOF,MAAvC,CAAhB;AACA,aAAQ,CAACN,OAAOQ,OAAON,KAAd,EAAqByS,WAArB,CAAiC0D,QAAjC,EAA2CC,KAA3C,EAAkD3S,KAAlD,EAAyDI,MAAzD,EAAD,IACA,CAAC/D,OAAOQ,OAAON,KAAd,EAAqB2S,YAArB,CAAkCwD,QAAlC,EAA4CC,KAA5C,EAAmD3S,KAAnD,EAA0DI,MAA1D,EADD,IAEA,CAAC/D,OAAOQ,OAAOL,OAAd,EAAuB6B,KAAvB,CAA6Bb,GAA7B,EAAkC,KAAK6Q,gBAAL,CAAsBqE,QAAtB,EAAgC7V,OAAOL,OAAvC,CAAlC,EAAmF4D,MAAnF,EAFD,IAGA,CAAC/D,OAAOQ,OAAOJ,OAAd,EAAuB4B,KAAvB,CAA6Bb,GAA7B,EAAkCuC,QAAlC,EAA4C,KAAKsO,gBAAL,CAAsBqE,QAAtB,EAAgC7V,OAAOJ,OAAvC,EAAgDqB,EAAhD,CAAmD8U,OAAnD,CAA5C,EAAyGxS,MAAzG,EAHD,IAIA,CAAC/D,OAAOQ,OAAOH,KAAd,EAAqB2B,KAArB,CAA2Bb,GAA3B,EAAgCuC,QAAhC,EAA0C,KAAKsO,gBAAL,CAAsBqE,QAAtB,EAAgC7V,OAAOH,KAAvC,EAA8CoB,EAA9C,CAAiD8U,OAAjD,CAA1C,EAAqGxS,MAArG,EAJD,IAKA,CAAC/D,OAAOQ,OAAOD,KAAd,EAAqByB,KAArB,CAA2Bb,GAA3B,EAAgC,KAAK6Q,gBAAL,CAAsBqE,QAAtB,EAAgC7V,OAAOD,KAAvC,CAAhC,EAA+EwD,MAA/E,EALT;AAMD;;AAED;;;;qCACiB;AACf,UAAMyS,WAAW,KAAK/L,SAAL,CAAegM,GAAf,EAAjB;AACA,UAAI,CAACD,QAAL,EAAe;AAAE,eAAO,KAAP;AAAe;AAChC,WAAKb,QAAL;AACA,UAAM7H,WAAW0I,SAAS7I,OAAT,EAAjB;;AAEA,WAAK+I,eAAL,CAAqB5I,SAASC,IAA9B,EAAoCD,SAASE,EAA7C,EAAiDF,SAASuH,IAA1D;;AAEA,UAAMsB,YAAY,KAAKxG,UAAL,CAAgBsG,GAAhB,EAAlB;AACA,WAAKvG,IAAL,GAAYyG,UAAUzG,IAAtB;AACA,WAAKD,YAAL,GAAoB0G,UAAU1G,YAA9B;AACA,WAAKO,SAAL,GAAiBmG,UAAUnG,SAA3B;;AAEA,UAAI1C,SAAS+H,OAAb,EAAsB;AACpB,aAAKG,UAAL,CAAgBlI,SAASC,IAAzB,EAA+B,KAAK7D,IAApC,EAA0C1J,OAAON,KAAjD;AACD,OAFD,MAEO;AACL,aAAK4V,SAAL,CAAehI,SAASE,EAAxB,EAA4BF,SAASC,IAArC,EAA2C,KAAK7D,IAAhD,EAAsD4D,SAASnC,SAA/D;AACD;;AAGD,UAAImC,SAAS0H,aAAb,EAA4B;AAC1B,aAAKQ,UAAL,CAAgBlI,SAASE,EAAzB,EAA6B,KAAKiD,GAAlC,EAAuCnD,SAAS0H,aAAhD;AACD;;AAED,aAAO,IAAP;AACD;;;sCAEiBtE,K,EAAO1P,G,EAAK;AAC5B,UAAIoV,iBAAiB,CAArB;AACA,UAAI1F,UAAUzQ,OAAOG,KAArB,EAA4B;AAAEgW,0BAAkB,CAAlB;AAAsB;AACpD,UAAIpV,QAAQzB,KAAK8C,IAAjB,EAAuB;AAAE+T,0BAAkB,CAAlB;AAAsB;;AAE/C,UAAIC,kBAAkB,KAAKD,cAA3B;AACA,UAAIC,kBAAkB,KAAK5G,YAA3B,EAAyC;AACvC,aAAKA,YAAL,GAAoB,CAAC,KAAKA,YAAL,GAAqB,CAAC4G,eAAvB,MAA6C,CAAjE;AACA,aAAKrG,SAAL,IAAkBX,eAAe+G,cAAf,CAAlB;AACD;AACF;;AAED;AACA;;;;uCACmBjL,S,EAAWoC,I,EAAMyH,a,EAAexH,E,EAAI;AACrD,UAAM6G,mBAAmB,KAAKC,eAAL,CAAqB,KAAK5K,IAA1B,CAAzB;AACA,UAAI1I,YAAJ;AACA,UAAImK,cAAcnL,OAAOD,KAArB,IAA8BsU,gBAAlC,EAAoD;AAClD,aAAKiC,iBAAL,CAAuB,KAAK5M,IAA5B,EAAkCnK,KAAK8C,IAAvC;AACA,aAAKiU,iBAAL,CAAuB,KAAK5M,IAA5B,EAAkCnK,KAAKiD,IAAvC;AACD,OAHD,MAGO,IAAI2I,cAAcnL,OAAOH,KAArB,IAA8BwU,gBAAlC,EAAoD;AACzDrT,cAAMuM,OAAO/N,OAAOQ,OAAOD,KAAd,EAAqBwU,QAArB,CAA8B,KAAK7K,IAAnC,CAAP,GAAkDnK,KAAK8C,IAAvD,GAA8D9C,KAAKiD,IAAzE;AACA,aAAK8T,iBAAL,CAAuB,KAAK5M,IAA5B,EAAkC1I,GAAlC;AACD;;AAED,UAAIgU,kBAAkBhV,OAAOH,KAAzB,IAAkC,KAAKyU,eAAL,CAAqB,KAAK7D,GAA1B,CAAtC,EAAsE;AACpEzP,cAAMwM,KAAKhO,OAAOQ,OAAOD,KAAd,EAAqBwU,QAArB,CAA8B,KAAK9D,GAAnC,CAAL,GAA+ClR,KAAK8C,IAApD,GAA2D9C,KAAKiD,IAAtE;AACA,aAAK8T,iBAAL,CAAuB,KAAK7F,GAA5B,EAAiCzP,GAAjC;AACD;AACF;;AAED;AACA;;;;mCACe;AACb,UAAMuV,QAAQ,EAAE7G,MAAM,KAAKA,IAAb;AACED,sBAAc,KAAKA,YADrB;AAEEO,mBAAW,KAAKA;AAFlB,OAAd;AAIA,WAAKL,UAAL,CAAgBvO,IAAhB,CAAqBmV,KAArB;AACD;;AAED;;;;iCACahJ,I,EAAMC,E,EAAIqH,I,EAAM;AAC3B,cAAOA,IAAP;AACE,aAAK3F,UAAU6D,MAAf;AACE;AACF,aAAK7D,UAAUyD,SAAf;AACE,cAAIsC,QAAQzH,KAAM,CAAChO,OAAOQ,OAAON,KAAd,EAAqBY,IAArB,CAA0B,KAAKoJ,IAA/B,CAAD,GAAwC,CAA1D;AACA,eAAKgG,IAAL,GAAYlR,SAAS0C,OAAT,CAAiB+T,KAAjB,CAAZ;AACA,eAAKjF,SAAL,IAAkBZ,cAAc6F,KAAd,CAAlB;AACA;AACF,aAAK/F,UAAUwF,SAAf;AACE,eAAKY,SAAL,CAAe/H,OAAO,CAAtB,EAAyBA,OAAO,CAAhC,EAAmC,KAAK7D,IAAxC,EAA8C1J,OAAOH,KAArD;AACA;AACF,aAAKqP,UAAUuF,UAAf;AACE,eAAKa,SAAL,CAAe/H,OAAO,CAAtB,EAAyBA,OAAO,CAAhC,EAAmC,KAAK7D,IAAxC,EAA8C1J,OAAOH,KAArD;AACA;AACF,aAAKqP,UAAU0D,OAAf;AACE,cAAI4D,cAAchJ,KAAMhO,OAAOQ,OAAON,KAAd,EAAqBY,IAArB,CAA0B,KAAKoJ,IAA/B,IAAuC,CAA/D;AACA,eAAK0L,YAAL,CAAkBoB,WAAlB,EAA+B,KAAK/F,GAApC,EAAyCzQ,OAAON,KAAhD;AACA;AACF,aAAKwP,UAAU8D,MAAf;AACE,eAAKwC,UAAL,CAAgBhI,EAAhB,EAAoB,KAAK9D,IAAzB,EAA+B1J,OAAOL,OAAtC;AACA;AACF,aAAKuP,UAAU+D,MAAf;AACE,eAAKuC,UAAL,CAAgBhI,EAAhB,EAAoB,KAAK9D,IAAzB,EAA+B1J,OAAOJ,OAAtC;AACA;AACF,aAAKsP,UAAUgE,MAAf;AACE,eAAKsC,UAAL,CAAgBhI,EAAhB,EAAoB,KAAK9D,IAAzB,EAA+B1J,OAAOH,KAAtC;AACA;AACF,aAAKqP,UAAUiE,MAAf;AACE,eAAKqC,UAAL,CAAgBhI,EAAhB,EAAoB,KAAK9D,IAAzB,EAA+B1J,OAAOF,MAAtC;AACA;AA7BJ;AA+BD;;AAED;;;;oCACgByN,I,EAAMC,E,EAAIqH,I,EAAM;AAC9B,cAAOA,IAAP;AACE,aAAK3F,UAAU6D,MAAf;AACA,aAAK7D,UAAUyD,SAAf;AACE;AACF,aAAKzD,UAAUwF,SAAf;AACE,eAAKY,SAAL,CAAe/H,OAAO,CAAtB,EAAyBA,OAAO,CAAhC,EAAmC,KAAK7D,IAAxC,EAA8C1J,OAAOH,KAArD;AACA;AACF,aAAKqP,UAAUuF,UAAf;AACE,eAAKa,SAAL,CAAe/H,OAAO,CAAtB,EAAyBA,OAAO,CAAhC,EAAmC,KAAK7D,IAAxC,EAA8C1J,OAAOH,KAArD;AACA;AACF,aAAKqP,UAAU0D,OAAf;AACE,cAAI4D,cAAchJ,KAAMhO,OAAOQ,OAAON,KAAd,EAAqBY,IAArB,CAA0B,KAAKoJ,IAA/B,IAAuC,CAA/D;AACA,eAAK8L,UAAL,CAAgBgB,WAAhB,EAA6B,KAAK/F,GAAlC,EAAuCzQ,OAAON,KAA9C;AACA;AACF,aAAKwP,UAAU8D,MAAf;AACE,eAAKoC,YAAL,CAAkB5H,EAAlB,EAAsB,KAAK9D,IAA3B,EAAiC1J,OAAOL,OAAxC;AACA;AACF,aAAKuP,UAAU+D,MAAf;AACE,eAAKmC,YAAL,CAAkB5H,EAAlB,EAAsB,KAAK9D,IAA3B,EAAiC1J,OAAOJ,OAAxC;AACA;AACF,aAAKsP,UAAUgE,MAAf;AACE,eAAKkC,YAAL,CAAkB5H,EAAlB,EAAsB,KAAK9D,IAA3B,EAAiC1J,OAAOH,KAAxC;AACA;AACF,aAAKqP,UAAUiE,MAAf;AACE,eAAKiC,YAAL,CAAkB5H,EAAlB,EAAsB,KAAK9D,IAA3B,EAAiC1J,OAAOF,MAAxC;AACA;AAzBJ;AA2BD;;AAED;;;;8BACUyN,I,EAAMC,E,EAAIkD,K,EAAOvF,S,EAAW;AACpC,WAAKiK,YAAL,CAAkB7H,IAAlB,EAAwBmD,KAAxB,EAA+BvF,SAA/B;AACA,WAAKqK,UAAL,CAAgBhI,EAAhB,EAAoBkD,KAApB,EAA2BvF,SAA3B;AACD;;AAED;;;;+BACWxK,G,EAAK+P,K,EAAOvF,S,EAAW;AAChC,WAAKF,MAAL,CAAYyF,KAAZ,EAAmBtL,MAAnB,CAA0BzE,GAA1B;AACA,WAAKsK,MAAL,CAAYE,SAAZ,EAAuB/F,MAAvB,CAA8BzE,GAA9B;AACA,WAAKiP,eAAL,CAAqBjP,GAArB,IAA4BwK,SAA5B;AACA,WAAK2E,QAAL,IAAiBX,iBAAiBxO,GAAjB,EAAsBwK,SAAtB,EAAiCuF,KAAjC,CAAjB;AACD;;AAED;;;;iCACa/P,G,EAAK+P,K,EAAOvF,S,EAAW;AAClC,WAAKF,MAAL,CAAYyF,KAAZ,EAAmB+F,QAAnB,CAA4B9V,GAA5B;AACA,WAAKsK,MAAL,CAAYE,SAAZ,EAAuBsL,QAAvB,CAAgC9V,GAAhC;AACA,WAAKiP,eAAL,CAAqBjP,GAArB,IAA4B,IAA5B;AACA,WAAKmP,QAAL,IAAiBX,iBAAiBxO,GAAjB,EAAsBwK,SAAtB,EAAiCuF,KAAjC,CAAjB;AACD;;AAED;;;;yCACqB;AACnB,aAAO,KAAKlH,mBAAL,MAA8B,KAAKD,qBAAL,EAArC;AACD;;;4CAEuB;AACtB,UAAMmN,cAAc,KAAKzM,SAAL,CAAe9E,MAAf,GAAwB,CAA5C;AACA,UAAIuR,cAAc,CAAlB,EAAqB;AACnB,eAAO,KAAP;AACD;;AAED,aAAQ,KAAKzM,SAAL,CAAeyM,WAAf,MACA,KAAKzM,SAAL,CAAeyM,cAAc,CAA7B,CADA,KAEA,KAAKzM,SAAL,CAAeyM,cAAc,CAA7B,CAFD,IAGC,KAAKzM,SAAL,CAAeyM,cAAc,CAA7B,MACC,KAAKzM,SAAL,CAAeyM,cAAc,CAA7B,CADD,KAEC,KAAKzM,SAAL,CAAeyM,cAAc,CAA7B,CALT;AAMD;;;0CAEqB;AACpB,aAAO,KAAKzM,SAAL,CAAe9E,MAAf,IAAyB,GAAhC;AACD;;AAED;;;;sCACkB;AAAA;;AAChB4F,aAAO6C,IAAP,CAAY,KAAK3C,MAAjB,EAAyB3F,OAAzB,CAAiC,UAACqR,SAAD,EAAe;AAC9C1R,gBAAQC,GAAR,CAAYyR,SAAZ;AACA,eAAK1L,MAAL,CAAY0L,SAAZ,EAAuBC,MAAvB;AACD,OAHD;AAID;;;kCAEa;AACZ,aAAOrH,iBAAiB,KAAKtE,MAAtB,CAAP;AACD;;AAGD;;;;qCACiB;AACf,UAAM4L,WAAWtH,iBAAiB,KAAKtE,MAAtB,CAAjB;;AAEA,UAAItK,YAAJ;AACA,UAAImW,SAAS,EAAb;AACA7R,cAAQC,GAAR,CAAY,IAAZ;AACA,WAAKvE,MAAM,EAAX,EAAeA,OAAO,CAAtB,EAAyBA,KAAzB,EAAgC;AAC9BmW,iBAASD,SAASlW,GAAT,IAAgBmW,MAAzB;AACA,YAAInW,MAAM,CAAN,KAAY,CAAhB,EAAmB;AACjBsE,kBAAQC,GAAR,CAAY4R,MAAZ;AACAA,mBAAS,EAAT;AACD;AACF;AACD7R,cAAQC,GAAR,CAAY,IAAZ;AACD;;;;;;AAGHvG,OAAOC,OAAP,GAAiBsI,QAAjB,C;;;;;;;;;ACroBA,SAASzC,UAAT,CAAoBsS,GAApB,EAAyB;AACxBA,SAAQA,QAAQ,CAAT,GAAc,UAArB;AACAA,QAAM,CAACA,MAAM,UAAP,KAAuBA,QAAQ,CAAT,GAAc,UAApC,CAAN;AACA,SAAQ,CAACA,OAAOA,QAAQ,CAAf,IAAoB,SAArB,IAAkC,SAAnC,KAAkD,EAAzD;AACA;;AAED,SAASrS,gBAAT,CAA0BqS,GAA1B,EAA+B;AAC7B,SAAOtS,WAAW,CAACsS,MAAM,CAACA,GAAR,IAAe,CAA1B,CAAP;AACD;;AAED,SAASC,gBAAT,CAA0BxO,GAA1B,EAA+B;AAC7B,MAAI9H,MAAM,EAAV;AACA,MAAIqW,YAAJ;AACA,OAAKA,MAAM,CAAX,EAAcA,OAAOvO,GAArB,EAA0BuO,KAA1B,EAAiC;AAC/BrW,QAAIqW,GAAJ,IAAWlV,KAAKC,KAAL,CAAWD,KAAKoV,IAAL,CAAUF,GAAV,CAAX,CAAX;AACD;;AAED,SAAOrW,GAAP;AACD;;AAED,IAAMwW,kBAAkBF,iBAAiB,GAAjB,CAAxB;;AAEA,SAASpS,gBAAT,CAA0BmS,GAA1B,EAA+B;AAC7B,MAAIrW,MAAM,CAAV;AACA,MAAIqW,MAAM,MAAV,EAAkB;AAChBA,aAAS,EAAT;AACArW,WAAO,EAAP;AACD;;AAED,MAAIqW,MAAM,IAAV,EAAgB;AACdA,aAAS,CAAT;AACArW,WAAO,CAAP;AACD;;AAED,SAAOA,MAAMwW,gBAAgBH,GAAhB,CAAb;AACD;;AAED,SAASjS,kBAAT,CAA4BiS,GAA5B,EAAiC;AAC/B,SAAQA,MAAOA,MAAM,CAArB;AACD;;AAEDpY,OAAOC,OAAP,GAAiB;AACf6F,wBADe;AAEfC,oCAFe;AAGfE,oCAHe;AAIfE;AAJe,CAAjB,C;;;;;;;;;ACzCA,IAAMtG,WAAWC,mBAAOA,CAAC,CAAR,CAAjB;;AAEA;AACA;;AAEA,IAAM0Y,aAAa,IAAI3Y,QAAJ,GAAemT,GAAf,EAAnB;;AAEA,IAAM3P,OAAO,YAAW;AACtB,MAAIP,SAAS,CAAb;AACA,MAAI2V,OAAO,EAAX;AACA,SAAO3V,SAAS,CAAhB,EAAmB;AACjB2V,SAAKhW,IAAL,CAAU5C,SAAS6Y,OAAT,CAAiB5V,MAAjB,CAAV;AACAA;AACD;;AAED,SAAO2V,IAAP;AACD,CATY,EAAb;;AAYA,IAAM9U,OAAO,YAAW;AACtB,MAAIZ,SAAS,CAAb;AACA,MAAI4V,OAAO,EAAX;AACA,SAAO5V,SAAS,CAAhB,EAAmB;AACjB4V,SAAKlW,IAAL,CAAU5C,SAAS+Y,OAAT,CAAiB7V,MAAjB,CAAV;AACAA;AACD;;AAED,SAAO4V,IAAP;AACD,CATY,EAAb;;AAYA,IAAM3U,QAAQ,YAAW;AACvB,MAAM6U,QAAQ,EAAd;AACA,MAAI7W,MAAM,EAAV;;AAEA,SAAOA,OAAO,CAAd,EAAiB;AACf6W,UAAMpW,IAAN,CAAW5C,SAASiZ,cAAT,CAAwB9W,GAAxB,CAAX;AACAA,WAAO,CAAP;AACD;;AAEDA,QAAM,CAAN;;AAEA,SAAOA,MAAM,CAAb,EAAgB;AACd6W,UAAMpW,IAAN,CAAW5C,SAASiZ,cAAT,CAAwB9W,GAAxB,CAAX;AACAA;AACD;;AAED,SAAO6W,KAAP;AACD,CAjBa,EAAd;;AAoBA,IAAM1U,aAAa,YAAW;AAC5B,MAAM4U,YAAY,EAAlB;AACA,MAAI/W,MAAM,CAAV;;AAEA,SAAOA,MAAM,CAAb,EAAgB;AACd+W,cAAUtW,IAAV,CAAe5C,SAASmZ,aAAT,CAAuBhX,GAAvB,CAAf;AACAA;AACD;;AAEDA,QAAM,EAAN;AACA,SAAOA,MAAM,EAAb,EAAiB;AACf+W,cAAUtW,IAAV,CAAe5C,SAASmZ,aAAT,CAAuBhX,GAAvB,CAAf;AACAA,WAAO,CAAP;AACD;;AAED,SAAO+W,SAAP;AACD,CAhBkB,EAAnB;;AAkBA,IAAMxV,eAAe,YAAW;AAC9B,MAAMxB,MAAM,EAAZ;AACA,MAAIkX,KAAKT,UAAT;AACA,MAAIvC,MAAM,CAAV;;AAEA,SAAOA,OAAO,CAAd,EAAiB;AACfgD,SAAKA,GAAGlU,GAAH,CAAOpB,KAAKsS,GAAL,CAAP,CAAL;AACAlU,QAAIU,IAAJ,CAASwW,EAAT;AACAhD;AACD;;AAED,SAAOlU,GAAP;AACD,CAZoB,EAArB;;AAcA,IAAM0B,eAAe,YAAW;AAC9B,MAAM1B,MAAM,EAAZ;AACA,MAAIkX,KAAK,IAAIpZ,QAAJ,EAAT;AACA,MAAIoW,MAAM,CAAV;;AAEA,SAAOA,OAAO,CAAd,EAAiB;AACflU,QAAIU,IAAJ,CAASwW,EAAT;AACAA,SAAKA,GAAG3W,EAAH,CAAMqB,KAAKsS,GAAL,CAAN,CAAL;AACAA;AACD;;AAED,SAAOlU,GAAP;AACD,CAZoB,EAArB;;AAcA,IAAM6B,cAAc,YAAW;AAC7B,MAAM7B,MAAM,EAAZ;AACA,MAAIkX,KAAKT,UAAT;AACA,MAAIvC,MAAM,CAAV;;AAEA,SAAOA,OAAO,CAAd,EAAiB;AACfgD,SAAKA,GAAGlU,GAAH,CAAO1B,KAAK4S,GAAL,CAAP,CAAL;AACAlU,QAAIU,IAAJ,CAASwW,EAAT;AACAhD;AACD;;AAED,SAAOlU,GAAP;AACD,CAZmB,EAApB;;AAcA,IAAM+B,cAAc,YAAW;AAC7B,MAAM/B,MAAM,EAAZ;AACA,MAAIkX,KAAK,IAAIpZ,QAAJ,EAAT;AACA,MAAIoW,MAAM,CAAV;;AAEA,SAAOA,OAAO,CAAd,EAAiB;AACflU,QAAIU,IAAJ,CAASwW,EAAT;AACAA,SAAKA,GAAG3W,EAAH,CAAMe,KAAK4S,GAAL,CAAN,CAAL;AACAA;AACD;;AAED,SAAOlU,GAAP;AACD,CAZmB,EAApB;;AAcA/B,OAAOC,OAAP,GAAiB;AACfuY,wBADe;AAEfnV,YAFe;AAGfM,YAHe;AAIfK,cAJe;AAKfG,wBALe;AAMfZ,4BANe;AAOfE,4BAPe;AAQfG,0BARe;AASfE;AATe,CAAjB,C;;;;;;;;;;;;;eC7HkBhE,mBAAOA,CAAC,EAAR,C;IAAVgB,K,YAAAA,K;;IAEFwP,I;AACJ,gBAAY1B,IAAZ,EAAkBC,EAAlB,EAAsBqH,IAAtB,EAA4BgD,KAA5B,EAAmC3L,SAAnC,EAA8C;AAAA;;AAC5C,SAAKvD,GAAL,GAAa,CAACkM,OAAO,GAAR,KAAgB,EAAjB,KAAyB,CAA1B,GACE,CAAC,CAAC3I,aAAa,CAAd,IAAmB,GAApB,KAA4B,EAA7B,KAAqC,CADtC,GAEE,CAAC2L,QAAQ,GAAT,KAAiB,EAAlB,KAA0B,CAF3B,GAGE,CAACtK,OAAO,IAAR,KAAiB,CAAlB,KAAyB,CAH1B,GAIC,CAACC,KAAK,IAAN,MAAgB,CAAjB,KAAwB,CAJnC;AAKD;;AAED;;;;;8BAOU;AACR,aAAO;AACLD,cAAM,KAAKxB,OAAL,EADD;AAELyB,YAAI,KAAKxB,KAAL,EAFC;AAGL6I,cAAM,KAAKiD,OAAL,EAHD;AAIL3M,mBAAW,KAAK4M,QAAL,EAJN;AAKL/C,uBAAe,KAAK/I,YAAL,EALV;AAMLoJ,iBAAS,KAAKA,OAAL,EANJ;AAOLI,kBAAU,KAAKA,QAAL;AAPL,OAAP;AASD;;;8BAES;AACR,aAAQ,KAAK9M,GAAL,KAAa,CAAd,GAAmB,IAA1B;AACD;;;4BAEO;AACN,aAAO,KAAKA,GAAL,GAAW,IAAlB;AACD;;;+BAEU;AACT,aAAQ,KAAKA,GAAL,KAAa,EAAd,GAAoB,GAA3B;AACD;;;mCAEc;AACb,aAAQ,KAAKA,GAAL,KAAa,EAAd,GAAoB,GAA3B;AACD;;;8BAES;AACR,aAAO,KAAKA,GAAL,KAAa,EAApB;AACD;;;8BAES;AACR,aAAO,CAAClJ,MAAMuT,MAAP,EAAevT,MAAMwT,MAArB,EACCxT,MAAMyT,MADP,EACezT,MAAM0T,MADrB,EAC6BtE,QAD7B,CACsC,KAAKiJ,OAAL,EADtC,CAAP;AAED;;;+BAEU;AACT,aAAO,CAACrY,MAAMiV,SAAP,EAAkBjV,MAAMgV,UAAxB,EAAoC5F,QAApC,CAA6C,KAAKiJ,OAAL,EAA7C,CAAP;AACD;;;4BA7CcnP,G,EAAK;AAClB,UAAMwL,UAAU,IAAIlF,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,CAAhB;AACAkF,cAAQxL,GAAR,GAAcA,GAAd;AACA,aAAOwL,OAAP;AACD;;;;;;AA4CHxV,OAAOC,OAAP,GAAiB,EAAEqQ,UAAF,EAAQC,WAAWzP,KAAnB,EAAjB,C;;;;;;;;;AC5DA;AACA;;AAEA,IAAMuY,WAAW,CAAC,QAAD,EAAW,WAAX,EACC,WADD,EACc,YADd,EAEC,SAFD,EAEY,QAFZ,EAGC,QAHD,EAGU,QAHV,EAGoB,QAHpB,CAAjB;;AAKA,IAAMvY,QAAQuY,SAAS7W,MAAT,CAAgB,UAACT,GAAD,EAAMmU,IAAN,EAAYD,GAAZ,EAAoB;AAChDlU,sBAAImU,IAAJ,IAAYD,GAAZ;AACA,yBAAOlU,GAAP;AACD,CAHa,EAGX,EAHW,CAAd;;AAKA/B,OAAOC,OAAP,GAAiB,EAAEa,YAAF,EAAjB,C;;;;;;;;;;;;;ACbA,IAAMc,WAAW9B,mBAAOA,CAAC,CAAR,CAAjB;;eACoBA,mBAAOA,CAAC,CAAR,C;IAAZI,O,YAAAA,O;;gBACWJ,mBAAOA,CAAC,CAAR,C;IAAXwB,M,aAAAA,M;;AAER,IAAMK,2CACHL,OAAOE,KADJ,EACY,CADZ,0BAEHF,OAAOG,KAFJ,EAEY,CAAC,CAFb,SAAN;;AAKA,IAAM6X,6DACHhY,OAAOE,KADJ,EACYtB,QAAQyD,IAAR,CAAa,CAAb,CADZ,gCAEHrC,OAAOG,KAFJ,EAEYvB,QAAQyD,IAAR,CAAa,CAAb,CAFZ,eAAN;;AAKA,IAAMvD,QAAQ;AACZqJ,SAAO,GADK;AAEZ8P,kBAAgB,CAChB,CADgB,EACb,CADa,EACV,CADU,EACP,CADO,EACJ,CADI,EACD,CADC,EACE,CADF,EACK,CADL,EAEhB,EAFgB,EAEZ,EAFY,EAER,EAFQ,EAEJ,EAFI,EAEA,EAFA,EAEI,EAFJ,EAEQ,EAFR,EAEY,EAFZ,EAGhB,EAHgB,EAGZ,EAHY,EAGR,EAHQ,EAGJ,EAHI,EAGA,EAHA,EAGI,EAHJ,EAGQ,EAHR,EAGY,EAHZ,EAIhB,CAJgB,EAIb,CAJa,EAIV,EAJU,EAIN,EAJM,EAIF,EAJE,EAIE,EAJF,EAIM,CAJN,EAIS,CAJT,EAKhB,CALgB,EAKb,CALa,EAKV,CALU,EAKP,EALO,EAKH,EALG,EAKC,CALD,EAKI,CALJ,EAKO,CALP,EAMhB,CANgB,EAMb,CAAC,CANY,EAMT,CAAC,EANQ,EAMJ,CANI,EAMD,CANC,EAME,CAAC,EANH,EAMO,CAAC,CANR,EAMW,CANX,EAOhB,CAPgB,EAOb,EAPa,EAOT,EAPS,EAOL,CAAC,EAPI,EAOA,CAAC,EAPD,EAOK,EAPL,EAOS,EAPT,EAOa,CAPb,EAQhB,CARgB,EAQb,CARa,EAQV,CARU,EAQP,CARO,EAQJ,CARI,EAQD,CARC,EAQE,CARF,EAQK,CARL,CAFJ;AAYZ5X,YAZY;AAaZuS,iEAAgB5S,OAAOE,KAAvB,EAA+BtB,QAAQyD,IAAR,CAAa,CAAb,CAA/B,iCACgBrC,OAAOG,KADvB,EAC+BvB,QAAQyD,IAAR,CAAa,CAAb,CAD/B,gBAbY;AAgBZ6P,eAAa,qBAACzB,KAAD,EAAQrL,SAAR,EAAmB8S,SAAnB,EAAiC;AAC5C,WAAO5X,SAAS8E,SAAT,EAAoB/E,KAAKoQ,KAAL,CAApB,EAAiC,CAACpQ,KAAKoQ,KAAL,CAAlC,EAA+CzO,GAA/C,CAAmDkW,SAAnD,CAAP;AACD,GAlBW;AAmBZ9F,gBAAc,sBAAC3B,KAAD,EAAQrL,SAAR,EAAmB8S,SAAnB,EAAiC;AAC7C,WAAO5X,SAAS8E,SAAT,EAAoB/E,KAAKoQ,KAAL,CAApB,EAAiCpQ,KAAKoQ,KAAL,CAAjC,EAA8CzO,GAA9C,CAAkDkW,SAAlD,CAAP;AACD,GArBW;AAsBZtG,cAAY,oBAACnB,KAAD,EAAQrL,SAAR,EAAmBoM,WAAnB,EAAmC;AAC7C,WAAOlR,SAAS8E,SAAT,EAAoB/E,KAAKoQ,KAAL,CAApB,EAAiC,CAAjC,EAAoCzO,GAApC,CAAwCwP,WAAxC,CAAP;AACD,GAxBW;AAyBZO,cAAY,oBAACtB,KAAD,EAAQrL,SAAR,EAAmBoM,WAAnB,EAAmC;AAC7C,QAAM2G,UAAU7X,SAAS8E,UAAUpD,GAAV,CAAcgW,WAAWvH,KAAX,CAAd,CAAT,EAA2CpQ,KAAKoQ,KAAL,CAA3C,EAAwD,CAAxD,EAA2DzO,GAA3D,CAA+DwP,WAA/D,CAAhB;AACA,WAAOlR,SAAS6X,OAAT,EAAkB9X,KAAKoQ,KAAL,CAAlB,EAA+B,CAA/B,EAAkCzO,GAAlC,CAAsCwP,WAAtC,CAAP;AACD;AA5BW,CAAd;;AA+BA9S,OAAOC,OAAP,GAAiBG,KAAjB,C;;;;;;;;;eC7CyBN,mBAAOA,CAAC,CAAR,C;IAAjB4C,Y,YAAAA,Y;;AAER,IAAMrC,SAAS;AACboJ,SAAO,GADM;AAEb8P,kBAAgB,CAChB,CAAC,EADe,EACX,CAAC,EADU,EACN,CAAC,EADK,EACD,CAAC,EADA,EACI,CAAC,EADL,EACS,CAAC,EADV,EACc,CAAC,EADf,EACmB,CAAC,EADpB,EAEhB,CAAC,EAFe,EAEX,CAAC,EAFU,EAEN,CAFM,EAEH,CAFG,EAEA,CAFA,EAEG,CAFH,EAEM,CAAC,EAFP,EAEW,CAAC,EAFZ,EAGhB,CAAC,EAHe,EAGX,CAHW,EAGR,EAHQ,EAGJ,EAHI,EAGA,EAHA,EAGI,EAHJ,EAGQ,CAHR,EAGW,CAAC,EAHZ,EAIhB,CAAC,EAJe,EAIX,CAJW,EAIR,EAJQ,EAIJ,EAJI,EAIA,EAJA,EAII,EAJJ,EAIQ,CAJR,EAIW,CAAC,EAJZ,EAKhB,CAAC,EALe,EAKX,CALW,EAKR,EALQ,EAKJ,EALI,EAKA,EALA,EAKI,EALJ,EAKQ,CALR,EAKW,CAAC,EALZ,EAMhB,CAAC,EANe,EAMX,CANW,EAMR,EANQ,EAMJ,EANI,EAMA,EANA,EAMI,EANJ,EAMQ,CANR,EAMW,CAAC,EANZ,EAOhB,CAAC,EAPe,EAOX,CAAC,EAPU,EAON,CAPM,EAOH,CAPG,EAOA,CAPA,EAOG,CAPH,EAOM,CAAC,EAPP,EAOW,CAAC,EAPZ,EAQhB,CAAC,EARe,EAQX,CAAC,EARU,EAQN,CAAC,EARK,EAQD,CAAC,EARA,EAQI,CAAC,EARL,EAQS,CAAC,EARV,EAQc,CAAC,EARf,EAQmB,CAAC,EARpB,CAFH;AAYb1W,SAAO,eAAC6F,QAAD,EAAWzD,YAAX,EAA4B;AACjC,WAAOvC,aAAagG,QAAb,EAAuBpF,GAAvB,CAA2B2B,YAA3B,CAAP;AACD;AAdY,CAAf;;AAiBAjF,OAAOC,OAAP,GAAiBI,MAAjB,C;;;;;;;;;eCnBiBP,mBAAOA,CAAC,CAAR,C;IAAToF,I,YAAAA,I;;AAER,IAAM5E,SAAS;AACbmJ,SAAO,GADM;AAEb8P,kBAAgB,CAChB,CAAC,EADe,EACX,CAAC,EADU,EACN,CAAC,EADK,EACD,CAAC,EADA,EACI,CAAC,EADL,EACS,CAAC,EADV,EACc,CAAC,EADf,EACmB,CAAC,EADpB,EAEhB,CAAC,EAFe,EAEX,CAFW,EAER,CAFQ,EAEL,CAFK,EAEF,CAFE,EAEC,CAFD,EAEI,CAFJ,EAEO,CAAC,EAFR,EAGhB,CAAC,EAHe,EAGX,CAHW,EAGR,CAHQ,EAGL,EAHK,EAGD,EAHC,EAGG,CAHH,EAGM,CAHN,EAGS,CAAC,EAHV,EAIhB,CAAC,EAJe,EAIX,CAJW,EAIR,CAJQ,EAIL,EAJK,EAID,EAJC,EAIG,CAJH,EAIM,CAJN,EAIS,CAAC,EAJV,EAKhB,CAAC,EALe,EAKX,CALW,EAKR,EALQ,EAKJ,EALI,EAKA,EALA,EAKI,EALJ,EAKQ,CALR,EAKW,CAAC,EALZ,EAMhB,CAAC,EANe,EAMX,EANW,EAMP,EANO,EAMH,EANG,EAMC,EAND,EAMK,EANL,EAMS,EANT,EAMa,CAAC,EANd,EAOhB,CAAC,EAPe,EAOX,CAPW,EAOR,CAPQ,EAOL,CAPK,EAOF,CAPE,EAOC,CAPD,EAOI,CAPJ,EAOO,CAAC,EAPR,EAQhB,CAAC,EARe,EAQX,CAAC,EARU,EAQN,CAAC,EARK,EAQD,CAAC,EARA,EAQI,CAAC,EARL,EAQS,CAAC,EARV,EAQc,CAAC,EARf,EAQmB,CAAC,EARpB,CAFH;AAYb1W,SAAO,eAAC6F,QAAD,EAAWnE,QAAX,EAAqBU,YAArB,EAAsC;AAC3C,WAAOC,KAAKwD,QAAL,EAAenE,QAAf,EAAyBU,YAAzB,CAAP;AACD;AAdY,CAAf;;AAiBAjF,OAAOC,OAAP,GAAiBK,MAAjB,C;;;;;;;;;eCnBsBR,mBAAOA,CAAC,CAAR,C;IAAdkF,S,YAAAA,S;;AAER,IAAMzE,OAAO;AACXkJ,SAAO,GADI;AAEX8P,kBAAgB,CAChB,CADgB,EACb,CADa,EACV,CADU,EACP,CADO,EACJ,CADI,EACD,CADC,EACE,CADF,EACK,CADL,EAEhB,CAFgB,EAEb,EAFa,EAET,EAFS,EAEL,EAFK,EAED,EAFC,EAEG,EAFH,EAEO,EAFP,EAEW,CAFX,EAGhB,CAAC,CAHe,EAGZ,CAHY,EAGT,CAHS,EAGN,CAHM,EAGH,CAHG,EAGA,CAHA,EAGG,CAHH,EAGM,CAAC,CAHP,EAIhB,CAAC,CAJe,EAIZ,CAJY,EAIT,CAJS,EAIN,CAJM,EAIH,CAJG,EAIA,CAJA,EAIG,CAJH,EAIM,CAAC,CAJP,EAKhB,CAAC,CALe,EAKZ,CALY,EAKT,CALS,EAKN,CALM,EAKH,CALG,EAKA,CALA,EAKG,CALH,EAKM,CAAC,CALP,EAMhB,CAAC,CANe,EAMZ,CANY,EAMT,CANS,EAMN,CANM,EAMH,CANG,EAMA,CANA,EAMG,CANH,EAMM,CAAC,CANP,EAOhB,CAAC,CAPe,EAOZ,CAPY,EAOT,CAPS,EAON,CAPM,EAOH,CAPG,EAOA,CAPA,EAOG,CAPH,EAOM,CAAC,CAPP,EAQhB,CARgB,EAQb,CARa,EAQV,CARU,EAQP,CARO,EAQJ,CARI,EAQD,CARC,EAQE,CARF,EAQK,CARL,CAFL;AAYX1W,SAAO,eAAC6F,QAAD,EAAWnE,QAAX,EAAqBU,YAArB,EAAsC;AAC3C,WAAOD,UAAU0D,QAAV,EAAoBnE,QAApB,EAA8BU,YAA9B,CAAP;AACD;AAdU,CAAb;;AAiBAjF,OAAOC,OAAP,GAAiBM,IAAjB,C;;;;;;;;;eCnB4BT,mBAAOA,CAAC,CAAR,C;IAApBoF,I,YAAAA,I;IAAMF,S,YAAAA,S;;AAEd,IAAMxE,QAAQ;AACZiJ,SAAO,IADK;AAEZ8P,kBAAgB,CAChB,CAAC,EADe,EACX,CAAC,EADU,EACN,CAAC,EADK,EACD,CAAC,CADA,EACG,CAAC,CADJ,EACO,CAAC,EADR,EACY,CAAC,EADb,EACiB,CAAC,EADlB,EAEhB,CAAC,EAFe,EAEX,CAFW,EAER,CAFQ,EAEL,CAFK,EAEF,CAFE,EAEC,CAFD,EAEI,CAFJ,EAEO,CAAC,EAFR,EAGhB,CAAC,EAHe,EAGX,CAHW,EAGR,CAHQ,EAGL,CAHK,EAGF,CAHE,EAGC,CAHD,EAGI,CAHJ,EAGO,CAAC,EAHR,EAIhB,CAAC,CAJe,EAIZ,CAJY,EAIT,CAJS,EAIN,CAJM,EAIH,CAJG,EAIA,CAJA,EAIG,CAJH,EAIM,CAAC,CAJP,EAKhB,CALgB,EAKb,CALa,EAKV,CALU,EAKP,CALO,EAKJ,CALI,EAKD,CALC,EAKE,CALF,EAKK,CAAC,CALN,EAMhB,CAAC,EANe,EAMX,CANW,EAMR,CANQ,EAML,CANK,EAMF,CANE,EAMC,CAND,EAMI,CANJ,EAMO,CAAC,EANR,EAOhB,CAAC,EAPe,EAOX,CAPW,EAOR,CAPQ,EAOL,CAPK,EAOF,CAPE,EAOC,CAPD,EAOI,CAPJ,EAOO,CAAC,EAPR,EAQhB,CAAC,EARe,EAQX,CAAC,EARU,EAQN,CAAC,EARK,EAQD,CAAC,CARA,EAQG,CAAC,CARJ,EAQO,CAAC,EARR,EAQY,CAAC,EARb,EAQiB,CAAC,EARlB,CAFJ;AAYZ1W,SAAO,eAAC6F,QAAD,EAAWnE,QAAX,EAAqBU,YAArB,EAAsC;AAC3C,WAAOC,KAAKwD,QAAL,EAAenE,QAAf,EAAyBU,YAAzB,EAAuC3C,EAAvC,CAA0C0C,UAAU0D,QAAV,EAAoBnE,QAApB,EAA8BU,YAA9B,CAA1C,CAAP;AACD;AAdW,CAAd;;AAiBAjF,OAAOC,OAAP,GAAiBO,KAAjB,C;;;;;;;;;;;;;eCnBoBV,mBAAOA,CAAC,CAAR,C;IAAZI,O,YAAAA,O;;AACR,IAAMU,OAAOd,mBAAOA,CAAC,CAAR,CAAb;;gBACoCA,mBAAOA,CAAC,CAAR,C;IAA5B6C,U,aAAAA,U;IAAYC,W,aAAAA,W;;gBACD9C,mBAAOA,CAAC,CAAR,C;IAAXwB,M,aAAAA,M;;AAER,IAAMsU,uDACHtU,OAAOG,KADJ,EACY,EADZ,8BAEHH,OAAOE,KAFJ,EAEY,CAFZ,aAAN;;AAKA,IAAMf,OAAO;AACXgJ,SAAO,KADI;AAEX8P,kBAAgB,CAChB,CAAC,EADe,EACX,CAAC,EADU,EACN,CAAC,EADK,EACD,CAAC,EADA,EACI,CAAC,EADL,EACS,CAAC,EADV,EACc,CAAC,EADf,EACmB,CAAC,EADpB,EAEhB,CAAC,EAFe,EAEX,CAAC,EAFU,EAEN,CAAC,EAFK,EAED,CAAC,EAFA,EAEI,CAAC,EAFL,EAES,CAAC,EAFV,EAEc,CAAC,EAFf,EAEmB,CAAC,EAFpB,EAGhB,CAAC,EAHe,EAGX,CAAC,EAHU,EAGN,CAAC,EAHK,EAGD,CAAC,EAHA,EAGI,CAAC,EAHL,EAGS,CAAC,EAHV,EAGc,CAAC,EAHf,EAGmB,CAAC,EAHpB,EAIhB,CAAC,EAJe,EAIX,CAAC,EAJU,EAIN,CAAC,EAJK,EAID,CAAC,EAJA,EAII,CAAC,EAJL,EAIS,CAAC,EAJV,EAIc,CAAC,EAJf,EAImB,CAAC,EAJpB,EAKhB,CAAC,EALe,EAKX,CAAC,EALU,EAKN,CAAC,EALK,EAKD,CAAC,EALA,EAKI,CAAC,EALL,EAKS,CAAC,EALV,EAKc,CAAC,EALf,EAKmB,CAAC,EALpB,EAMhB,CAAC,EANe,EAMX,CAAC,EANU,EAMN,CAAC,EANK,EAMD,CAAC,EANA,EAMI,CAAC,EANL,EAMS,CAAC,EANV,EAMc,CAAC,EANf,EAMmB,CAAC,EANpB,EAOf,EAPe,EAOX,EAPW,EAOP,CAPO,EAOJ,CAPI,EAOD,CAPC,EAOE,CAPF,EAOK,EAPL,EAOS,EAPT,EAQf,EARe,EAQX,EARW,EAQP,EARO,EAQH,CARG,EAQA,CARA,EAQG,EARH,EAQO,EARP,EAQW,EARX,CAFL;AAYX3D,oBAZW;AAaX/S,SAAO,eAAC6F,QAAD,EAAWzD,YAAX,EAA4B;AACjC,WAAOtC,WAAW+F,QAAX,EAAqBpF,GAArB,CAAyB2B,YAAzB,CAAP;AACD,GAfU;AAgBX4Q,aAAW,mBAAC9D,KAAD,EAAQ1P,GAAR,EAAayQ,WAAb,EAA6B;AACtC,QAAM4G,cAAc9W,YAAYgT,SAAS7D,KAAT,CAAZ,EAA6B1P,GAA7B,EAAkCiB,GAAlC,CAAsCwP,WAAtC,CAApB;AACA,QAAIzQ,QAAQzB,KAAK8C,IAAjB,EAAuB;AACrB,aAAOgW,YAAYC,QAAZ,OAA2B,CAAlC;AACD,KAFD,MAEO;AACL,aAAOD,YAAYC,QAAZ,OAA2B,CAAlC;AACD;AACF;AAvBU,CAAb;;AA0BA3Z,OAAOC,OAAP,GAAiBQ,IAAjB,C;;;;;;;;;eCpC4CX,mBAAOA,CAAC,CAAR,C;IAApCgB,K,YAAAA,K;IAAOQ,M,YAAAA,M;IAAQI,gB,YAAAA,gB;;AAEvB,SAASkY,aAAT,CAAuB1D,IAAvB,EAA6BnE,KAA7B,EAAoC;AAClC,MAAIA,UAAUzQ,OAAOE,KAArB,EAA4B;AAC1B,WAAOE,iBAAiBwU,IAAjB,CAAP;AACD,GAFD,MAEO,IAAInE,UAAUzQ,OAAOG,KAArB,EAA4B;AACjC,WAAOC,iBAAiBwU,IAAjB,EAAuB2D,WAAvB,EAAP;AACD,GAFM,MAEA;AACL,WAAO,GAAP;AACD;AACF;;AAED,SAASC,aAAT,CAAuBC,MAAvB,EAA+B;AAC7B,SAAOA,OAAOF,WAAP,OAAyBE,MAAzB,GAAkCzY,OAAOG,KAAzC,GAAiDH,OAAOE,KAA/D;AACD;;AAED,SAASwY,YAAT,CAAsBD,MAAtB,EAA8B;AAC5B,MAAM5N,aAAaC,OAAOC,MAAP,CAAcvL,KAAd,CAAnB;AACA,MAAI0L,kBAAJ;AACA,MAAIyJ,YAAJ;;AAEA,OAAKA,MAAM,CAAX,EAAcA,MAAM9J,WAAW3F,MAA/B,EAAuCyP,KAAvC,EAA8C;AAC5C,QAAIvU,iBAAiByK,WAAW8J,GAAX,CAAjB,MAAsC8D,OAAOE,WAAP,EAA1C,EAAgE;AAC9DzN,kBAAYL,WAAW8J,GAAX,CAAZ;AACA;AACD;AACF;;AAED,SAAOzJ,SAAP;AACD;;AAEDxM,OAAOC,OAAP,GAAiB,EAAE2Z,4BAAF,EAAiBE,4BAAjB,EAAgCE,0BAAhC,EAAjB,C;;;;;;;;;eC/BkBla,mBAAOA,CAAC,CAAR,C;IAAVgB,K,YAAAA,K;;AAER,SAASH,aAAT,CAAuBuF,EAAvB,EAA2B;AACzB,MAAIgQ,aAAJ;AACA,OAAKA,OAAOpV,MAAMC,KAAlB,EAAyBmV,QAAQpV,MAAMM,KAAvC,EAA8C8U,MAA9C,EAAsD;AACpDhQ,OAAGgQ,IAAH;AACD;AACF;;AAEDlW,OAAOC,OAAP,GAAiBU,aAAjB,C;;;;;;;;;eCTkDb,mBAAOA,CAAC,CAAR,C;IAA1CuB,M,YAAAA,M;IAAQR,M,YAAAA,M;IAAQS,M,YAAAA,M;IAAQX,a,YAAAA,a;;AAEhC;AACA;AACA;;AAEA,SAASuZ,eAAT,GAA2B;AACzB,MAAMC,WAAW,CAAC,IAAD,EAAO,KAAP,EAAcjX,KAAKC,KAAL,CAAWD,KAAKkX,MAAL,KAAgB,CAA3B,CAAd,CAAjB;AACA,MAAID,QAAJ,EAAc;AACZ,WAAOjX,KAAKC,KAAL,CAAWD,KAAKkX,MAAL,MAAiBlX,KAAKmC,GAAL,CAAS,CAAT,EAAY,EAAZ,IAAkB,CAAnC,CAAX,CAAP;AACD,GAFD,MAEO;AACL,WAAO,CAACnC,KAAKC,KAAL,CAAWD,KAAKkX,MAAL,KAAiBlX,KAAKmC,GAAL,CAAS,CAAT,EAAY,EAAZ,CAA5B,CAAR;AACD;AACF;;AAED,IAAMmL,mBAAmB,YAAW;AAClC,MAAIzO,MAAM,EAAV;AACA,MAAIC,YAAJ;AACA,MAAIqY,mBAAJ;;AAEA,MAAMC,eAAe,SAAfA,YAAe,CAAC5I,KAAD,EAAW;AAC9B3P,QAAIC,GAAJ,EAAS0P,KAAT,IAAkB,EAAlB;AACA3P,QAAIC,GAAJ,EAAS0P,KAAT,EAAgBpQ,OAAOE,KAAvB,IAAgC0Y,iBAAhC;AACAnY,QAAIC,GAAJ,EAAS0P,KAAT,EAAgBpQ,OAAOG,KAAvB,IAAgCyY,iBAAhC;AACD,GAJD;;AAMA,OAAKlY,MAAM,CAAX,EAAcA,MAAM,EAApB,EAAwBA,KAAxB,EAA+B;AAC7BD,QAAIC,GAAJ,IAAW,EAAX;AACArB,kBAAc,UAAC+Q,KAAD;AAAA,aAAW4I,aAAa5I,KAAb,CAAX;AAAA,KAAd;AACD;;AAED,SAAO3P,GAAP;AACD,CAjBwB,EAAzB;;AAmBA,IAAM0O,gBAAgB,YAAW;AAC/B,MAAI1O,MAAM,EAAV;AACA,MAAIC,YAAJ;;AAEA;AACA,OAAKA,MAAM,EAAX,EAAeA,OAAO,EAAtB,EAA0BA,KAA1B,EAAiC;AAC/BD,QAAIC,GAAJ,IAAWkY,iBAAX;AACD;;AAED,OAAKlY,MAAM,EAAX,EAAeA,OAAO,EAAtB,EAA0BA,KAA1B,EAAiC;AAC/BD,QAAIC,GAAJ,IAAWkY,iBAAX;AACD;;AAED,SAAOnY,GAAP;AACD,CAdqB,EAAtB;;AAgBA,IAAM2O,iBAAiB,YAAW;AAChC,MAAI3O,MAAM,EAAV;AACA,MAAIwY,kBAAJ;;AAEA,OAAKA,YAAY,CAAjB,EAAoBA,YAAY,CAAhC,EAAmCA,WAAnC,EAAgD;AAC9CxY,QAAIwY,SAAJ,IAAiBL,iBAAjB;AACD;;AAED,SAAOnY,GAAP;AACD,CATsB,EAAvB;;AAWA,IAAM4O,eAAe,YAAW;AAC9B,MAAM5O,MAAM,EAAZ;AACAA,MAAIT,OAAOE,KAAX,IAAoB0Y,iBAApB;AACAnY,MAAIT,OAAOG,KAAX,IAAoByY,iBAApB;;AAEA,SAAOnY,GAAP;AACD,CANoB,EAArB;;AAQA/B,OAAOC,OAAP,GAAiB,EAAEuQ,kCAAF,EAAoBC,4BAApB,EAAmCC,8BAAnC,EAAmDC,0BAAnD,EAAjB,C;;;;;;;;;eCrEsC7Q,mBAAOA,CAAC,CAAR,C;IAA9BY,S,YAAAA,S;IAAWW,M,YAAAA,M;IAAQC,M,YAAAA,M;;gBACNxB,mBAAOA,CAAC,CAAR,C;IAAbD,Q,aAAAA,Q;;AAER,IAAM2a,KAAK,GAAX;;AAEA,IAAMC,KAAK/Z,UAAUkZ,aAAV,CAAwBvY,OAAON,KAA/B,EAAsCO,OAAOE,KAA7C,CAAX;AACA,IAAMkZ,KAAKha,UAAUkZ,aAAV,CAAwBvY,OAAOL,OAA/B,EAAwCM,OAAOE,KAA/C,CAAX;AACA,IAAMmZ,KAAKja,UAAUkZ,aAAV,CAAwBvY,OAAOJ,OAA/B,EAAwCK,OAAOE,KAA/C,CAAX;AACA,IAAMoZ,KAAKla,UAAUkZ,aAAV,CAAwBvY,OAAOH,KAA/B,EAAsCI,OAAOE,KAA7C,CAAX;AACA,IAAMqZ,KAAKna,UAAUkZ,aAAV,CAAwBvY,OAAOF,MAA/B,EAAuCG,OAAOE,KAA9C,CAAX;AACA,IAAMsZ,KAAKpa,UAAUkZ,aAAV,CAAwBvY,OAAOD,KAA/B,EAAsCE,OAAOE,KAA7C,CAAX;;AAEA,IAAMuZ,KAAKra,UAAUkZ,aAAV,CAAwBvY,OAAON,KAA/B,EAAsCO,OAAOG,KAA7C,CAAX;AACA,IAAMuZ,KAAKta,UAAUkZ,aAAV,CAAwBvY,OAAOL,OAA/B,EAAwCM,OAAOG,KAA/C,CAAX;AACA,IAAMwZ,KAAKva,UAAUkZ,aAAV,CAAwBvY,OAAOJ,OAA/B,EAAwCK,OAAOG,KAA/C,CAAX;AACA,IAAMyZ,KAAKxa,UAAUkZ,aAAV,CAAwBvY,OAAOH,KAA/B,EAAsCI,OAAOG,KAA7C,CAAX;AACA,IAAM0Z,KAAKza,UAAUkZ,aAAV,CAAwBvY,OAAOF,MAA/B,EAAuCG,OAAOG,KAA9C,CAAX;AACA,IAAM2Z,KAAK1a,UAAUkZ,aAAV,CAAwBvY,OAAOD,KAA/B,EAAsCE,OAAOG,KAA7C,CAAX;;AAEA,IAAM4Z,kBAAkB,CACxBT,EADwB,EACpBF,EADoB,EAChBC,EADgB,EACZE,EADY,EACRC,EADQ,EACJH,EADI,EACAD,EADA,EACIE,EADJ,EAExBH,EAFwB,EAEpBA,EAFoB,EAEhBA,EAFgB,EAEZA,EAFY,EAERA,EAFQ,EAEJA,EAFI,EAEAA,EAFA,EAEIA,EAFJ,EAGxBD,EAHwB,EAGpBA,EAHoB,EAGhBA,EAHgB,EAGZA,EAHY,EAGRA,EAHQ,EAGJA,EAHI,EAGAA,EAHA,EAGIA,EAHJ,EAIxBA,EAJwB,EAIpBA,EAJoB,EAIhBA,EAJgB,EAIZA,EAJY,EAIRA,EAJQ,EAIJA,EAJI,EAIAA,EAJA,EAIIA,EAJJ,EAKxBA,EALwB,EAKpBA,EALoB,EAKhBA,EALgB,EAKZA,EALY,EAKRA,EALQ,EAKJA,EALI,EAKAA,EALA,EAKIA,EALJ,EAMxBA,EANwB,EAMpBA,EANoB,EAMhBA,EANgB,EAMZA,EANY,EAMRA,EANQ,EAMJA,EANI,EAMAA,EANA,EAMIA,EANJ,EAOxBO,EAPwB,EAOpBA,EAPoB,EAOhBA,EAPgB,EAOZA,EAPY,EAORA,EAPQ,EAOJA,EAPI,EAOAA,EAPA,EAOIA,EAPJ,EAQxBG,EARwB,EAQpBF,EARoB,EAQhBC,EARgB,EAQZE,EARY,EAQRC,EARQ,EAQJH,EARI,EAQAD,EARA,EAQIE,EARJ,CAAxB;;AAWA,SAASI,mBAAT,GAA+B;AAC7B,MAAMvZ,MAAM,EAAZ;;AAEA,MAAI6D,QAAQ,CAAZ;AACA,SAAOA,SAAS,EAAhB,EAAoB;AAClB7D,QAAIU,IAAJ,CAAS+X,EAAT;AACA5U;AACD;;AAED,SAAO7D,GAAP;AACD;;AAED,SAAS6O,gBAAT,CAA0BtE,MAA1B,EAAkC;AAChC,MAAMvK,MAAMuZ,qBAAZ;;AAEA,MAAMnP,aAAaC,OAAOC,MAAP,CAAchL,MAAd,CAAnB;AACA8K,aAAWxF,OAAX,CAAmB,UAACuP,IAAD,EAAU;AAC3B5J,WAAO4J,IAAP,EAAazJ,GAAb,GAAmBC,QAAnB,CAA4B,UAAC1K,GAAD,EAAS;AACnC,UAAIsK,OAAOhL,OAAOE,KAAd,EAAqBmL,SAArB,CAA+B3K,GAA/B,CAAJ,EAAyC;AACvCD,YAAIC,GAAJ,IAAWtB,UAAUkZ,aAAV,CAAwB1D,IAAxB,EAA8B5U,OAAOE,KAArC,CAAX;AACD,OAFD,MAEO;AACLO,YAAIC,GAAJ,IAAWtB,UAAUkZ,aAAV,CAAwB1D,IAAxB,EAA8B5U,OAAOG,KAArC,CAAX;AACD;AACF,KAND;AAOD,GARD;;AAUA,SAAOM,GAAP;AACD;;AAED,SAAS8O,kBAAT,GAAqD;AAAA,MAAzB0K,KAAyB,uEAAjBF,eAAiB;;AACnD,MAAM/O,SAAS,EAAf;;AAEAF,SAAOC,MAAP,CAAchL,MAAd,EAAsBsF,OAAtB,CAA8B,UAACuP,IAAD,EAAU;AACtC5J,WAAO4J,IAAP,IAAe,IAAIrW,QAAJ,EAAf;AACD,GAFD;;AAIAuM,SAAOC,MAAP,CAAc/K,MAAd,EAAsBqF,OAAtB,CAA8B,UAACoL,KAAD,EAAW;AACvCzF,WAAOyF,KAAP,IAAgB,IAAIlS,QAAJ,EAAhB;AACD,GAFD;;AAKA,MAAImC,YAAJ;AACA,MAAIkU,aAAJ;AACA,MAAInE,cAAJ;AACA,OAAK/P,MAAM,CAAX,EAAcA,MAAMuZ,MAAM/U,MAA1B,EAAkCxE,KAAlC,EAAyC;AACvC,QAAIuZ,MAAMvZ,GAAN,MAAewY,EAAnB,EAAuB;AACrBtE,aAAOxV,UAAUsZ,YAAV,CAAuBuB,MAAMvZ,GAAN,CAAvB,CAAP;AACA+P,cAAQrR,UAAUoZ,aAAV,CAAwByB,MAAMvZ,GAAN,CAAxB,CAAR;AACAsK,aAAO4J,IAAP,EAAazP,MAAb,CAAoBzE,GAApB;AACAsK,aAAOyF,KAAP,EAActL,MAAd,CAAqBzE,GAArB;AACD;AACF;;AAED,SAAOsK,MAAP;AACD;;AAEDtM,OAAOC,OAAP,GAAiB,EAAE2Q,kCAAF,EAAoBC,sCAApB,EAAjB,C;;;;;;;;;;;;;eCpF0B/Q,mBAAOA,CAAC,CAAR,C;IAFlBuB,M,YAAAA,M;IAAQR,M,YAAAA,M;IACRS,M,YAAAA,M;IAAQV,I,YAAAA,I;IACRD,a,YAAAA,a;;AACR,IAAM6a,gBAAgB1b,mBAAOA,CAAC,EAAR,CAAtB;AACA,IAAM2b,cAAc3b,mBAAOA,CAAC,EAAR,CAApB;;IAEM0I,E;AACJ,gBAAc;AAAA;;AACZ,SAAKkB,YAAL,GAAoB,IAApB;AACD;;;;oCAEeA,Y,EAAc;AAC5B,WAAKA,YAAL,GAAoBA,YAApB;AACD;;;kCAEahB,Q,EAAUqJ,K,EAAO;AAC7B,UAAI2J,QAAQ,CAAZ;AACA/a,oBAAc,UAAC6L,SAAD,EAAe;AAC3BkP,iBAAShT,SAASmK,gBAAT,CAA0Bd,KAA1B,EAAiCvF,SAAjC,EAA4CmN,QAA5C,KACA9Y,OAAO2L,SAAP,EAAkB/C,KAD3B;AAED,OAHD;;AAKA,aAAOiS,KAAP;AACD;;;wCAEmBhT,Q,EAAUqJ,K,EAAO;AACnC,UAAI2J,QAAQ,CAAZ;AACA,UAAIC,uBAAJ;AACAhb,oBAAc,UAAC6L,SAAD,EAAe;AAC3BmP,yBAAiBjT,SAASmK,gBAAT,CAA0Bd,KAA1B,EAAiCvF,SAAjC,CAAjB;AACAmP,uBAAelP,GAAf,GAAqBC,QAArB,CAA8B,UAAC1K,GAAD,EAAS;AACrC0Z,mBAAS7a,OAAO2L,SAAP,EAAkB+M,cAAlB,CAAiCxH,QAAQ/P,GAAR,GAAc,KAAKA,GAApD,CAAT;AACD,SAFD;AAGD,OALD;;AAOA,aAAO0Z,KAAP;AACD;;;6BAEQhT,Q,EAAU;AACjB,UAAIkT,gBAAgB,KAAKC,aAAL,CAAmBnT,QAAnB,EAA6BA,SAASqC,IAAtC,IACA,KAAK8Q,aAAL,CAAmBnT,QAAnB,EAA6BA,SAASoJ,GAAtC,CADpB;;AAGA,UAAIgK,qBAAqB,KAAKC,mBAAL,CAAyBrT,QAAzB,EAAmCA,SAASqC,IAA5C,IACA,KAAKgR,mBAAL,CAAyBrT,QAAzB,EAAmCA,SAASoJ,GAA5C,CADzB;;AAGA,aAAO8J,gBAAgBE,kBAAvB;AACD;;;+BAEUpT,Q,EAAUsT,c,EAAgB;AACnC,WAAKC,WAAL,GAAmB,IAAIR,WAAJ,EAAnB;AACA,WAAKS,aAAL,GAAqB,IAAIV,aAAJ,EAArB;;AAEA,WAAKW,OAAL,GAAeC,KAAKC,GAAL,KAAa,KAAK3S,YAAjC;AACA,WAAKuS,WAAL,CAAiBK,YAAjB;;AAEA,WAAKC,QAAL,GAAgB,CAAhB;AACA,aAAOH,KAAKC,GAAL,KAAa,KAAKF,OAAlB,IAA6B,KAAKI,QAAL,GAAgB,EAApD,EAAwD;AACtD,aAAKC,OAAL,CAAa9T,QAAb,EAAuB,KAAK6T,QAA5B,EAAsC,CAACE,QAAvC,EAAiDA,QAAjD;AACA,aAAKF,QAAL;AACD;;AAED,UAAI,KAAKA,QAAL,IAAiB,EAArB,EAAyB;AACvBjW,gBAAQC,GAAR,CAAY,qBAAZ;AACD,OAFD,MAEO;AACL,YAAI,CAAC,KAAK0V,WAAL,CAAiBS,KAAtB,EAA6B;AAAE,eAAKT,WAAL,CAAiBU,QAAjB,CAA0B,KAAKJ,QAA/B;AAA2C;AAC1E,aAAKN,WAAL,CAAiBW,UAAjB;AACA,aAAKX,WAAL,CAAiBY,YAAjB;AACD;;AAED,UAAMC,gBAAgB,KAAKZ,aAAL,CAAmBa,QAAnB,CAA4BrU,SAASsU,OAAT,EAA5B,CAAtB;AACA,UAAIF,iBAAiBA,cAAcG,QAAnC,EAA6C;AAC3C,eAAOH,cAAcG,QAArB;AACD,OAFD,MAEO;AACL,eAAOjB,eAAe9Y,KAAKC,KAAL,CAAWD,KAAKkX,MAAL,KAAgB4B,eAAexV,MAA1C,CAAf,CAAP;AACD;;AAED;AACD;;;qCAEgBkC,Q,EAAUwU,K,EAAOC,I,EAAM;AACtC,UAAIf,KAAKC,GAAL,KAAa,KAAKF,OAAtB,EAA+B;AAC7B,aAAKF,WAAL,CAAiBU,QAAjB,CAA0B,KAAKJ,QAAL,GAAgB,CAA1C;AACA,eAAO,YAAP;AACD;AACD,WAAKN,WAAL,CAAiBmB,gBAAjB;AACA,UAAMC,cAAc,KAAKC,QAAL,CAAc5U,QAAd,CAApB;;AAEA,UAAI2U,eAAeF,IAAnB,EAAyB;AACvB,eAAOA,IAAP;AACD,OAFD,MAEO,IAAIE,cAAcH,KAAlB,EAAyB;AAC9BA,gBAAQG,WAAR;AACD;;AAED,UAAIvS,UAAUpC,SAASoC,OAAT,CAAiBpC,SAASqC,IAA1B,CAAd;AACA;AACA,UAAMlI,QAAQ,KAAK0a,SAAL,CAAe7U,SAAS4J,mBAAT,CAA6BxH,OAA7B,CAAf,CAAd;AACA,UAAI0S,gBAAJ;AACA,UAAI9B,cAAJ;;AAEA,WAAK8B,UAAU,CAAf,EAAkBA,UAAU3a,MAAM2D,MAAlC,EAA0CgX,SAA1C,EAAqD;AACnD,YAAI9U,SAASwE,QAAT,CAAkBrK,MAAM2a,OAAN,CAAlB,CAAJ,EAAuC;AACrC9B,kBAAQ,CAAC,KAAK+B,gBAAL,CAAsB/U,QAAtB,EAAgC,CAACyU,IAAjC,EAAuC,CAACD,KAAxC,CAAT;AACAxU,mBAASY,cAAT;;AAEA,cAAIoS,SAASyB,IAAb,EAAmB;AAAE,mBAAOA,IAAP;AAAc;AACnC,cAAIzB,QAAQwB,KAAZ,EAAmB;AAAEA,oBAAQxB,KAAR;AAAgB;AACtC;AACF;;AAED,aAAOwB,KAAP;AACD;;;4BAEOxU,Q,EAAUgU,K,EAAOQ,K,EAAOC,I,EAAM;AACpC,UAAIf,KAAKC,GAAL,KAAa,KAAKF,OAAtB,EAA+B;AAC7B,aAAKF,WAAL,CAAiBU,QAAjB,CAA0B,KAAKJ,QAAL,GAAgB,CAA1C;AACA,eAAO,YAAP;AACD;;AAED,UAAMmB,YAAYR,KAAlB;AACA,UAAMS,WAAWjV,SAASsU,OAAT,EAAjB;AACA,UAAMY,QAAQ,KAAK1B,aAAL,CAAmBa,QAAnB,CAA4BY,QAA5B,CAAd;AACA,UAAIC,SAASA,MAAMlB,KAAN,IAAeA,KAA5B,EAAmC;AACjC,aAAKT,WAAL,CAAiB4B,WAAjB;AACA,gBAAQD,MAAM1H,IAAd;AACE,eAAK,OAAL;AACE,mBAAO0H,MAAMlC,KAAb;AACF,eAAK,YAAL;AACEwB,oBAAQha,KAAK2G,GAAL,CAASqT,KAAT,EAAgBU,MAAMlC,KAAtB,CAAR;AACA;AACF,eAAK,YAAL;AACEyB,mBAAOja,KAAKyG,GAAL,CAASwT,IAAT,EAAeS,MAAMlC,KAArB,CAAP;AACA;AARJ;AAUA,YAAIwB,SAASC,IAAb,EAAmB;AAAE,iBAAOS,MAAMlC,KAAb;AAAqB;AAC3C;;AAED,UAAIgB,UAAU,CAAd,EAAiB;AACf,eAAO,KAAKe,gBAAL,CAAsB/U,QAAtB,EAAgCwU,KAAhC,EAAuCC,IAAvC,CAAP;AACD;;AAED,WAAKlB,WAAL,CAAiB6B,iBAAjB;;AAEA,UAAIC,eAAgBH,SAASA,MAAMX,QAAhB,GAA4BW,MAAMX,QAAlC,GAA6C,IAAhE;;AAEA,UAAMpa,QAAQ,KAAK0a,SAAL,CAAe7U,SAAS4J,mBAAT,EAAf,EAA+CyL,YAA/C,CAAd;AACA,UAAIP,gBAAJ;AACA,UAAIQ,UAAU,KAAd;AACA,UAAIC,eAAJ;AACA,UAAIvC,cAAJ;AACA,UAAIwC,YAAY,CAACzB,QAAjB;AACA,UAAIQ,WAAW,IAAf;;AAEA,WAAKO,UAAU,CAAf,EAAkBA,UAAU3a,MAAM2D,MAAlC,EAA0CgX,SAA1C,EAAqD;AACnD,YAAI9U,SAASwE,QAAT,CAAkBrK,MAAM2a,OAAN,CAAlB,CAAJ,EAAuC;AACrCQ,oBAAU,IAAV;AACAC,mBAAS,KAAKzB,OAAL,CAAa9T,QAAb,EAAuBgU,QAAQ,CAA/B,EAAkC,CAACS,IAAnC,EAAyC,CAACD,KAA1C,CAAT;AACAxU,mBAASY,cAAT;AACA,cAAI2U,WAAW,YAAf,EAA6B;AAC3B,mBAAOA,MAAP;AACD;AACDvC,kBAAQ,CAACuC,MAAT;AACA,cAAIvC,QAAQwC,SAAZ,EAAuB;AACrBA,wBAAYxC,KAAZ;AACAuB,uBAAWpa,MAAM2a,OAAN,CAAX;AACA,gBAAI9B,QAAQwB,KAAZ,EAAmB;AACjBA,sBAAQxB,KAAR;AACD;AACF;AACD,cAAIwB,SAASC,IAAb,EAAmB;AAAE;AAAQ;AAC9B;AACF;;AAED,UAAI,CAACa,OAAL,EAAc;AACZ,YAAItV,SAASoC,OAAT,CAAiBpC,SAASqC,IAA1B,CAAJ,EAAqC;AACnCmT,sBAAY,CAACrd,OAAOQ,OAAOD,KAAd,EAAqBqI,KAAlC;AACD,SAFD,MAEO;AACLyU,sBAAY,CAAZ;AACD;AACF;;AAGD,WAAKhC,aAAL,CAAmBiC,UAAnB,CAA8BD,SAA9B,EAAyCjB,QAAzC,EAAmDS,SAAnD,EAA8DP,IAA9D,EAAoET,KAApE,EAA2EiB,QAA3E;AACA,aAAOO,SAAP;AACD;;;8BAESrb,K,EAAOkb,Y,EAAc;AAC7B,eAASK,cAAT,CAAwBtR,IAAxB,EAA8B;AAC5B,YAAIiR,gBAAgBjR,KAAK9C,GAAL,KAAa+T,aAAa/T,GAA9C,EAAmD;AACjD,iBAAO,QAAP;AACD;AACD,YAAI0R,QAAQ5O,KAAKQ,YAAL,KAAsB,CAAC,IAAIR,KAAKQ,YAAL,EAAL,KAA6B,IAAIR,KAAKsM,QAAL,EAAjC,CAAtB,GAA0E,CAAtF;AACDsC,gBAAQA,QAAQ,CAAR,GAAY5O,KAAKsM,QAAL,EAApB;AACAsC,gBAAQA,QAAQ,EAAR,GAAa5O,KAAKqM,OAAL,EAArB;AACAuC,gBAAQA,QAAQ,EAAR,GAAa5O,KAAKO,KAAL,EAArB;AACAqO,gBAAQA,QAAQ,EAAR,GAAa5O,KAAKM,OAAL,EAArB;;AAEC,eAAOsO,KAAP;AACD;;AAED7Y,YAAMwb,IAAN,CAAW,UAACC,KAAD,EAAQC,KAAR;AAAA,eAAkBH,eAAeG,KAAf,IAAwBH,eAAeE,KAAf,CAA1C;AAAA,OAAX;AACA,aAAOzb,KAAP;AACD;;;;;;AAGH7C,OAAOC,OAAP,GAAiBuI,EAAjB,C;;;;;;;;;;;;;IC5MMgT,a;AACJ,2BAAc;AAAA;;AACZ,SAAKgD,IAAL,GAAY,KAAZ;AACA,SAAKC,KAAL,GAAa,IAAIC,KAAJ,CAAU,KAAKF,IAAf,CAAb;AACD;;;;6BAEQG,G,EAAK;AACZ,UAAMC,QAAQD,MAAM,KAAKH,IAAzB;AACA,UAAI,KAAKC,KAAL,CAAWG,KAAX,KAAqB,KAAKH,KAAL,CAAWG,KAAX,EAAkBD,GAAlB,KAA0BA,GAAnD,EAAwD;AACtD,eAAO,KAAKF,KAAL,CAAWG,KAAX,CAAP;AACD,OAFD,MAEO;AACL,eAAO,IAAP;AACD;AACF;;;+BAEUlD,K,EAAOuB,Q,EAAUC,K,EAAOC,I,EAAMT,K,EAAOiC,G,EAAK;AACnD,UAAMC,QAAQD,MAAM,KAAKH,IAAzB;AACA,UAAI,KAAKC,KAAL,CAAWG,KAAX,KAAqB,KAAKH,KAAL,CAAWG,KAAX,EAAkBlC,KAAlB,GAA0BA,KAAnD,EAA0D;AACxD;AACD,OAFD,MAEO;AACL,aAAK+B,KAAL,CAAWG,KAAX,IAAoB;AAClBlD,sBADkB;AAElBuB,4BAFkB;AAGlB/G,gBAAM,KAAK2I,kBAAL,CAAwBnD,KAAxB,EAA+BwB,KAA/B,EAAsCC,IAAtC,CAHY;AAIlBT,sBAJkB;AAKlBiC;AALkB,SAApB;AAOD;AACF;;;uCAEkBjD,K,EAAOwB,K,EAAOC,I,EAAM;AACrC,UAAIzB,SAASwB,KAAb,EAAoB;AAClB,eAAO,YAAP;AACD,OAFD,MAEO,IAAIxB,SAASyB,IAAb,EAAmB;AACxB,eAAO,YAAP;AACD,OAFM,MAEA;AACL,eAAO,OAAP;AACD;AACF;;;;;;AAGHnd,OAAOC,OAAP,GAAiBub,aAAjB,C;;;;;;;;;;;eCzC8B1b,mBAAOA,CAAC,CAAR,C;IAAtBY,S,YAAAA,S;IAAWY,M,YAAAA,M;;gBAEcxB,mBAAOA,CAAC,CAAR,C;IADzBsH,S,aAAAA,S;IAAWC,S,aAAAA,S;IACXG,S,aAAAA,S;IAAWC,S,aAAAA,S;;AAEnB,SAASwI,eAAT,CAAyBvE,QAAzB,EAAmC;AAAA,wBACZA,SAASoT,KAAT,CAAe,EAAf,CADY;AAAA;AAAA,MAC1BxX,IAD0B;AAAA,MACpBI,IADoB;;AAEjC,SAAQD,UAAUC,IAAV,IAAkB,CAAnB,GAAwBL,UAAUC,IAAV,CAA/B;AACD;;AAED,SAASsF,eAAT,CAAyB5K,GAAzB,EAA8B;AAC5B,SAAOoF,UAAUpF,MAAM,CAAhB,IAAsBwF,UAAUtE,KAAKC,KAAL,CAAWnB,MAAM,CAAjB,CAAV,CAA7B;AACD;;AAED;AACA,SAAS6J,YAAT,CAAsBH,QAAtB,EAAgC;AAAA,yBACTA,SAASoT,KAAT,CAAe,EAAf,CADS;AAAA;AAAA,MACvBxX,IADuB;AAAA,MACjBI,IADiB;;AAE9B,MAAMtB,MAAMqB,UAAUC,IAAV,CAAZ;AACA,MAAMH,MAAMF,UAAUC,IAAV,CAAZ;AACA,SAAQlB,MAAM,CAAN,KAAY,CAAZ,IAAiBmB,MAAM,CAAN,KAAY,CAA9B,IACCnB,MAAM,CAAN,KAAY,CAAZ,IAAiBmB,MAAM,CAAN,KAAY,CADrC;AAED;;AAED,SAAS8D,WAAT,CAAqB0T,QAArB,EAA+B;AAC7B,MAAIhN,cAAJ;AACA,SAAOgN,SAASxQ,GAAT,CAAa,UAACzB,IAAD,EAAOmJ,GAAP,EAAe;AACjClE,YAASkE,MAAM,CAAN,KAAY,CAAb,GAAkB3U,OAAOE,KAAzB,GAAiCF,OAAOG,KAAhD;AACA,WAAUf,UAAUkZ,aAAV,CAAwB9M,KAAKsM,QAAL,EAAxB,EAAyCrH,KAAzC,CAAH,UACGnF,gBAAgBE,KAAKM,OAAL,EAAhB,CADH,mBAEGR,gBAAgBE,KAAKO,KAAL,EAAhB,CAFH,CAAP;AAGD,GALM,CAAP;AAMD;;AAED,SAASlD,UAAT,CAAoB6U,SAApB,EAA+B;AAC7B,MAAIC,UAAU,CAACD,YAAY,IAAb,EAAmBE,QAAnB,EAAd;AACA,MAAID,QAAQE,OAAR,CAAgB,GAAhB,KAAwB,CAAC,CAA7B,EAAgCF,WAAW,GAAX;;AAEhC,SAAOA,QAAQzY,MAAR,GAAiByY,QAAQE,OAAR,CAAgB,GAAhB,IAAuB,CAA/C,EAAkD;AAChDF,eAAW,GAAX;AACD;;AAED,SAAOA,QAAQzY,MAAR,GAAiByY,QAAQE,OAAR,CAAgB,GAAhB,IAAuB,CAA/C,EAAkD;AAChDF,cAAUA,QAAQG,KAAR,CAAc,CAAd,EAAiBH,QAAQzY,MAAR,GAAiB,CAAlC,CAAV;AACD;;AAED,SAAOyY,OAAP;AACD;;AAEDjf,OAAOC,OAAP,GAAiB;AACfgQ,kCADe;AAEfrD,kCAFe;AAGff,4BAHe;AAIfR,0BAJe;AAKflB;AALe,CAAjB,C;;;;;;;;;;;;;IC/CMsR,W;AACJ,yBAAc;AAAA;;AACZ,SAAK4D,eAAL,GAAuB,CAAvB;AACA,SAAKC,YAAL,GAAoB,CAApB;AACA,SAAKC,SAAL,GAAiB,CAAjB;AACD;;;;mCAEc;AACb,WAAKC,SAAL,GAAiB,IAAIpD,IAAJ,EAAjB;AACD;;;iCAEY;AACX,WAAKD,OAAL,GAAe,IAAIC,IAAJ,EAAf;AACD;;;6BAEQM,K,EAAO;AACd,WAAKA,KAAL,GAAaA,KAAb;AACD;;;mCAEc;AACbpW,cAAQC,GAAR,CAAY,WAAZ;;AAEA,UAAI,KAAKiZ,SAAL,IAAkB,KAAKrD,OAA3B,EAAoC;AAClC7V,gBAAQC,GAAR,iBAAyB,KAAK4V,OAAL,GAAe,KAAKqD,SAA7C;AACD;;AAEDlZ,cAAQC,GAAR,cAAuB,KAAKmW,KAA5B;AACApW,cAAQC,GAAR,iCAAyC,KAAK+Y,YAAL,GAAoB,KAAKD,eAAlE;AACA/Y,cAAQC,GAAR,yBAAkC,KAAK8Y,eAAvC;AACA/Y,cAAQC,GAAR,8BAAuC,KAAK+Y,YAA5C;AACAhZ,cAAQC,GAAR,kBAA2B,KAAKgZ,SAAhC;;AAEAjZ,cAAQC,GAAR,CAAY,WAAZ;AACD;;;kCAEa;AACZ,WAAKgZ,SAAL;AACD;;;wCAEmB;AAClB,WAAKF,eAAL;AACD;;;uCAEkB;AACjB,WAAKC,YAAL;AACD;;;;;;AAGHtf,OAAOC,OAAP,GAAiBwb,WAAjB,C","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f3794b7dcfe4231f7b4d","const BitBoard = require('./bitboard.js');\nconst Masks = require('./masks.js');\n\nmodule.exports = {\n  BitBoard,\n  BBMasks: Masks,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./js/bitboard/index.js","// const { WhitePawns, BlackPawns } = require('./pawns.js');\nconst Constants = require('./constants.js');\nconst Pawns = require('./pawns.js');\nconst Knight = require('./knight.js');\nconst Bishop = require('./bishop.js');\nconst Rook = require('./rook.js');\nconst Queen = require('./queen.js');\nconst King = require('./king.js');\nconst PieceConv = require('./conversions.js');\nconst eachPieceType = require('./each_piece_type.js');\nconst Dirs = require('./movements/dir_constants.js');\n\nconst PUtils = {\n  [Constants.Types.PAWNS]: Pawns,\n  [Constants.Types.KNIGHTS]: Knight,\n  [Constants.Types.BISHOPS]: Bishop,\n  [Constants.Types.ROOKS]: Rook,\n  [Constants.Types.QUEENS]: Queen,\n  [Constants.Types.KINGS]: King\n};\n\nmodule.exports = {\n  PTypes: Constants.Types,\n  Colors: Constants.Colors,\n  PieceTypeHTML: Constants.PieceTypeHTML,\n  PUtils,\n  eachPieceType,\n  Dirs,\n  PieceConv\n};\n\n\n\n// WEBPACK FOOTER //\n// ./js/pieces/index.js","const Colors = {\n  WHITE: 0,\n  BLACK: 1\n};\n\nconst Types = {\n  PAWNS: 2,\n  KNIGHTS: 3,\n  BISHOPS: 4,\n  ROOKS: 5,\n  QUEENS: 6,\n  KINGS: 7\n};\n\nconst PieceTypeLetters = {\n  [Types.PAWNS]: 'p',\n  [Types.KNIGHTS]: 'n',\n  [Types.BISHOPS]: 'b',\n  [Types.ROOKS]: 'r',\n  [Types.QUEENS]: 'q',\n  [Types.KINGS]: 'k',\n};\n\nconst PieceTypeHTML = {\n  [Types.PAWNS]: '&#9823;',\n  [Types.KNIGHTS]: '&#9822;',\n  [Types.BISHOPS]: '&#9821;',\n  [Types.ROOKS]: '&#9820;',\n  [Types.QUEENS]: '&#9819;',\n  [Types.KINGS]: '&#9818;',\n};\n\nmodule.exports = { Types, Colors, PieceTypeLetters, PieceTypeHTML };\n\n\n\n// WEBPACK FOOTER //\n// ./js/pieces/constants.js","const DIRS = {\n  'NORTH': 0,\n  'SOUTH': 1,\n  'EAST': 2,\n  'WEST': 3,\n  'NOEA': 4,\n  'NOWE': 5,\n  'SOEA': 6,\n  'SOWE': 7\n};\n\nmodule.exports = DIRS;\n\n\n\n// WEBPACK FOOTER //\n// ./js/pieces/movements/dir_constants.js","const { BitBoard, BBMasks } = require('../../bitboard');\nconst Dirs = require('./dir_constants.js');\nconst stepMove = require('./step_move.js');\n\nfunction generateStepBitBoards(dirs) {\n  const res = [];\n  let pos = 0;\n  let initial;\n  let posRes;\n\n  const addMove = (currRes, dir) => {\n    return currRes.or(stepMove(initial, dir[0], dir[1]));\n  };\n\n  while (pos < 64) {\n    initial = BitBoard.fromPos(pos);\n    posRes = dirs.reduce((currRes, dir) => addMove(currRes, dir), new BitBoard());\n    res.push(posRes);\n    pos++;\n  }\n\n  return res;\n}\n\nconst KNIGHT_MOVES = function() {\n  const dirs = [[1, 2], [1, -2],\n                [2, 1], [2, -1],\n                [-1, 2], [-1, -2],\n                [-2, 1], [-2, -1]];\n\n  return generateStepBitBoards(dirs);\n}();\n\nconst KING_MOVES = function() {\n  const dirs = [[1, 0], [1, 1],\n                [1, -1],[-1, 0],\n                [-1, 1], [-1, -1],\n                [0, -1], [0, 1]];\n\n  return generateStepBitBoards(dirs);\n}();\n\nconst SLIDE_MOVES = function() {\n  let pos = 0;\n  const res = [];\n  let moves;\n  let colIdx;\n  let rowIdx;\n  let diagIdx;\n  let antiDiagIdx;\n\n  while (pos < 64) {\n    moves = {};\n    rowIdx = Math.floor(pos / 8);\n    colIdx = pos % 8;\n    diagIdx = (pos < rowIdx * 9) ? (pos % 9) - 2 : (pos % 9) + 7;\n    if (pos === 63) {\n      antiDiagIdx = 14;\n    } else {\n      antiDiagIdx = (pos < (rowIdx + 1) * 7) ? (pos % 7) : (pos % 7) + 7;\n    }\n    moves[Dirs.NORTH] = BBMasks.COLS[colIdx].and(BBMasks.NORTH_OF_ROW[rowIdx]);\n    moves[Dirs.SOUTH] = BBMasks.COLS[colIdx].and(BBMasks.SOUTH_OF_ROW[rowIdx]);\n    moves[Dirs.EAST] = BBMasks.ROWS[rowIdx].and(BBMasks.EAST_OF_COL[colIdx]);\n    moves[Dirs.WEST] = BBMasks.ROWS[rowIdx].and(BBMasks.WEST_OF_COL[colIdx]);\n    moves[Dirs.NOEA] = BBMasks.DIAGS[diagIdx].and(BBMasks.NORTH_OF_ROW[rowIdx]);\n    moves[Dirs.SOWE] = BBMasks.DIAGS[diagIdx].and(BBMasks.SOUTH_OF_ROW[rowIdx]);\n    moves[Dirs.NOWE] = BBMasks.ANTI_DIAGS[antiDiagIdx].and(BBMasks.NORTH_OF_ROW[rowIdx]);\n    moves[Dirs.SOEA] = BBMasks.ANTI_DIAGS[antiDiagIdx].and(BBMasks.SOUTH_OF_ROW[rowIdx]);\n    res.push(moves);\n    pos++;\n  }\n\n  return res;\n}();\n\nmodule.exports = {\n  KNIGHT_MOVES,\n  KING_MOVES,\n  SLIDE_MOVES,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./js/pieces/movements/masks.js","const { BitBoard, BBMasks } = require('../../bitboard');\nconst { SLIDE_MOVES } = require('./masks.js');\nconst Dirs = require('./dir_constants.js');\n\nconst isPosRay = {\n  [Dirs.NORTH]: true,\n  [Dirs.EAST]: true,\n  [Dirs.NOEA]: true,\n  [Dirs.NOWE]: true,\n  [Dirs.SOUTH]: false,\n  [Dirs.WEST]: false,\n  [Dirs.SOEA]: false,\n  [Dirs.SOWE]: false\n};\n\nfunction findUnblocked(pos, occupied, dir) {\n  const posBB = new BitBoard();\n  const dirBB = SLIDE_MOVES[pos][dir];\n  const blocking = dirBB.and(occupied);\n  let blockingPos;\n\n  if (blocking.isZero()) {\n    return dirBB;\n  } else {\n    blockingPos = isPosRay[dir] ? blocking.bitScanForward() : blocking.bitScanReverse();\n    return dirBB.xor(SLIDE_MOVES[blockingPos][dir]);\n  }\n}\n\nfunction horizVert(pos, occupied, notOwnPieces) {\n  return [Dirs.NORTH, Dirs.SOUTH, Dirs.EAST, Dirs.WEST].reduce((res, dir) => {\n    return res.or(findUnblocked(pos, occupied, dir));\n  }, new BitBoard()).and(notOwnPieces);\n}\n\nfunction diag(pos, occupied, notOwnPieces) {\n  return [Dirs.NOEA, Dirs.NOWE, Dirs.SOEA, Dirs.SOWE].reduce((res, dir) => {\n    return res.or(findUnblocked(pos, occupied, dir));\n  }, new BitBoard()).and(notOwnPieces);\n}\n\nmodule.exports = {\n  horizVert,\n  diag\n};\n\n\n\n// WEBPACK FOOTER //\n// ./js/pieces/movements/slide_moves.js","const Utils = require('./utils.js');\n// A standard 8x8 chess board can be represented by a 64bit integer (bitboard),\n// in which a 1 means the position is occupied, a 0 means it's empty\n\n// We use several of these bitboards to represent a chess position\n// for example, the current set of pieces is represented by a bitboard\n// for each piece type and color\n\n// Since Javascript doesn't support bitwise operations for 64bit integers,\n// we implement most of those operations here, separating the 64bit int\n// into its low 32bit and high 32bit components\n\n//56 57 58 59 60 61 62 63\n//48 49 50 51 52 53 54 55  ^\n//40 41 42 43 44 45 46 47  |\n//32 33 34 35 36 37 38 39 HIGH\n//24 25 26 27 28 29 30 31 LOW\n//16 17 18 19 20 21 22 23  |\n// 8  9 10 11 12 13 14 15  v\n// 0  1  2  3  4  5  6  7\n\nconst POW32 = Math.pow(2, 32);\n\nclass BitBoard {\n  constructor(low, high) {\n    this.low = (low || 0) >>> 0;\n    this.high = (high || 0) >>> 0;\n  }\n\n  and(other) {\n    return new BitBoard(this.low & other.low, this.high & other.high);\n  }\n\n  or(other) {\n    return new BitBoard(this.low | other.low, this.high | other.high);\n  }\n\n  xor(other) {\n    return new BitBoard(this.low ^ other.low, this.high ^ other.high);\n  }\n\n  not() {\n    return new BitBoard(~this.low, ~this.high);\n  }\n\n  equals(other) {\n    return (this.low === other.low && this.high === other.high);\n  }\n\n  greaterThan(other) {\n    return (this.high > other.high || this.low > other.low);\n  }\n\n  lessThan(other) {\n    return (this.high < other.high || this.low < other.low);\n  }\n\n  isZero() {\n    return (this.high === 0 && this.low === 0);\n  }\n\n  shiftRight(numBits) {\n    let newLowBits, newHighBits;\n\n    if (numBits <= 0) {\n      return new BitBoard(this.low, this.high);\n    } else if (numBits > 63) {\n      return new BitBoard();\n    } else if (numBits >= 32) {\n      newLowBits = this.high >>> (numBits - 32);\n      newHighBits = 0;\n    } else {\n      newLowBits = (this.low >>> numBits) | (this.high << (32 - numBits));\n      newHighBits = this.high >>> numBits;\n    }\n\n    return new BitBoard(newLowBits, newHighBits);\n  }\n\n  shiftLeft(numBits) {\n    let newLowBits, newHighBits;\n\n    if (numBits <= 0) {\n      return new BitBoard(this.low, this.high);\n    } else if (numBits > 63) {\n      return new BitBoard();\n    } else if (numBits >= 32) {\n      newLowBits = 0;\n      newHighBits = (this.low << (numBits - 32)) >>> 0;\n    } else {\n      newLowBits = (this.low << numBits) >>> 0;\n      newHighBits =  ((this.low >>> (32 - numBits)) | (this.high << numBits)) >>> 0;\n    }\n\n    return new BitBoard(newLowBits, newHighBits);\n  }\n\n  popCount() {\n      return [this.low, this.high].reduce((count, int32) => {\n        return count + Utils.popCount32(int32);\n      }, 0);\n  }\n\n  setBit(pos) {\n    if (pos >= 32 && pos < 64) {\n      this.high = (this.high | (1 << (pos - 32))) >>> 0;\n    } else if (pos >= 0 && pos < 32) {\n      this.low = (this.low | (1 << pos)) >>> 0;\n    }\n  }\n\n  clearBit(pos) {\n    if (pos >= 32) {\n      this.high = (this.high & ~(1 << (pos - 32))) >>> 0;\n    } else {\n      this.low = (this.low & ~(1 << pos)) >>> 0;\n    }\n  }\n\n  bitScanForward() {\n    if (this.low) {\n      return Utils.bitScanForward32(this.low);\n    } else if (this.high) {\n      return Utils.bitScanForward32(this.high) + 32;\n    } else {\n      return null;\n    }\n  }\n\n  hasSetBit(pos) {\n    if (pos < 32) {\n      return Boolean(this.low & (1 << pos));\n    } else {\n      return Boolean(this.high & (1 << (pos - 32)));\n    }\n  }\n\n  bitScanReverse() {\n    if (this.high) {\n      return Utils.bitScanReverse32(this.high) + 32;\n    } else if (this.low) {\n      return Utils.bitScanReverse32(this.low);\n    } else {\n      return null;\n    }\n  }\n\n  pop1Bits(cb) {\n    while (this.low) {\n      cb(Utils.bitScanForward32(this.low));\n      this.low = Utils.clearLeastSigBit32(this.low);\n    }\n\n    while (this.high) {\n      cb(Utils.bitScanForward32(this.high) + 32);\n      this.high = Utils.clearLeastSigBit32(this.high);\n    }\n  }\n\n  dup() {\n    return new BitBoard(this.low, this.high);\n  }\n\n  static fromPos(pos) {\n    const res = new BitBoard();\n    res.setBit(pos);\n\n    return res;\n  }\n\n  static fromPositions(positions) {\n    const res = new BitBoard();\n\n    positions.forEach((pos) => {\n      res.setBit(pos);\n    });\n\n    return res;\n  }\n\n  static fromCol(colNum) {\n    const res = new BitBoard();\n    if (colNum < 0 || colNum > 7) { return res; }\n    let pos = colNum;\n\n    while (pos < 64) {\n      res.setBit(pos);\n      pos += 8;\n    }\n\n    return res;\n  }\n\n  static fromRow(rowNum) {\n    const res = new BitBoard();\n    if (rowNum < 0 || rowNum > 7) { return res; }\n\n    let pos = rowNum * 8;\n    let posMax = pos + 7;\n\n    while (pos <= posMax) {\n      res.setBit(pos);\n      pos++;\n    }\n\n    return res;\n  }\n\n  static upperRightDiag(startPos) {\n    const res = BitBoard.fromPos(startPos);\n    if (startPos < 0 || startPos > 63) { return res; }\n    let pos = startPos + 9;\n\n    while (pos < 64 && pos % 8 !== 0) {\n      res.setBit(pos);\n      pos += 9;\n    }\n\n    return res;\n  }\n\n  static upperLeftDiag(startPos) {\n    const res = new BitBoard();\n    if (startPos < 0 || startPos > 63) { return res; }\n    let pos = startPos;\n\n    while (pos < 64 && pos % 8 !== 0) {\n      res.setBit(pos);\n      pos += 7;\n    }\n\n    if (pos < 64) {\n      res.setBit(pos);\n    }\n\n    return res;\n  }\n\n  render() {\n    let row = '';\n    let pow = 63;\n    let posVal;\n    console.log('------');\n    while (pow >= 32) {\n      posVal = (Math.pow(2, pow - 32) & this.high) === 0 ? '0' : '1';\n      row = posVal + row;\n      if (row.length === 8) {\n        console.log(row);\n        row = '';\n      }\n      pow--;\n    }\n\n    while (pow >= 0) {\n      posVal = (Math.pow(2, pow) & this.low) === 0 ? '0' : '1';\n      row = posVal + row;\n      if (row.length === 8) {\n        console.log(row);\n        row = '';\n      }\n      pow--;\n    }\n    console.log('------');\n  }\n}\n\n\nmodule.exports = BitBoard;\n\n\n\n// WEBPACK FOOTER //\n// ./js/bitboard/bitboard.js","const { BitBoard, BBMasks } = require('../../bitboard');\n\nfunction stepMove(initial, noSo, eaWe) {\n  let positions = initial;\n\n  if (noSo > 0) {\n    positions = positions.shiftLeft(noSo * 8);\n  } else if (noSo < 0){\n    positions = positions.shiftRight(noSo * -8);\n  }\n\n  if (eaWe > 0) {\n    positions = positions.shiftLeft(eaWe).and(BBMasks.EAST_OF_COL[eaWe - 1]);\n  } else if (eaWe < 0){\n    positions = positions.shiftRight(-eaWe).and(BBMasks.WEST_OF_COL[eaWe + 8]);\n  }\n\n  return positions;\n}\n\nmodule.exports = stepMove;\n\n\n\n// WEBPACK FOOTER //\n// ./js/pieces/movements/step_move.js","const ColsFiles = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n\nconst FilesCols = function() {\n  return ColsFiles.reduce((res, file, col) => {\n    res[file] = col;\n    return res;\n  }, {});\n}();\n\nconst RowsRanks = ['1', '2', '3', '4', '5', '6', '7', '8'];\n\nconst RanksRows = function() {\n  return RowsRanks.reduce((res, rank, row) => {\n    res[rank] = row;\n    return res;\n  }, {});\n}();\n\nconst Selectors = {\n  BOARD_ID: \"#board\",\n  PIECE_CLASS: 'piece',\n  SQUARE_CLASS: 'square',\n  RANK_CLASS: 'rank',\n  FILE_CLASS: 'file'\n};\n\n// const PieceCharsToHTML = []{\n//   'k': '&#9812;',\n//   'q':\n//\n// };\n\nmodule.exports = { ColsFiles, FilesCols, RowsRanks, RanksRows, Selectors };\n\n\n\n// WEBPACK FOOTER //\n// ./js/ui/constants.js","const UI = require('./ui');\n\n$(document).ready(function() {\n  const ui = new UI();\n  ui.run();\n});\n\n\n\n// WEBPACK FOOTER //\n// ./js/app.js","const Position = require('../position');\nconst AI = require('../ai');\nconst { PTypes, Colors, PieceTypeHTML } = require('../pieces');\nconst Util = require('./util.js');\nconst { ColsFiles, FilesCols,\n        RowsRanks, RanksRows,\n        Selectors } = require('./constants.js');\n\nclass UI {\n  constructor() {\n    this.position = new Position();\n    this.playerColor = Colors.WHITE;\n    this.ai = new AI();\n    this.currMoves = this.position.generateLegalMoves();\n  }\n\n  run() {\n    this.drawBoard();\n    this.setupButtons();\n    this.playNextTurn();\n  }\n\n  setupButtons() {\n    $('#unmake').click((event) => {\n      if ($(event.currentTarget).hasClass('active')) {\n        this.position.unmakePrevMove();\n        this.position.unmakePrevMove();\n        this.playNextTurn();\n      }\n    });\n\n    $('#auto').click((event) => {\n      if ($(event.currentTarget).hasClass('active')) {\n        this.aiMove();\n      }\n    });\n\n    $('#ai-time-slider').slider({\n      value: this.ai.thinkingTime / 1000,\n      min: Math.round(Math.log(.01) * 1000) / 1000,\n      max: Math.round(Math.log(30) * 1000) / 1000,\n      step: 0.01,\n      slide: (event, ui) => {\n        const val = Math.round(Math.pow(Math.E, ui.value) * 1000);\n        $('#ai-time-val').text(Util.formatTime(val));\n      },\n      change: (event, ui) => {\n        const val = Math.round(Math.pow(Math.E, ui.value) * 1000);\n        this.ai.setThinkingTime(val);\n      }\n    });\n\n    $('#ai-time-val').text(Util.formatTime(this.ai.thinkingTime));\n  }\n\n  displayGameResult() {\n    $('#auto').removeClass('active');\n    $('#unmake').addClass('active');\n    const movesHistory = $('#move-history');\n    let endGameStatus = this.determineGameResult();\n    movesHistory.prepend(`<li>${endGameStatus}<li>`);\n  }\n\n  determineGameResult() {\n    if (this.position.isThreeMoveRepetition()) {\n      return 'Draw -- Three Move Repitition';\n    } else if (this.position.isMoveLimitExceeded()) {\n      return 'Draw -- Move Limit Exceeded (50)';\n    } else if (this.position.inCheck(this.position.turn)) {\n      return 'Checkmate';\n    } else {\n      return 'Stalemate';\n    }\n  }\n\n  playNextTurn() {\n    this.updateMovesList();\n    this.updatePieces();\n\n    if (this.position.turn === this.playerColor) {\n      this.setupPlayerMove();\n    } else {\n      this.aiMove();\n      // setTimeout(() => this.aiMove(), 0);\n    }\n\n  }\n\n  updateMovesList() {\n    const movesHistory = $('#move-history');\n    movesHistory.empty();\n    const moveStrs = Util.formatMoves(this.position.prevMoves);\n    moveStrs.forEach((moveStr) => {\n      movesHistory.prepend($(`<li>${moveStr}</li>`));\n    });\n  }\n\n  reset() {\n\n  }\n\n  generateFileHeader() {\n    const newRow = $('<tr></tr>');\n    newRow.append(`<th>`);\n    ColsFiles.forEach((file) => {\n      newRow.append(`<th class=\"file\">${file}</th>`);\n    });\n    newRow.append(`<th>`);\n\n    return newRow;\n  }\n\n  generateSquare(file, rank) {\n    const fileRank = file + rank;\n\n    const newSquare = $(`<td id=\"${fileRank}\"></td>`);\n\n    const squareColor = Util.isDarkSquare(fileRank) ? 'dark' : 'light';\n    newSquare.addClass(squareColor + \" square\");\n\n    return newSquare;\n  }\n\n  drawBoard() {\n    const board = $('#board');\n\n    let newRankRow;\n    RowsRanks.forEach((rank) => {\n      newRankRow = $('<tr>');\n      newRankRow.append(`<th class=\"rank\">${rank}</th>`);\n      ColsFiles.forEach((file) => {\n        newRankRow.append(this.generateSquare(file, rank));\n      });\n      newRankRow.append(`<th class=\"rank\">${rank}</th>`);\n      board.prepend(newRankRow);\n    });\n\n    board.prepend(this.generateFileHeader());\n    board.append(this.generateFileHeader());\n  }\n\n  updatePieces() {\n    $('.piece').remove();\n    $('.square').removeClass('ui-droppable ui-draggable can-move-to');\n    const pieceTypes = Object.values(PTypes);\n    const pieces = this.position.pieces;\n    let fileRank;\n    let newPiece;\n\n    pieceTypes.forEach((pieceType) => {\n      pieces[pieceType].dup().pop1Bits((pos) => {\n        newPiece = $(`<div class=\"piece\">${PieceTypeHTML[pieceType]}<div>`);\n        if (pieces[Colors.WHITE].hasSetBit(pos)) {\n          newPiece.addClass('white');\n        } else {\n          newPiece.addClass('black');\n        }\n        fileRank = Util.fileRankFromPos(pos);\n        $(`#${fileRank}`).append(newPiece);\n      });\n    });\n  }\n\n  aiMove() {\n    $('.btn').removeClass('active');\n    this.currMoves = this.position.generateLegalMoves();\n    if (this.currMoves.length === 0) {\n      this.displayGameResult();\n      return;\n    }\n\n    let move;\n    setTimeout(() => {\n      move = this.ai.chooseMove(this.position, this.currMoves);\n      this.animateMove(move, () => {\n        this.position.makeMove(move);\n        this.playNextTurn();\n      });\n    }, 0);\n  }\n\n  animateMove(move, cb) {\n    const pieceEl = $(`#${Util.fileRankFromPos(move.getFrom())} .piece`);\n    const newSquare = $(`#${Util.fileRankFromPos(move.getTo())}`);\n\n    if (move.getCaptPiece()) {\n      const captPiece = $(`#${Util.fileRankFromPos(move.getTo())} .piece`);\n      const captOffset = captPiece.offset();\n      captPiece.css({\n        'position': 'absolute',\n        'left': captOffset.left,\n        'top': captOffset.top\n      });\n      captPiece.fadeOut('slow');\n    }\n\n    const oldOffset = pieceEl.offset();\n    pieceEl.appendTo(newSquare);\n    const newOffset = pieceEl.offset();\n\n    const animPiece = pieceEl.clone().appendTo('body');\n    animPiece.css({\n      'position': 'absolute',\n      'left': oldOffset.left,\n      'top': oldOffset.top,\n      'z-index': 1000\n    });\n    pieceEl.hide();\n\n    animPiece.animate({'top': newOffset.top, 'left': newOffset.left}, 'slow', function(){\n      pieceEl.show();\n      animPiece.remove();\n      cb();\n    });\n  }\n\n  setupPlayerMove() {\n    $('.btn').addClass('active');\n    this.currMoves = this.position.generateLegalMoves();\n    if (this.currMoves.length === 0) {\n      this.displayGameResult();\n      return;\n    }\n    const movesData = this.currMoves.map((move) => move.getData());\n    const moveFromTos = {};\n    const moveToFroms = {};\n\n    movesData.forEach((moveData) => {\n      moveFromTos[moveData.from] = moveFromTos[moveData.from] || [];\n      moveFromTos[moveData.from].push(moveData.to);\n\n      moveToFroms[moveData.to] = moveToFroms[moveData.to] || [];\n      moveToFroms[moveData.to].push(moveData.from);\n    });\n\n    this.activateDraggablePieces(moveFromTos);\n    this.activateDroppableSquares(moveToFroms);\n  }\n\n  activateDraggablePieces(moveFromTos) {\n    let fromFileRank;\n    let pieceEl;\n\n    Object.keys(moveFromTos).forEach((fromPos) => {\n      fromFileRank = Util.fileRankFromPos(fromPos);\n      pieceEl = $(`#${fromFileRank} .piece`);\n      pieceEl.draggable({\n        containment: $('#board'),\n        revert: 'invalid',\n        revertDuration: 300\n      });\n\n      pieceEl.mouseenter(() => {\n        moveFromTos[fromPos].forEach((toPos) => {\n          $(`#${Util.fileRankFromPos(toPos)}`).addClass('can-move-to');\n        });\n      });\n\n      pieceEl.mouseleave(() => {\n        $('.square').removeClass('can-move-to');\n      });\n    });\n  }\n\n  activateDroppableSquares(moveToFroms) {\n    let destSq;\n    let originSquare;\n    let originPos;\n    let selectedMove;\n\n    Object.keys(moveToFroms).forEach((toPos) => {\n      destSq = $(`#${Util.fileRankFromPos(toPos)}`);\n      destSq.droppable({\n        accept: (draggable) => {\n          originSquare = $(draggable).parent().attr('id');\n          if (!originSquare) { return false; }\n          originPos = Util.posFromFileRank(originSquare);\n          return moveToFroms[toPos].includes(originPos);\n        },\n        drop: (event, ui) => {\n          originSquare = $(ui.draggable).parent().attr('id');\n          originPos = Util.posFromFileRank(originSquare);\n          selectedMove = this.currMoves.filter((move) => {\n            return move.getFrom() === originPos &&\n                   move.getTo() === parseInt(toPos);\n          })[0];\n          this.position.makeMove(selectedMove);\n          this.playNextTurn();\n        }\n      });\n    });\n  }\n}\n\nmodule.exports = UI;\n\n\n\n// WEBPACK FOOTER //\n// ./js/ui/index.js","const { BitBoard, BBMasks } = require('../bitboard');\n\nconst { Move, MoveTypes } = require('../move');\n\nconst { PUtils, PTypes,\n        Colors, Dirs } = require('../pieces');\n\nconst { piecePosHashKeys,\n        epPosHashKeys,\n        castleHashKeys,\n        turnHashKeys } = require('./zhash_constants.js');\n\nconst { pieceSetsToArray,\n        pieceSetsFromArray } = require('./utils/array_conversions.js');\n\nclass Position {\n  constructor(pieces = pieceSetsFromArray(), turn = Colors.WHITE, prevMoves = []) {\n    this.pieces = pieces;\n    this.prevMoves = prevMoves;\n\n    // castling rights represented by 4bit int\n    // in the following order (left bit to right):\n    // bKing bQueen wKing wQueen\n    this.castleRights = 0xf;\n\n    // the en passant BB will either be empty\n    // or have one position marked that indicates\n    // the destination of an en passant attack\n    this.epBB = new BitBoard();\n\n    // holds previous state info (castling rights, en passant)\n    // for move reversal purposes\n    this.prevStates = [];\n\n    this.pTypesLocations = this.createPTypesLocations();\n\n    // we separate our hashed values into piece position hashes\n    // and state hashes for simpler integration with our move making/unmaking process\n    // they are xor'd to represent the complete position\n    this.pPosHash = this.createPiecesPosHash();\n    this.stateHash = this.createStateHash();\n\n    this.setTurn(turn, this.getOtherColor(turn));\n  }\n\n  createPTypesLocations() {\n    let pos;\n    const res = [];\n\n    for (pos = 0; pos < 64; pos++) {\n      res[pos] = this.getPieceAt(pos);\n    }\n\n    return res;\n  }\n\n  createPiecesPosHash() {\n    let val = new BitBoard();\n\n    let pType;\n    const whitesPos = this.pieces[Colors.WHITE];\n    whitesPos.dup().pop1Bits((pos) => {\n      pType = this.pTypesLocations[pos];\n      val ^= piecePosHashKeys[pos][pType][Colors.WHITE];\n    });\n\n    const blacksPos = this.pieces[Colors.BLACK];\n    blacksPos.dup().pop1Bits((pos) => {\n      pType = this.pTypesLocations[pos];\n      val ^= piecePosHashKeys[pos][pType][Colors.BLACK];\n    });\n\n    return val;\n  }\n\n  createStateHash() {\n    let val = new BitBoard();\n    this.epBB.dup().pop1Bits((pos) => {\n      val ^= epPosHashKeys[pos];\n    });\n\n    let castleRightsPos;\n    for (castleRightsPos = 0; castleRightsPos < 4; castleRightsPos++) {\n      if ((this.castleRights & (1 << castleRightsPos)) >>> 0) {\n        val ^= castleHashKeys[castleRightsPos];\n      }\n    }\n\n    return val;\n  }\n\n  getHash() {\n    return this.pPosHash ^ this.stateHash ^ turnHashKeys[this.turn];\n  }\n\n  setTurn(turn, opp) {\n    this.turn = turn;\n    this.opp = opp;\n  }\n\n  swapTurn() {\n    this.setTurn(this.opp, this.turn);\n  }\n\n  getOtherColor(color) {\n    return color ^ Colors.BLACK;\n  }\n\n  // generates all pseudo legal moves, ie moves that may put the king\n  // in check but are otherwise legal\n  // why do this: our ai move search generates all moves for a position\n  // and then considers each move individually. some of those moves\n  // will not be considered due to pruning cutoffs, so it's more efficient\n  // to only check for full legality of moves that we actually consider\n  generatePseudoMoves(includeQuiet = true) {\n    const moves = [];\n    if (this.isNonStalemateDraw()) { return moves; }\n    this.addPawnMoves(moves, includeQuiet);\n    this.addNormalMoves(moves, includeQuiet);\n    this.addKingMoves(moves, includeQuiet);\n\n    return moves;\n  }\n\n  // generates moves with a filter for whether the move puts the king in check\n  // mainly used to determine checkmate or stalemate\n  generateLegalMoves() {\n    const pseudoMoves = this.generatePseudoMoves();\n    let moveData;\n    let isLegal;\n\n    const legals = [];\n    return pseudoMoves.filter((pseudoMove) => {\n      moveData = pseudoMove.getData();\n\n      this.testMove(moveData, (testsLegal) => {\n        isLegal = testsLegal;\n        return true;\n      });\n\n      return isLegal;\n    });\n  }\n\n  // inserts pawn moves into the moves array\n  addPawnMoves(moves, includeQuiet) {\n    const pawnsPos = this.getColorPieceSet(this.turn, PTypes.PAWNS);\n\n    if (includeQuiet) {\n      const notOccupied = this.getOccupied().not();\n\n      const pawnSinglePushes = PUtils[PTypes.PAWNS].singlePush(this.turn, pawnsPos, notOccupied);\n      this.addPawnMoveSet(pawnSinglePushes, 8 * PUtils[PTypes.PAWNS].DIRS[this.turn], moves);\n\n      const pawnDoublePushes = PUtils[PTypes.PAWNS].doublePush(this.turn, pawnsPos, notOccupied);\n      this.addPawnMoveSet(pawnDoublePushes, 16 * PUtils[PTypes.PAWNS].DIRS[this.turn], moves, false, true);\n    }\n\n    let oppPositions = this.pieces[this.opp].or(this.epBB);\n\n    const pawnLeftAttacks = PUtils[PTypes.PAWNS].attacksLeft(this.turn, pawnsPos, oppPositions);\n    this.addPawnMoveSet(pawnLeftAttacks, 7 * PUtils[PTypes.PAWNS].DIRS[this.turn], moves, true);\n\n    const pawnRightAttacks = PUtils[PTypes.PAWNS].attacksRight(this.turn, pawnsPos, oppPositions);\n    this.addPawnMoveSet(pawnRightAttacks, 9 * PUtils[PTypes.PAWNS].DIRS[this.turn], moves, true);\n  }\n\n  // takes a new position set for pawns and adds each corresponding move\n  // to the moves array, with special handling for en passants, promotions and double pushes\n\n  // note: unlike other pieces, we map pawn movements from the set of all existing pawns\n  // rather than each pawn individually, so the function takes a shift amount to determine\n  // the location of the individual pawn that moved to a new position\n  addPawnMoveSet(newPositions, shiftAmt, moves, isCapture, isDblPush) {\n    let from;\n    let captured = null;\n\n    newPositions.pop1Bits((pos) => {\n      from = pos - shiftAmt;\n      if (isDblPush) {\n        moves.push(new Move(from, pos, MoveTypes.DBL_PPUSH, PTypes.PAWNS));\n      } else if (isCapture && this.epBB.hasSetBit(pos)) {\n        moves.push(new Move(from, pos, MoveTypes.EP_CAPT, PTypes.PAWNS));\n      } else {\n        if (isCapture) { captured = this.pTypesLocations[pos]; }\n\n        if (PUtils[PTypes.PAWNS].PROMO_MASKS[this.turn].hasSetBit(pos)) {\n          this.addPromos(from, pos, moves, captured);\n        } else {\n          moves.push(new Move(from, pos, MoveTypes.NORMAL, PTypes.PAWNS, captured));\n        }\n      }\n    });\n  }\n\n  // adds a move to the moves array for each possible promotion type\n\n  // side note: I was curious about why you'd ever promote to rook or bishop\n  // and the reason is if promoting to a queen results in stalemate\n  addPromos(from, to, moves, captured) {\n    [MoveTypes.NPROMO, MoveTypes.BPROMO,\n     MoveTypes.RPROMO, MoveTypes.QPROMO].forEach((promoType) => {\n       moves.push(new Move(from, to, promoType, PTypes.PAWNS, captured));\n     });\n  }\n\n  // adds moves to the moves array for all pieces that don't\n  // have 'special' moves, ie not pawns or kings\n  addNormalMoves(moves, includeQuiet) {\n    const occupied = this.getOccupied();\n    const notOwnPieces = this.getNotOccupiedBy(this.turn);\n\n    const knightsPos = this.getColorPieceSet(this.turn, PTypes.KNIGHTS);\n    let knightMoves;\n    knightsPos.dup().pop1Bits((pos) => {\n      knightMoves = PUtils[PTypes.KNIGHTS].moves(pos, notOwnPieces);\n      this.addNormalMoveSet(knightMoves, pos, PTypes.KNIGHTS, moves, includeQuiet);\n    });\n\n    const bishopsPos = this.getColorPieceSet(this.turn, PTypes.BISHOPS);\n    let bishopMoves;\n    bishopsPos.dup().pop1Bits((pos) => {\n      bishopMoves = PUtils[PTypes.BISHOPS].moves(pos, occupied, notOwnPieces);\n      this.addNormalMoveSet(bishopMoves, pos, PTypes.BISHOPS, moves, includeQuiet);\n    });\n\n    const rooksPos = this.getColorPieceSet(this.turn, PTypes.ROOKS);\n    let rookMoves;\n    rooksPos.dup().pop1Bits((pos) => {\n      rookMoves = PUtils[PTypes.ROOKS].moves(pos, occupied, notOwnPieces);\n      this.addNormalMoveSet(rookMoves, pos, PTypes.ROOKS, moves, includeQuiet);\n    });\n\n    const queenPos = this.getColorPieceSet(this.turn, PTypes.QUEENS).bitScanForward();\n    if (queenPos !== null) {\n      const queenMoves = PUtils[PTypes.QUEENS].moves(queenPos, occupied, notOwnPieces);\n      this.addNormalMoveSet(queenMoves, queenPos, PTypes.QUEENS, moves, includeQuiet);\n    }\n  }\n\n  // adds available king moves to the moves array\n  addKingMoves(moves, includeQuiet) {\n      const notOwnPieces = this.getNotOccupiedBy(this.turn);\n      const kingPos = this.getColorPieceSet(this.turn, PTypes.KINGS).bitScanForward();\n\n      // for testing purposes...\n      if (kingPos === null) { return; }\n\n      const normalMoves = PUtils[PTypes.KINGS].moves(kingPos, notOwnPieces);\n      this.addNormalMoveSet(normalMoves, kingPos, PTypes.KINGS, moves, includeQuiet);\n\n      if (includeQuiet) {\n        this.addCastleMoves(moves);\n      }\n  }\n\n  // takes a BB of possible new positions for a single\n  // piece and adds each corresponding move to the moves array\n  addNormalMoveSet(newPositions, startPos, pieceType, moves, includeQuiet) {\n    let newPos;\n    let newMove;\n    let captType;\n\n    newPositions.pop1Bits((pos) => {\n      captType = this.pieces[this.opp].hasSetBit(pos) ? this.pTypesLocations[pos] : null;\n      if (includeQuiet || captType) {\n        moves.push(new Move(startPos, pos, MoveTypes.NORMAL, pieceType, captType));\n      }\n    });\n  }\n\n  // adds available castling moves to the moves array\n  addCastleMoves(moves) {\n    const turnCastleRights = this.getCastleRights(this.turn);\n    const startPos = PUtils[PTypes.KINGS].INIT_POS[this.turn];\n    const notOccupied = this.getOccupied().not();\n\n    if ((turnCastleRights & 0b1) && PUtils[PTypes.KINGS].canCastle(this.turn, Dirs.WEST, notOccupied)) {\n      moves.push(new Move(startPos, startPos - 2, MoveTypes.CSTL_QUEEN, PTypes.KINGS));\n    }\n\n    if ((turnCastleRights & 0b10) && PUtils[PTypes.KINGS].canCastle(this.turn, Dirs.EAST, notOccupied)) {\n      moves.push(new Move(startPos, startPos + 2, MoveTypes.CSTL_KING, PTypes.KINGS));\n    }\n  }\n\n  // returns 2bit value for the color's castling rights\n  // left bit => king-side rights\n  // right bit => queen-side rights\n  getCastleRights(color) {\n    return color === Colors.WHITE ? this.castleRights & 0b11 : this.castleRights >>> 2;\n  }\n\n  // returns a BB with occupied positions for a given color and piece type\n  getColorPieceSet(color, pieceType) {\n    return this.pieces[color].and(this.pieces[pieceType]);\n  }\n\n  // returns a BB of all occupied positions\n  getOccupied() {\n    return this.pieces[Colors.WHITE].or(this.pieces[Colors.BLACK]);\n  }\n\n  // returns a BB of all positions that this color does not occupy\n  getNotOccupiedBy(color) {\n    return this.pieces[color].not();\n  }\n\n  // returns the piece type that occupies the given position\n  // if no piece is found, returns null\n  getPieceAt(pos) {\n    const types = Object.values(PTypes);\n\n    let idx;\n    let type;\n\n    for (idx = 0; idx < types.length; idx++) {\n      type = types[idx];\n      if (this.pieces[type].hasSetBit(pos)) {\n        return type;\n      }\n    }\n\n    return null;\n  }\n\n  // makes a specified move if it's legal, updating the current position\n  // returns true if the move is made, false otherwise\n  makeMove(move) {\n    const moveData = move.getData();\n\n    let isLegal;\n    this.testMove(moveData, (testsLegal) => {\n      isLegal = testsLegal;\n      return !isLegal;\n    });\n\n    if (!isLegal) { return false; }\n\n    this.addPrevState();\n\n    this.adjustCastleRights(moveData.pieceType, moveData.from, moveData.captPieceType, moveData.to);\n    const epPos = this.epBB.bitScanForward();\n    if (epPos !== null) { this.stateHash ^= epPosHashKeys[epPos]; }\n    this.epBB = new BitBoard();\n\n    this.execMoveType(moveData.from, moveData.to, moveData.type);\n\n    this.prevMoves.push(move);\n    this.swapTurn();\n\n    return true;\n  }\n\n  // makes the piece movements needed to determine\n  // if the move is legal, sends a boolean for the legality\n  // to the callback and undoes the piece movements if the callback\n  // returns true\n  testMove(moveData, cb) {\n    if (moveData.captPieceType) {\n      this.clearPieceAt(moveData.to, this.opp, moveData.captPieceType);\n    }\n\n    if (moveData.isPromo) {\n      this.clearPieceAt(moveData.from, this.turn, PTypes.PAWNS);\n    } else {\n      this.movePiece(moveData.from, moveData.to, this.turn, moveData.pieceType);\n    }\n\n    const undo = cb(this.testsLegal(moveData));\n    if (!undo) { return; }\n\n    if (moveData.isPromo) {\n      this.setPieceAt(moveData.from, this.turn, PTypes.PAWNS);\n    } else {\n      this.movePiece(moveData.to, moveData.from, this.turn, moveData.pieceType);\n    }\n\n    if (moveData.captPieceType) {\n      this.setPieceAt(moveData.to, this.opp, moveData.captPieceType);\n    }\n  }\n\n  // returns boolean for whether or not move is legal\n  // based on the current position\n  testsLegal(moveData) {\n    if (moveData.isCastle) {\n      return this.isLegalCastle(moveData.from, moveData.type);\n    } else {\n      return !this.inCheck(this.turn);\n    }\n  }\n\n  isLegalCastle(pos, castleType) {\n    const dir = castleType === MoveTypes.CSTL_KING ? 1 : -1;\n    let count = 0;\n\n    while (count <= 2) {\n      if (this.isAttacked(pos, this.turn)) { return false; }\n      count++;\n      pos += dir;\n    }\n\n    return true;\n  }\n\n  // returns boolean for whether the provided color's king is in check\n  inCheck(color) {\n    const kingPos = this.getColorPieceSet(color, PTypes.KINGS).bitScanForward();\n    // for testing purposes...\n    if (kingPos === null) {\n      console.log('NO KING');\n      console.log(this.prevMoves.map((move) => move.val));\n    }\n    return this.isAttacked(kingPos, color);\n  }\n\n\n  // returns boolean for whether any opponent color piece is attacking the provided position\n  isAttacked(pos, color) {\n    const posBB = BitBoard.fromPos(pos);\n    const occupied = this.getOccupied();\n    const oppColor = this.getOtherColor(color);\n    const pawns = this.getColorPieceSet(oppColor, PTypes.PAWNS);\n\n    const queenBB = this.getColorPieceSet(oppColor, PTypes.QUEENS);\n    return (!PUtils[PTypes.PAWNS].attacksLeft(oppColor, pawns, posBB).isZero() ||\n            !PUtils[PTypes.PAWNS].attacksRight(oppColor, pawns, posBB).isZero() ||\n            !PUtils[PTypes.KNIGHTS].moves(pos, this.getColorPieceSet(oppColor, PTypes.KNIGHTS)).isZero() ||\n            !PUtils[PTypes.BISHOPS].moves(pos, occupied, this.getColorPieceSet(oppColor, PTypes.BISHOPS).or(queenBB)).isZero() ||\n            !PUtils[PTypes.ROOKS].moves(pos, occupied, this.getColorPieceSet(oppColor, PTypes.ROOKS).or(queenBB)).isZero() ||\n            !PUtils[PTypes.KINGS].moves(pos, this.getColorPieceSet(oppColor, PTypes.KINGS)).isZero());\n  }\n\n  // unmakes the previous move, updating the current position\n  unmakePrevMove() {\n    const prevMove = this.prevMoves.pop();\n    if (!prevMove) { return false; }\n    this.swapTurn();\n    const moveData = prevMove.getData();\n\n    this.reverseMoveType(moveData.from, moveData.to, moveData.type);\n\n    const prevState = this.prevStates.pop();\n    this.epBB = prevState.epBB;\n    this.castleRights = prevState.castleRights;\n    this.stateHash = prevState.stateHash;\n\n    if (moveData.isPromo) {\n      this.setPieceAt(moveData.from, this.turn, PTypes.PAWNS);\n    } else {\n      this.movePiece(moveData.to, moveData.from, this.turn, moveData.pieceType);\n    }\n\n\n    if (moveData.captPieceType) {\n      this.setPieceAt(moveData.to, this.opp, moveData.captPieceType);\n    }\n\n    return true;\n  }\n\n  clearCastleRights(color, dir) {\n    let clearRightsPos = 0;\n    if (color === Colors.BLACK) { clearRightsPos += 2; }\n    if (dir === Dirs.EAST) { clearRightsPos += 1; }\n\n    let clearRightsMask = 1 << clearRightsPos;\n    if (clearRightsMask & this.castleRights) {\n      this.castleRights = (this.castleRights & (~clearRightsMask)) >>> 0;\n      this.stateHash ^= castleHashKeys[clearRightsPos];\n    }\n  }\n\n  // makes adjustments to the castling rights\n  // if a rook or king is moved\n  adjustCastleRights(pieceType, from, captPieceType, to) {\n    const turnCastleRights = this.getCastleRights(this.turn);\n    let dir;\n    if (pieceType === PTypes.KINGS && turnCastleRights) {\n      this.clearCastleRights(this.turn, Dirs.EAST);\n      this.clearCastleRights(this.turn, Dirs.WEST);\n    } else if (pieceType === PTypes.ROOKS && turnCastleRights) {\n      dir = from > PUtils[PTypes.KINGS].INIT_POS[this.turn] ? Dirs.EAST : Dirs.WEST;\n      this.clearCastleRights(this.turn, dir);\n    }\n\n    if (captPieceType === PTypes.ROOKS && this.getCastleRights(this.opp)) {\n      dir = to > PUtils[PTypes.KINGS].INIT_POS[this.opp] ? Dirs.EAST : Dirs.WEST;\n      this.clearCastleRights(this.opp, dir);\n    }\n  }\n\n  // adds the current state values to the prevStates array\n  // used for move unmaking purposes\n  addPrevState() {\n    const state = { epBB: this.epBB,\n                    castleRights: this.castleRights,\n                    stateHash: this.stateHash,\n                  };\n    this.prevStates.push(state);\n  }\n\n  // makes special adjustments to the position based on the move type\n  execMoveType(from, to, type) {\n    switch(type) {\n      case MoveTypes.NORMAL:\n        return;\n      case MoveTypes.DBL_PPUSH:\n        let epPos = to + (-PUtils[PTypes.PAWNS].DIRS[this.turn] * 8);\n        this.epBB = BitBoard.fromPos(epPos);\n        this.stateHash ^= epPosHashKeys[epPos];\n        break;\n      case MoveTypes.CSTL_KING:\n        this.movePiece(from + 3, from + 1, this.turn, PTypes.ROOKS);\n        break;\n      case MoveTypes.CSTL_QUEEN:\n        this.movePiece(from - 4, from - 1, this.turn, PTypes.ROOKS);\n        break;\n      case MoveTypes.EP_CAPT:\n        let capturedPos = to - (PUtils[PTypes.PAWNS].DIRS[this.turn] * 8);\n        this.clearPieceAt(capturedPos, this.opp, PTypes.PAWNS);\n        break;\n      case MoveTypes.NPROMO:\n        this.setPieceAt(to, this.turn, PTypes.KNIGHTS);\n        break;\n      case MoveTypes.BPROMO:\n        this.setPieceAt(to, this.turn, PTypes.BISHOPS);\n        break;\n      case MoveTypes.RPROMO:\n        this.setPieceAt(to, this.turn, PTypes.ROOKS);\n        break;\n      case MoveTypes.QPROMO:\n        this.setPieceAt(to, this.turn, PTypes.QUEENS);\n        break;\n    }\n  }\n\n  // unmakes special adjustments to the position based on the move type\n  reverseMoveType(from, to, type) {\n    switch(type) {\n      case MoveTypes.NORMAL:\n      case MoveTypes.DBL_PPUSH:\n        return;\n      case MoveTypes.CSTL_KING:\n        this.movePiece(from + 1, from + 3, this.turn, PTypes.ROOKS);\n        break;\n      case MoveTypes.CSTL_QUEEN:\n        this.movePiece(from - 1, from - 4, this.turn, PTypes.ROOKS);\n        break;\n      case MoveTypes.EP_CAPT:\n        let capturedPos = to - (PUtils[PTypes.PAWNS].DIRS[this.turn] * 8);\n        this.setPieceAt(capturedPos, this.opp, PTypes.PAWNS);\n        break;\n      case MoveTypes.NPROMO:\n        this.clearPieceAt(to, this.turn, PTypes.KNIGHTS);\n        break;\n      case MoveTypes.BPROMO:\n        this.clearPieceAt(to, this.turn, PTypes.BISHOPS);\n        break;\n      case MoveTypes.RPROMO:\n        this.clearPieceAt(to, this.turn, PTypes.ROOKS);\n        break;\n      case MoveTypes.QPROMO:\n        this.clearPieceAt(to, this.turn, PTypes.QUEENS);\n        break;\n    }\n  }\n\n  // moves piece from one position to another\n  movePiece(from, to, color, pieceType) {\n    this.clearPieceAt(from, color, pieceType);\n    this.setPieceAt(to, color, pieceType);\n  }\n\n  // marks the given color and pieceType BBs as occupied at the specified position\n  setPieceAt(pos, color, pieceType) {\n    this.pieces[color].setBit(pos);\n    this.pieces[pieceType].setBit(pos);\n    this.pTypesLocations[pos] = pieceType;\n    this.pPosHash ^= piecePosHashKeys[pos][pieceType][color];\n  }\n\n  // marks the given color and pieceType BBs as unoccupied at the specified position\n  clearPieceAt(pos, color, pieceType) {\n    this.pieces[color].clearBit(pos);\n    this.pieces[pieceType].clearBit(pos);\n    this.pTypesLocations[pos] = null;\n    this.pPosHash ^= piecePosHashKeys[pos][pieceType][color];\n  }\n\n  //\n  isNonStalemateDraw() {\n    return this.isMoveLimitExceeded() || this.isThreeMoveRepetition();\n  }\n\n  isThreeMoveRepetition() {\n    const lastMoveIdx = this.prevMoves.length - 1;\n    if (lastMoveIdx < 5) {\n      return false;\n    }\n\n    return (this.prevMoves[lastMoveIdx] ===\n            this.prevMoves[lastMoveIdx - 2] ===\n            this.prevMoves[lastMoveIdx - 4]) &&\n           (this.prevMoves[lastMoveIdx - 1] ===\n             this.prevMoves[lastMoveIdx - 3] ===\n             this.prevMoves[lastMoveIdx - 5]);\n  }\n\n  isMoveLimitExceeded() {\n    return this.prevMoves.length >= 100;\n  }\n\n  // renders BBs for all piece sets\n  renderPieceSets() {\n    Object.keys(this.pieces).forEach((boardType) => {\n      console.log(boardType);\n      this.pieces[boardType].render();\n    });\n  }\n\n  getBoardArr() {\n    return pieceSetsToArray(this.pieces);\n  }\n\n\n  // renders the board for the current position\n  renderBoardArr() {\n    const boardArr = pieceSetsToArray(this.pieces);\n\n    let pos;\n    let rowStr = '';\n    console.log(\"\\n\");\n    for (pos = 63; pos >= 0; pos--) {\n      rowStr = boardArr[pos] + rowStr;\n      if (pos % 8 === 0) {\n        console.log(rowStr);\n        rowStr = '';\n      }\n    }\n    console.log(\"\\n\");\n  }\n}\n\nmodule.exports = Position;\n\n\n\n// WEBPACK FOOTER //\n// ./js/position/index.js","function popCount32(int) {\n\tint -= (int >>> 1) & 0x55555555;\n\tint = (int & 0x33333333) + ((int >>> 2) & 0x33333333);\n\treturn ((int + (int >>> 4) & 0xF0F0F0F) * 0x1010101) >>> 24;\n}\n\nfunction bitScanForward32(int) {\n  return popCount32((int & -int) - 1);\n}\n\nfunction generateMSBTable(max) {\n  let res = [];\n  let int;\n  for (int = 1; int <= max; int++) {\n    res[int] = Math.floor(Math.log2(int));\n  }\n\n  return res;\n}\n\nconst mostSigBitTable = generateMSBTable(255);\n\nfunction bitScanReverse32(int) {\n  let res = 0;\n  if (int > 0xFFFF) {\n    int >>>= 16;\n    res += 16;\n  }\n\n  if (int > 0xFF) {\n    int >>>= 8;\n    res += 8;\n  }\n\n  return res + mostSigBitTable[int];\n}\n\nfunction clearLeastSigBit32(int) {\n  return (int & (int - 1));\n}\n\nmodule.exports = {\n  popCount32,\n  bitScanForward32,\n  bitScanReverse32,\n  clearLeastSigBit32\n};\n\n\n\n// WEBPACK FOOTER //\n// ./js/bitboard/utils.js","const BitBoard = require('./bitboard.js');\n\n// this file includes static sets of bitboards that\n// are commonly used throughout the program\n\nconst FULL_BOARD = new BitBoard().not();\n\nconst COLS = function() {\n  let colIdx = 0;\n  let cols = [];\n  while (colIdx < 8) {\n    cols.push(BitBoard.fromCol(colIdx));\n    colIdx++;\n  }\n\n  return cols;\n}();\n\n\nconst ROWS = function() {\n  let rowIdx = 0;\n  let rows = [];\n  while (rowIdx < 8) {\n    rows.push(BitBoard.fromRow(rowIdx));\n    rowIdx++;\n  }\n\n  return rows;\n}();\n\n\nconst DIAGS = function() {\n  const diags = [];\n  let pos = 56;\n\n  while (pos >= 0) {\n    diags.push(BitBoard.upperRightDiag(pos));\n    pos -= 8;\n  }\n\n  pos = 1;\n\n  while (pos < 8) {\n    diags.push(BitBoard.upperRightDiag(pos));\n    pos++;\n  }\n\n  return diags;\n}();\n\n\nconst ANTI_DIAGS = function() {\n  const antiDiags = [];\n  let pos = 0;\n\n  while (pos < 8) {\n    antiDiags.push(BitBoard.upperLeftDiag(pos));\n    pos++;\n  }\n\n  pos = 15;\n  while (pos < 64) {\n    antiDiags.push(BitBoard.upperLeftDiag(pos));\n    pos += 8;\n  }\n\n  return antiDiags;\n}();\n\nconst NORTH_OF_ROW = function() {\n  const res = [];\n  let bb = FULL_BOARD;\n  let idx = 0;\n\n  while (idx <= 7) {\n    bb = bb.xor(ROWS[idx]);\n    res.push(bb);\n    idx++;\n  }\n\n  return res;\n}();\n\nconst SOUTH_OF_ROW = function() {\n  const res = [];\n  let bb = new BitBoard();\n  let idx = 0;\n\n  while (idx <= 7) {\n    res.push(bb);\n    bb = bb.or(ROWS[idx]);\n    idx++;\n  }\n\n  return res;\n}();\n\nconst EAST_OF_COL = function() {\n  const res = [];\n  let bb = FULL_BOARD;\n  let idx = 0;\n\n  while (idx <= 7) {\n    bb = bb.xor(COLS[idx]);\n    res.push(bb);\n    idx++;\n  }\n\n  return res;\n}();\n\nconst WEST_OF_COL = function() {\n  const res = [];\n  let bb = new BitBoard();\n  let idx = 0;\n\n  while (idx <= 7) {\n    res.push(bb);\n    bb = bb.or(COLS[idx]);\n    idx++;\n  }\n\n  return res;\n}();\n\nmodule.exports = {\n  FULL_BOARD,\n  COLS,\n  ROWS,\n  DIAGS,\n  ANTI_DIAGS,\n  NORTH_OF_ROW,\n  SOUTH_OF_ROW,\n  EAST_OF_COL,\n  WEST_OF_COL\n};\n\n\n\n// WEBPACK FOOTER //\n// ./js/bitboard/masks.js","const { Types } = require('./constants.js');\n\nclass Move {\n  constructor(from, to, type, piece, captPiece) {\n    this.val = (((type & 0xf) << 18) >>> 0) |\n               ((((captPiece || 0) & 0x7) << 15) >>> 0) |\n               (((piece & 0x7) << 12) >>> 0) |\n               (((from & 0x3f) << 6) >>> 0) |\n               ((to & 0x3f) >>> 0) >>> 0;\n  }\n\n  // for testing purposes\n  static fromVal(val) {\n    const newMove = new Move(0, 0, 0, 0, 0);\n    newMove.val = val;\n    return newMove;\n  }\n\n  getData() {\n    return {\n      from: this.getFrom(),\n      to: this.getTo(),\n      type: this.getType(),\n      pieceType: this.getPiece(),\n      captPieceType: this.getCaptPiece(),\n      isPromo: this.isPromo(),\n      isCastle: this.isCastle()\n    };\n  }\n\n  getFrom() {\n    return (this.val >>> 6) & 0x3f;\n  }\n\n  getTo() {\n    return this.val & 0x3f;\n  }\n\n  getPiece() {\n    return (this.val >>> 12) & 0x7;\n  }\n\n  getCaptPiece() {\n    return (this.val >>> 15) & 0x7;\n  }\n\n  getType() {\n    return this.val >>> 18;\n  }\n\n  isPromo() {\n    return [Types.NPROMO, Types.BPROMO,\n            Types.RPROMO, Types.QPROMO].includes(this.getType());\n  }\n\n  isCastle() {\n    return [Types.CSTL_KING, Types.CSTL_QUEEN].includes(this.getType());\n  }\n}\n\nmodule.exports = { Move, MoveTypes: Types };\n\n\n\n// WEBPACK FOOTER //\n// ./js/move/index.js","// https://www.chessprogramming.org/Encoding_Moves#From-To_Based\n// require('../string_contants.js');\n\nconst typesArr = ['NORMAL', 'DBL_PPUSH',\n                  'CSTL_KING', 'CSTL_QUEEN',\n                  'EP_CAPT', 'NPROMO',\n                  'BPROMO','RPROMO', 'QPROMO'];\n\nconst Types = typesArr.reduce((res, type, idx) => {\n  res[type] = idx;\n  return res;\n}, {});\n\nmodule.exports = { Types };\n\n\n\n// WEBPACK FOOTER //\n// ./js/move/constants.js","const stepMove = require('./movements/step_move.js');\nconst { BBMasks } = require('../bitboard');\nconst { Colors } = require('./constants.js');\n\nconst DIRS = {\n  [Colors.WHITE]: 1,\n  [Colors.BLACK]: -1\n};\n\nconst INIT_MASKS = {\n  [Colors.WHITE]: BBMasks.ROWS[1],\n  [Colors.BLACK]: BBMasks.ROWS[6]\n};\n\nconst Pawns = {\n  value: 100,\n  positionValues: [\n\t\t0, 0, 0, 0, 0, 0, 0, 0,\n\t\t50, 50, 50, 50, 50, 50, 50, 50,\n\t\t10, 10, 20, 30, 30, 20, 10, 10,\n\t\t5, 5, 10, 25, 25, 10, 5, 5,\n\t\t0, 0, 0, 20, 20, 0, 0, 0,\n\t\t5, -5, -10, 0, 0, -10, -5, 5,\n\t\t5, 10, 10, -20, -20, 10, 10, 5,\n\t\t0, 0, 0, 0, 0, 0, 0, 0\n\t],\n  DIRS,\n  PROMO_MASKS: { [Colors.WHITE]: BBMasks.ROWS[7],\n                 [Colors.BLACK]: BBMasks.ROWS[0]\n               },\n  attacksLeft: (color, positions, oppPieces) => {\n    return stepMove(positions, DIRS[color], -DIRS[color]).and(oppPieces);\n  },\n  attacksRight: (color, positions, oppPieces) => {\n    return stepMove(positions, DIRS[color], DIRS[color]).and(oppPieces);\n  },\n  singlePush: (color, positions, notOccupied) => {\n    return stepMove(positions, DIRS[color], 0).and(notOccupied);\n  },\n  doublePush: (color, positions, notOccupied) => {\n    const onePush = stepMove(positions.and(INIT_MASKS[color]), DIRS[color], 0).and(notOccupied);\n    return stepMove(onePush, DIRS[color], 0).and(notOccupied);\n  }\n};\n\nmodule.exports = Pawns;\n\n\n\n// WEBPACK FOOTER //\n// ./js/pieces/pawns.js","const { KNIGHT_MOVES } = require('./movements/masks.js');\n\nconst Knight = {\n  value: 325,\n  positionValues: [\n\t\t-50, -40, -30, -30, -30, -30, -40, -50,\n\t\t-40, -20, 0, 0, 0, 0, -20, -40,\n\t\t-30, 0, 10, 15, 15, 10, 0, -30,\n\t\t-30, 5, 15, 20, 20, 15, 5, -30,\n\t\t-30, 0, 15, 20, 20, 15, 0, -30,\n\t\t-30, 5, 10, 15, 15, 10, 5, -30,\n\t\t-40, -20, 0, 5, 5, 0, -20, -40,\n\t\t-50, -40, -30, -30, -30, -30, -40, -50\n\t],\n  moves: (position, notOwnPieces) => {\n    return KNIGHT_MOVES[position].and(notOwnPieces);\n  }\n};\n\nmodule.exports = Knight;\n\n\n\n// WEBPACK FOOTER //\n// ./js/pieces/knight.js","const { diag } = require('./movements/slide_moves.js');\n\nconst Bishop = {\n  value: 325,\n  positionValues: [\n\t\t-20, -10, -10, -10, -10, -10, -10, -20,\n\t\t-10, 0, 0, 0, 0, 0, 0, -10,\n\t\t-10, 0, 5, 10, 10, 5, 0, -10,\n\t\t-10, 5, 5, 10, 10, 5, 5, -10,\n\t\t-10, 0, 10, 10, 10, 10, 0, -10,\n\t\t-10, 10, 10, 10, 10, 10, 10, -10,\n\t\t-10, 5, 0, 0, 0, 0, 5, -10,\n\t\t-20, -10, -10, -10, -10, -10, -10, -20\n\t],\n  moves: (position, occupied, notOwnPieces) => {\n    return diag(position, occupied, notOwnPieces);\n  }\n};\n\nmodule.exports = Bishop;\n\n\n\n// WEBPACK FOOTER //\n// ./js/pieces/bishop.js","const { horizVert } = require('./movements/slide_moves.js');\n\nconst Rook = {\n  value: 500,\n  positionValues:\t[\n\t\t0, 0, 0, 0, 0, 0, 0, 0,\n\t\t5, 10, 10, 10, 10, 10, 10, 5,\n\t\t-5, 0, 0, 0, 0, 0, 0, -5,\n\t\t-5, 0, 0, 0, 0, 0, 0, -5,\n\t\t-5, 0, 0, 0, 0, 0, 0, -5,\n\t\t-5, 0, 0, 0, 0, 0, 0, -5,\n\t\t-5, 0, 0, 0, 0, 0, 0, -5,\n\t\t0, 0, 0, 5, 5, 0, 0, 0\n\t],\n  moves: (position, occupied, notOwnPieces) => {\n    return horizVert(position, occupied, notOwnPieces);\n  },\n};\n\nmodule.exports = Rook;\n\n\n\n// WEBPACK FOOTER //\n// ./js/pieces/rook.js","const { diag, horizVert } = require('./movements/slide_moves.js');\n\nconst Queen = {\n  value: 1050,\n  positionValues: [\n\t\t-20, -10, -10, -5, -5, -10, -10, -20,\n\t\t-10, 0, 0, 0, 0, 0, 0, -10,\n\t\t-10, 0, 5, 5, 5, 5, 0, -10,\n\t\t-5, 0, 5, 5, 5, 5, 0, -5,\n\t\t0, 0, 5, 5, 5, 5, 0, -5,\n\t\t-10, 5, 5, 5, 5, 5, 0, -10,\n\t\t-10, 0, 5, 0, 0, 0, 0, -10,\n\t\t-20, -10, -10, -5, -5, -10, -10, -20\n\t],\n  moves: (position, occupied, notOwnPieces) => {\n    return diag(position, occupied, notOwnPieces).or(horizVert(position, occupied, notOwnPieces));\n  }\n};\n\nmodule.exports = Queen;\n\n\n\n// WEBPACK FOOTER //\n// ./js/pieces/queen.js","const { BBMasks } = require('../bitboard');\nconst Dirs = require('./movements/dir_constants.js');\nconst { KING_MOVES, SLIDE_MOVES } = require('./movements/masks.js');\nconst { Colors } = require('./constants.js');\n\nconst INIT_POS = {\n  [Colors.BLACK]: 60,\n  [Colors.WHITE]: 4\n};\n\nconst King = {\n  value: 40000,\n  positionValues:\t[\n\t\t-30, -40, -40, -50, -50, -40, -40, -30,\n\t\t-30, -40, -40, -50, -50, -40, -40, -30,\n\t\t-30, -40, -40, -50, -50, -40, -40, -30,\n\t\t-30, -40, -40, -50, -50, -40, -40, -30,\n\t\t-20, -30, -30, -40, -40, -30, -30, -20,\n\t\t-10, -20, -20, -20, -20, -20, -20, -10,\n\t\t 20, 20, 0, 0, 0, 0, 20, 20,\n\t\t 20, 30, 10, 0, 0, 10, 30, 20\n\t],\n  INIT_POS,\n  moves: (position, notOwnPieces) => {\n    return KING_MOVES[position].and(notOwnPieces);\n  },\n  canCastle: (color, dir, notOccupied) => {\n    const castleSlide = SLIDE_MOVES[INIT_POS[color]][dir].and(notOccupied);\n    if (dir === Dirs.EAST) {\n      return castleSlide.popCount() === 2;\n    } else {\n      return castleSlide.popCount() === 3;\n    }\n  }\n};\n\nmodule.exports = King;\n\n\n\n// WEBPACK FOOTER //\n// ./js/pieces/king.js","const { Types, Colors, PieceTypeLetters } = require('./constants.js');\n\nfunction pieceToLetter(type, color) {\n  if (color === Colors.WHITE) {\n    return PieceTypeLetters[type];\n  } else if (color === Colors.BLACK) {\n    return PieceTypeLetters[type].toUpperCase();\n  } else {\n    return '?';\n  }\n}\n\nfunction letterToColor(letter) {\n  return letter.toUpperCase() === letter ? Colors.BLACK : Colors.WHITE;\n}\n\nfunction letterToType(letter) {\n  const pieceTypes = Object.values(Types);\n  let pieceType;\n  let idx;\n\n  for (idx = 0; idx < pieceTypes.length; idx++) {\n    if (PieceTypeLetters[pieceTypes[idx]] === letter.toLowerCase()) {\n      pieceType = pieceTypes[idx];\n      break;\n    }\n  }\n\n  return pieceType;\n}\n\nmodule.exports = { pieceToLetter, letterToColor, letterToType };\n\n\n\n// WEBPACK FOOTER //\n// ./js/pieces/conversions.js","const { Types } = require('./constants.js');\n\nfunction eachPieceType(cb) {\n  let type;\n  for (type = Types.PAWNS; type <= Types.KINGS; type++) {\n    cb(type);\n  }\n}\n\nmodule.exports = eachPieceType;\n\n\n\n// WEBPACK FOOTER //\n// ./js/pieces/each_piece_type.js","const { PTypes, PUtils, Colors, eachPieceType } = require('../pieces');\n\n// we store zobrist hash values as signed 32bit integers\n// if we limited the range of values to signed 32bits,\n// there likely wouldn't be enough variation to mitigate hashing collisions\n\nfunction randSigned32Bit() {\n  const positive = [true, false][Math.floor(Math.random() * 2)];\n  if (positive) {\n    return Math.floor(Math.random() * (Math.pow(2, 31) - 1));\n  } else {\n    return -Math.floor(Math.random() * (Math.pow(2, 31)));\n  }\n}\n\nconst piecePosHashKeys = function() {\n  let res = [];\n  let pos;\n  let newPosKeys;\n\n  const addPTypeKeys = (pType) => {\n    res[pos][pType] = {};\n    res[pos][pType][Colors.WHITE] = randSigned32Bit();\n    res[pos][pType][Colors.BLACK] = randSigned32Bit();\n  };\n\n  for (pos = 0; pos < 64; pos++) {\n    res[pos] = {};\n    eachPieceType((pType) => addPTypeKeys(pType));\n  }\n\n  return res;\n}();\n\nconst epPosHashKeys = function() {\n  let res = {};\n  let pos;\n\n  // can only en passant onto 3rd or 6th row\n  for (pos = 16; pos <= 23; pos++) {\n    res[pos] = randSigned32Bit();\n  }\n\n  for (pos = 40; pos <= 47; pos++) {\n    res[pos] = randSigned32Bit();\n  }\n\n  return res;\n}();\n\nconst castleHashKeys = function() {\n  let res = [];\n  let rightsIdx;\n\n  for (rightsIdx = 0; rightsIdx < 4; rightsIdx++) {\n    res[rightsIdx] = randSigned32Bit();\n  }\n\n  return res;\n}();\n\nconst turnHashKeys = function() {\n  const res = [];\n  res[Colors.WHITE] = randSigned32Bit();\n  res[Colors.BLACK] = randSigned32Bit();\n\n  return res;\n}();\n\nmodule.exports = { piecePosHashKeys, epPosHashKeys, castleHashKeys, turnHashKeys };\n\n\n\n// WEBPACK FOOTER //\n// ./js/position/zhash_constants.js","const { PieceConv, PTypes, Colors } = require('../../pieces');\nconst { BitBoard } = require('../../bitboard');\n\nconst xx = \"_\";\n\nconst WP = PieceConv.pieceToLetter(PTypes.PAWNS, Colors.WHITE);\nconst WN = PieceConv.pieceToLetter(PTypes.KNIGHTS, Colors.WHITE);\nconst WB = PieceConv.pieceToLetter(PTypes.BISHOPS, Colors.WHITE);\nconst WR = PieceConv.pieceToLetter(PTypes.ROOKS, Colors.WHITE);\nconst WQ = PieceConv.pieceToLetter(PTypes.QUEENS, Colors.WHITE);\nconst WK = PieceConv.pieceToLetter(PTypes.KINGS, Colors.WHITE);\n\nconst BP = PieceConv.pieceToLetter(PTypes.PAWNS, Colors.BLACK);\nconst BN = PieceConv.pieceToLetter(PTypes.KNIGHTS, Colors.BLACK);\nconst BB = PieceConv.pieceToLetter(PTypes.BISHOPS, Colors.BLACK);\nconst BR = PieceConv.pieceToLetter(PTypes.ROOKS, Colors.BLACK);\nconst BQ = PieceConv.pieceToLetter(PTypes.QUEENS, Colors.BLACK);\nconst BK = PieceConv.pieceToLetter(PTypes.KINGS, Colors.BLACK);\n\nconst defaultBoardArr = [\nWR, WN, WB, WQ, WK, WB, WN, WR,\nWP, WP, WP, WP, WP, WP, WP, WP,\nxx, xx, xx, xx, xx, xx, xx, xx,\nxx, xx, xx, xx, xx, xx, xx, xx,\nxx, xx, xx, xx, xx, xx, xx, xx,\nxx, xx, xx, xx, xx, xx, xx, xx,\nBP, BP, BP, BP, BP, BP, BP, BP,\nBR, BN, BB, BQ, BK, BB, BN, BR\n];\n\nfunction createEmptyBoardArr() {\n  const res = [];\n\n  let count = 0;\n  while (count <= 64) {\n    res.push(xx);\n    count++;\n  }\n\n  return res;\n}\n\nfunction pieceSetsToArray(pieces) {\n  const res = createEmptyBoardArr();\n\n  const pieceTypes = Object.values(PTypes);\n  pieceTypes.forEach((type) => {\n    pieces[type].dup().pop1Bits((pos) => {\n      if (pieces[Colors.WHITE].hasSetBit(pos)) {\n        res[pos] = PieceConv.pieceToLetter(type, Colors.WHITE);\n      } else {\n        res[pos] = PieceConv.pieceToLetter(type, Colors.BLACK);\n      }\n    });\n  });\n\n  return res;\n}\n\nfunction pieceSetsFromArray(array = defaultBoardArr) {\n  const pieces = {};\n\n  Object.values(PTypes).forEach((type) => {\n    pieces[type] = new BitBoard();\n  });\n\n  Object.values(Colors).forEach((color) => {\n    pieces[color] = new BitBoard();\n  });\n\n\n  let pos;\n  let type;\n  let color;\n  for (pos = 0; pos < array.length; pos++) {\n    if (array[pos] !== xx) {\n      type = PieceConv.letterToType(array[pos]);\n      color = PieceConv.letterToColor(array[pos]);\n      pieces[type].setBit(pos);\n      pieces[color].setBit(pos);\n    }\n  }\n\n  return pieces;\n}\n\nmodule.exports = { pieceSetsToArray, pieceSetsFromArray };\n\n\n\n// WEBPACK FOOTER //\n// ./js/position/utils/array_conversions.js","const { PTypes, PUtils,\n        Colors, Dirs,\n        eachPieceType } = require('../pieces');\nconst TransposTable = require('./transpos_table');\nconst PerfMonitor = require('./perf_monitor');\n\nclass AI {\n  constructor() {\n    this.thinkingTime = 1000;\n  }\n\n  setThinkingTime(thinkingTime) {\n    this.thinkingTime = thinkingTime;\n  }\n\n  scoreMaterial(position, color) {\n    let score = 0;\n    eachPieceType((pieceType) => {\n      score += position.getColorPieceSet(color, pieceType).popCount() *\n               PUtils[pieceType].value;\n    });\n\n    return score;\n  }\n\n  scorePiecePositions(position, color) {\n    let score = 0;\n    let piecePositions;\n    eachPieceType((pieceType) => {\n      piecePositions = position.getColorPieceSet(color, pieceType);\n      piecePositions.dup().pop1Bits((pos) => {\n        score += PUtils[pieceType].positionValues[color ? pos : 56 ^ pos];\n      });\n    });\n\n    return score;\n  }\n\n  evaluate(position) {\n    let materialScore = this.scoreMaterial(position, position.turn) -\n                        this.scoreMaterial(position, position.opp);\n\n    let piecePositionScore = this.scorePiecePositions(position, position.turn) -\n                             this.scorePiecePositions(position, position.opp);\n\n    return materialScore + piecePositionScore;\n  }\n\n  chooseMove(position, availableMoves) {\n    this.perfMonitor = new PerfMonitor();\n    this.transPosTable = new TransposTable();\n\n    this.endTime = Date.now() + this.thinkingTime;\n    this.perfMonitor.setStartTime();\n\n    this.maxDepth = 1;\n    while (Date.now() < this.endTime && this.maxDepth < 30) {\n      this.negaMax(position, this.maxDepth, -Infinity, Infinity);\n      this.maxDepth++;\n    }\n\n    if (this.maxDepth >= 30) {\n      console.log('Approaching draw...');\n    } else {\n      if (!this.perfMonitor.depth) { this.perfMonitor.setDepth(this.maxDepth); }\n      this.perfMonitor.setEndTime();\n      this.perfMonitor.printResults();\n    }\n\n    const currNodeEntry = this.transPosTable.getEntry(position.getHash());\n    if (currNodeEntry && currNodeEntry.bestMove) {\n      return currNodeEntry.bestMove;\n    } else {\n      return availableMoves[Math.floor(Math.random() * availableMoves.length)];\n    }\n\n    // return this.transPosTable.getEntry(position.getHash()).bestMove;\n  }\n\n  quiescenceSearch(position, alpha, beta) {\n    if (Date.now() > this.endTime) {\n      this.perfMonitor.setDepth(this.maxDepth - 1);\n      return 'early exit';\n    }\n    this.perfMonitor.logQuiescentNode();\n    const standPatVal = this.evaluate(position);\n\n    if (standPatVal >= beta) {\n      return beta;\n    } else if (standPatVal > alpha) {\n      alpha = standPatVal;\n    }\n\n    let inCheck = position.inCheck(position.turn);\n    // include quiet moves (ie non captures) only if the king is in check;\n    const moves = this.sortMoves(position.generatePseudoMoves(inCheck));\n    let moveIdx;\n    let score;\n\n    for (moveIdx = 0; moveIdx < moves.length; moveIdx++) {\n      if (position.makeMove(moves[moveIdx])) {\n        score = -this.quiescenceSearch(position, -beta, -alpha);\n        position.unmakePrevMove();\n\n        if (score >= beta) { return beta; }\n        if (score > alpha) { alpha = score; }\n      }\n    }\n\n    return alpha;\n  }\n\n  negaMax(position, depth, alpha, beta) {\n    if (Date.now() > this.endTime) {\n      this.perfMonitor.setDepth(this.maxDepth - 1);\n      return 'early exit';\n    }\n\n    const prevAlpha = alpha;\n    const currHash = position.getHash();\n    const entry = this.transPosTable.getEntry(currHash);\n    if (entry && entry.depth >= depth) {\n      this.perfMonitor.logTableHit();\n      switch (entry.type) {\n        case 'exact':\n          return entry.score;\n        case 'lowerbound':\n          alpha = Math.max(alpha, entry.score);\n          break;\n        case 'upperbound':\n          beta = Math.min(beta, entry.score);\n          break;\n      }\n      if (alpha >= beta) { return entry.score; }\n    }\n\n    if (depth === 0) {\n      return this.quiescenceSearch(position, alpha, beta);\n    }\n\n    this.perfMonitor.logMainSearchNode();\n\n    let prevBestMove = (entry && entry.bestMove) ? entry.bestMove : null;\n\n    const moves = this.sortMoves(position.generatePseudoMoves(), prevBestMove);\n    let moveIdx;\n    let canMove = false;\n    let result;\n    let score;\n    let bestScore = -Infinity;\n    let bestMove = null;\n\n    for (moveIdx = 0; moveIdx < moves.length; moveIdx++) {\n      if (position.makeMove(moves[moveIdx])) {\n        canMove = true;\n        result = this.negaMax(position, depth - 1, -beta, -alpha);\n        position.unmakePrevMove();\n        if (result === 'early exit') {\n          return result;\n        }\n        score = -result;\n        if (score > bestScore) {\n          bestScore = score;\n          bestMove = moves[moveIdx];\n          if (score > alpha) {\n            alpha = score;\n          }\n        }\n        if (alpha >= beta) { break; }\n      }\n    }\n\n    if (!canMove) {\n      if (position.inCheck(position.turn)) {\n        bestScore = -PUtils[PTypes.KINGS].value;\n      } else {\n        bestScore = 0;\n      }\n    }\n\n\n    this.transPosTable.storeEntry(bestScore, bestMove, prevAlpha, beta, depth, currHash);\n    return bestScore;\n  }\n\n  sortMoves(moves, prevBestMove) {\n    function calculateScore(move) {\n      if (prevBestMove && move.val === prevBestMove.val) {\n        return 10000000;\n      }\n      let score = move.getCaptPiece()? ((1 + move.getCaptPiece()) / (1 + move.getPiece())): 0;\n    \tscore = score * 6 + move.getPiece();\n    \tscore = score * 16 + move.getType();\n    \tscore = score * 64 + move.getTo();\n    \tscore = score * 64 + move.getFrom();\n\n      return score;\n    }\n\n    moves.sort((moveA, moveB) => calculateScore(moveB) - calculateScore(moveA));\n    return moves;\n  }\n}\n\nmodule.exports = AI;\n\n\n\n// WEBPACK FOOTER //\n// ./js/ai/index.js","class TransposTable {\n  constructor() {\n    this.size = 10000;\n    this.table = new Array(this.size);\n  }\n\n  getEntry(key) {\n    const index = key % this.size;\n    if (this.table[index] && this.table[index].key === key) {\n      return this.table[index];\n    } else {\n      return null;\n    }\n  }\n\n  storeEntry(score, bestMove, alpha, beta, depth, key) {\n    const index = key % this.size;\n    if (this.table[index] && this.table[index].depth > depth) {\n      return;\n    } else {\n      this.table[index] = {\n        score,\n        bestMove,\n        type: this.determineScoreType(score, alpha, beta),\n        depth,\n        key\n      };\n    }\n  }\n\n  determineScoreType(score, alpha, beta) {\n    if (score <= alpha) {\n      return 'upperbound';\n    } else if (score >= beta) {\n      return 'lowerbound';\n    } else {\n      return 'exact';\n    }\n  }\n}\n\nmodule.exports = TransposTable;\n\n\n\n// WEBPACK FOOTER //\n// ./js/ai/transpos_table.js","const { PieceConv, Colors } = require('../pieces');\nconst { ColsFiles, FilesCols,\n        RowsRanks, RanksRows } = require('./constants.js');\n\nfunction posFromFileRank(fileRank) {\n  const [file, rank] = fileRank.split('');\n  return (RanksRows[rank] * 8) + FilesCols[file];\n}\n\nfunction fileRankFromPos(pos) {\n  return ColsFiles[pos % 8] + (RowsRanks[Math.floor(pos / 8)]);\n}\n\n// if the row and col are either both even or both odd\nfunction isDarkSquare(fileRank) {\n  const [file, rank] = fileRank.split('');\n  const row = RanksRows[rank];\n  const col = FilesCols[file];\n  return (row % 2 === 0 && col % 2 === 0) ||\n         (row % 2 === 1 && col % 2 === 1);\n}\n\nfunction formatMoves(moveList) {\n  let color;\n  return moveList.map((move, idx) => {\n    color = (idx % 2 === 0) ? Colors.WHITE : Colors.BLACK;\n    return `${PieceConv.pieceToLetter(move.getPiece(), color)} ` +\n           `${fileRankFromPos(move.getFrom())} -> ` +\n           `${fileRankFromPos(move.getTo())}`;\n  });\n}\n\nfunction formatTime(millisecs) {\n  let timeStr = (millisecs / 1000).toString();\n  if (timeStr.indexOf('.') == -1) timeStr += '.';\n\n  while (timeStr.length < timeStr.indexOf('.') + 3) {\n    timeStr += '0';\n  }\n\n  while (timeStr.length > timeStr.indexOf('.') + 3) {\n    timeStr = timeStr.slice(0, timeStr.length - 1);\n  }\n\n  return timeStr;\n}\n\nmodule.exports = {\n  posFromFileRank,\n  fileRankFromPos,\n  isDarkSquare,\n  formatMoves,\n  formatTime\n};\n\n\n\n// WEBPACK FOOTER //\n// ./js/ui/util.js","class PerfMonitor {\n  constructor() {\n    this.mainSearchNodes = 0;\n    this.qSearchNodes = 0;\n    this.tableHits = 0;\n  }\n\n  setStartTime() {\n    this.startTime = new Date();\n  }\n\n  setEndTime() {\n    this.endTime = new Date();\n  }\n\n  setDepth(depth) {\n    this.depth = depth;\n  }\n\n  printResults() {\n    console.log('---------');\n\n    if (this.startTime && this.endTime) {\n      console.log(`Run Time: ${this.endTime - this.startTime}`);\n    }\n\n    console.log(`Depth:  ${this.depth}`);\n    console.log(`Total Explored Positions: ${this.qSearchNodes + this.mainSearchNodes}`);\n    console.log(`Main Search Nodes: ${this.mainSearchNodes}`);\n    console.log(`Quiescent Search Nodes: ${this.qSearchNodes}`);\n    console.log(`Table Hits: ${this.tableHits}`);\n\n    console.log('---------');\n  }\n\n  logTableHit() {\n    this.tableHits++;\n  }\n\n  logMainSearchNode() {\n    this.mainSearchNodes++;\n  }\n\n  logQuiescentNode() {\n    this.qSearchNodes++;\n  }\n}\n\nmodule.exports = PerfMonitor;\n\n\n\n// WEBPACK FOOTER //\n// ./js/ai/perf_monitor.js"],"sourceRoot":""}